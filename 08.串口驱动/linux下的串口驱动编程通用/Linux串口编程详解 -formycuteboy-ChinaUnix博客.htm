<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/ga.js" async="" type="text/javascript"></script><script>
var ua = navigator.userAgent.toLowerCase();
if(ua.match(/MicroMessenger/i)=="micromessenger") {
    location.href='http://blog.chinaunix.net/article.php?url='+ window.location.href;
}
</script>
        <style>
    .Blog_nav1_2 a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/style.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/qqFace.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/asyncbox.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/pager.css">
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery_002.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery_003.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/AsyncBox.js"></script>
<title>Linux串口编程详解 -formycuteboy-ChinaUnix博客</title>
<meta name="description" content="串口本身，标准和硬件

	
		什么是串行通信
	
	
		什么是RS-232
		
			
				信号定义
			
		
	
	
		异步通讯
		
			
				什么是全双工和半双工
			
	">
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/h600.js"></script>

<script type="text/javascript">
if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))){
	try{
		if(!/iPad/i.test(navigator.userAgent)){
			var oldurl=window.location.href;
			var wapUrl= oldurl.replace('blog.chinaunix.net', "m.blog.chinaunix.net") ;
			window.location.href = wapUrl;
		}
	}catch(e){}
}
</script>


<script language="javascript">
//用户是否在线
var isOnLine = '';
$(document).ready(function(){
	var blog = {'name': '', 'name_url': '', 'brief': ''};
	//消息通知显示和隐藏控制
	$('#show_message_slide_button').hover(
		function(){
			$('#message_slide_div').slideDown(100);											   
		},
		function(){
			
		}
	);

	$('#message_slide_div').hover(
		function(){
			
		},
		function(){
			$('#message_slide_div').slideUp(100);
		}
	);
	
	//编辑博客名
	$('#editbna').click(function(){
		blog.name = $('#bnaspan a').text();
		var val = '<input id="bnainput" type="text" style="float:left" value="" rel="' +$(this).attr('rel') + '" /><input id="bnasub" type="button" style="float:left" class="btn1"><input id="bnacanl" type="button" style="float:left" class="btn2"><div class="clear"></div>';
		$('#bnaspan').html(val);
		$('#bnainput').val(blog.name);
		$(this).parent().hide();
	});
	
	$('#bnasub').live('click', function(){
	    var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		var name = $('#bnainput').val();
		if(name != blog.name){
	        $.ajax({
			    type: "POST",
			    url: rel.url,	
			    data: {
				    'name' : name
			    },
			    success:function(data){
				    if(data == 0){
						$('#bnaspan').html(blog.name);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }else{
						$('#bnaspan').html(data);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }
					$('#editbna').parent().show();
				}
			});
		}else{
		    $('#bnaspan').text(blog.name).html();
			$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
			$('#editbna').parent().show();
		}
	});
	
	$('#bnacanl').live('click', function(){
		var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		$('#bnaspan').html('<a href="' + rel.href + '">' + blog.name + '</a>');
		$('#editbna').parent().show();
	});
	
	//编辑签名
	$('#editbrief').click(function(){
	    blog.brief = $('#briefem').text();
		var val = '<input id="brfinput" type="text" style="float:left" value="" rel="' + $(this).attr('rel') + '" /><input id="brfsub" style="float:left"  type="button" class="btn1"><input style="float:left"  id="brfcanl" type="button" class="btn2"><div class="clear"></div>';
		$('#briefem').html(val);
		$('#brfinput').val(blog.brief);
		$(this).parent().hide();
	});
	
	$('#brfsub').live('click', function(){
	    var url = $('#brfinput').attr('rel');
		var brief = $('#brfinput').val();
		if(brief != blog.brief){
	        $.ajax({
			    type: "POST",
			    url: url,	
			    data: {
				    'brief' : brief
			    },
			    success:function(data){
				    if(data == 0){
				        $('#briefem').html(blog.brief);
				    }else{
						$('#briefem').html(data);
				    }
					$('#editbrief').parent().show();
				}
			});
		}else{
		    $('#briefem').text(blog.brief).html();
			$('#editbrief').parent().show();
		}
	});
	
	$('#brfcanl').live('click', function(){
		$('#briefem').html(blog.brief);
		$('#editbrief').parent().show();
	});

});
</script>
<script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/share.js"></script><link href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/share_style0_16.css" rel="stylesheet"></head>
<body>
<div style="width: 100%; height: 1px; position: absolute; bottom: 0px; left: 0px; right: 0px;"></div><div id="pub_slot_Wed May 18 2016"><div style="visibility: hidden; opacity: 0;"><div><div><script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/a" charset="utf-8"></script><div style="display: block; box-sizing: border-box; border: 0px none; padding: 0px; margin: 0px; width: 300px; height: 250px; position: fixed; background-color: transparent; bottom: 0px; right: 0px; z-index: 2147483647;" id="adedcb85470fddd50815_eeed622ee4e2ef0f3a06_14635749360f606fef7d95_0"><iframe allowtransparency="true" marginheight="0" marginwidth="0" border="0" scrolling="no" seamless="" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/2WFMNx.htm" style="width:300px;height:250px;background-color:transparent;" frameborder="no" height="250" width="300"></iframe><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/Mapping.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/cm.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/verify.txt"><a style="position: absolute; width: 20px; height: 20px; bottom: 0px; right: 18px; color: transparent; display: block; border: 0px none; padding: 0px; margin: 0px; cursor: pointer; z-index: 100; background: transparent url(&quot;http://static.chaoliangyun.com/ad_rt.png&quot;) no-repeat scroll 0% 0%;"></a><div style="width: 20px; height: 20px; display: block; position: absolute; cursor: pointer; z-index: 100; background: transparent url(&quot;http://static.chaoliangyun.com/cl_rt.png&quot;) no-repeat scroll 0% 0%; bottom: 0px; right: 0px;"></div></div><script id="adedcb85470fddd50815_eeed622ee4e2ef0f3a06_14635749360f606fef7d95" type="text/javascript">_guanggao_pub= "adedcb85470fddd50815";_guanggao_slot= "eeed622ee4e2ef0f3a06";</script><script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/adedcb85470fddd50815" type="text/javascript"></script></div></div></div></div><div class="box">
  <!-- 一级导航 -->
  <div class="Blog_nav1">
    <div class="Blog_nav1_2"><a href="http://blog.chinaunix.net/"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/1.png"></a><a href="http://www.chinaunix.net/" class="Blog_a1">Chinaunix首页</a> | <a href="http://bbs.chinaunix.net/" target="_blank">论坛</a> | <a href="http://u.it168.com/vip/"><font color="red">认证专区</font></a> | <a href="http://blog.chinaunix.net/" target="_blank">博客</a><span class="Blog_span1"></span>
              <a href="http://blog.chinaunix.net/site/login.html" class="Blog_a1" onclick="linkto()">登录</a> | <a href="http://u.it168.com/Register?webid=5&amp;returnUrl=http%3A%2F%2Fblog.chinaunix.net%2Fuid-27041925-id-3998634.html" class="Blog_a1">注册</a>
          </div>
	<!--自动提示层-->
	<style>
	.bor13221{border:1px #bbb solid;width:206px;position:absolute;top:34px;left:0;background:#fff; z-index:9999;display:none}
	.bor13221 li{height:26px;line-height:26px;padding-left:6px;color:#555;font-size:14px;cursor:pointer;}
	.here{background:#f3f3f3;}
    </style>

	<!--自动提示层-->
    <div class="Blog_nav1_3" style="position:relative; z-index:9999;">
	 <div class="bor13221">
      <ul>
      </ul>
    </div>
	  <form action="/site/search.html" method="post">
		<input autocomplete="off" class="Blog_txt1" id="search_input_id" name="keywords" type="text">
		<select class="Bolg_sel1" name="type" id="search_type_blog">
		  <option selected="selected" value="blog">博文</option>
		  <option value="author">博主</option>
		</select>
		<input value="" name="submit" class="Blog_btn1" type="submit">
	 </form>
    </div>
    <div class="clear"></div>
    <div class="Blog_nav1_layer1" id="message_slide_div" style="display:none;">
	    <ul>
	    	<li><a href="http://blog.chinaunix.net/message/private.html">私人消息()</a></li>
	    	<li><a href="http://blog.chinaunix.net/message/system.html">系统消息()</a></li>
	    	<li><a href="http://blog.chinaunix.net/member/request.html">好友请求()</a></li>
	    	<li><a href="http://blog.chinaunix.net/member/notification.html">通知管理()</a></li>
	    </ul>
    </div>
  </div>
   <script type="text/javascript">
  	$(function(){
		//点击添加进文本框
		$(".bor13221 li").live( 'click' , function(e){
			if ( e && e.stopPropagation )
			{
				//因此它支持W3C的stopPropagation()方法
				e.stopPropagation();
			}
			else
			{
				//否则，我们需要使用IE的方式来取消事件冒泡
				window.event.cancelBubble = true; 
			}
			$('#search_input_id').val($(this).text());
			$(".bor13221 ul").html('');
			$(".bor13221").hide();
		});
		$(".bor13221 ul li").live({
			mouseenter:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).addClass('here');
			},
			mouseleave:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).removeClass('here');
			}
		});
		//自动提示
		$('#search_input_id').keyup(function(event){
			//取消博主的提示
			var search_type_blog = $('#search_type_blog').val();
			if(search_type_blog == 'author') return false;

			var key = $(this).val();
			//获取键值
			var keycode = event.which; //38 上 40 下
			var count = $('.bor13221 ul li').length;
			if(key != '' && keycode != 38 && keycode != 40)
			{
				$.getJSON("http://api.sou.it168.com/autoWenKuCloud?jsoncallback=?",{"ty":"json","offset":"0","limit":"10","q":key}, function(result)
					{
						var arr = result.data;

						var html ='';
						for (i=0;i<arr.length ;i++ )   
						{   
							html += '<li>'+arr[i]+'</li>';
						} 
						
						$('.bor13221 ul').html(html);
						(arr.length > 1) ?  $(".bor13221").show() : $(".bor13221").hide();
					}
				);
			}
			else if(keycode == 38)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = count - 1;
					}
					else
					{
						if(curr_li_num == 0)
						{
							next_li_num = count - 1;
						}
						else
						{
							next_li_num = curr_li_num - 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
			else if(keycode == 40)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = 0;
					}
					else
					{
						if(curr_li_num == count - 1)
						{
							next_li_num = 0;
						}
						else
						{
							next_li_num = curr_li_num + 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
		});
		$(document).click(function(e){
			$(".bor13221").hide();
		});

	});
  </script>
  <!-- 头 -->
  <!-- 推荐博客-->
  <div class="Blog_header1">
	    <div class="Blog_header1_1">
      <p class="Blog_p1"><em><a href="http://blog.chinaunix.net/uid/27041925.html">For&nbsp;My&nbsp;Cute&nbsp;Boy</a></em><a href="http://formycuteboy.blog.chinaunix.net/">formycuteboy.blog.chinaunix.net</a></p>      <p class="Blog_p2" style="color:#125A94">一切问题都是自己的问题</p>
    </div>
        <div class="Blog_header1_2" id="hide_div1">
    	<span class="Blog_span3"></span>
    	<div class="float_div1" style="white-space:nowrap;" onmouseover="javascript:isMove=false" onmouseout="javascript:isMove=true">
	    <ul style="line-height: 25px; margin-top: -71px;" id="noticev2">  
		    		    <li><a href="http://blog.chinaunix.net/uid-30204791-id-5705047.html" target="_blank">2016中国数据库技术大会门票申请 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-24789255-id-5568211.html" target="_blank">新注册用户开通“博客写作”功能，需要申请与实名认证 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-10718265-id-5141960.html" target="_blank"> 互动：数据分析与云计算应用案例 （征集|参与）</a></li>
		    	    </ul>
	    </div>
    </div>
            <div class="Blog_header1_3"><a href="http://blog.chinaunix.net/uid/27041925.html">首页</a>　| 　<a href="http://blog.chinaunix.net/uid/27041925/abstract/1.html">博文目录</a>　| 　<a href="http://blog.chinaunix.net/member/profile/uid/27041925.html">关于我</a></div>
  </div>
    
  <!-- 内容部分 -->
  	<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/XRegExp.js"></script> <!-- XRegExp is bundled with the final shCore.js during build -->
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shCore.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shAutoloader.js"></script>
<link type="text/css" rel="stylesheet" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shCore.css">
<link type="text/css" rel="Stylesheet" href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shThemeDefault.css">
<link href="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/fck_editorarea.css" rel="stylesheet" type="text/css">
<style>
.Blog_p5 em{ display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
  <div class="Blog_contain"> 
    <!-- 左 -->
	<style>
    .Blog_left1_1 p a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>

<script language="javascript">
$(document).ready(function(){
	$('#ConcernBtn').bind('click',function(){
			var cuid = '27041925';
			var url =  '/member/concern.html';
			var type = $(this).attr('rel');
		
			if(type == 'addConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxadd' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){	
					   if(msg == -1){
						   showErrorMsg('参数错误！');
					   } else if (msg == 0){
						   showErrorMsg('关注失败，没有该用户！');
					   } else if (msg == 1){
						   showErrorMsg('关注失败，您已经关注了该用户！');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('已关注');
						   $('#ConcernBtn').attr('rel','delConcern');
						   showSucceedMsg('关注成功!');
					   } else if (msg == 3){
						   showErrorMsg('未知错误');
					   }
					}
				});	
			} else if ( type == 'delConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxdel' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){
					   if(msg == 0){
						   showErrorMsg('参数错误！','消息提示');
					   } else if (msg == 1){
						   showErrorMsg('操作失败，请尝试刷新页面重试！','消息提示');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('加关注');
						   $('#ConcernBtn').attr('rel','addConcern');
						   showSucceedMsg('成功取消关注！','消息提示');
					   } else if (msg == 3){
						   showErrorMsg('未知错误！','消息提示'); 
					   }
					}
				});	
			}
	});					   
});

//加好友
function addFriend(fuid, url){
	if(fuid == '' || fuid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	$.ajax({
		   type : 'get',
		   url : url,
		   data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('参数错误！','消息提示');
				} else if (msg == -2){
					showErrorMsg('添加好友失败,没有该用户的信息！','消息提示');
				} else if (msg == -3){
					showErrorMsg('添加好友失败,你不能添加自己为好友！','消息提示');
				} else if (msg == -4){
					showErrorMsg('添加好友未知错误,该错误已被记录！','消息提示');
				} else if (msg == -5){
					showErrorMsg('添加好友失败,你之前已经发送过好友请求,请耐心等待对方同意申请！','消息提示');
				} else if (msg == -6){
					showErrorMsg('添加好友失败,你们已经是好友了！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'addFriend',
						title : '添加好友',
						url : url,
						data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
						width : 490,
						height : 180,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
	
}

//发送短消息
function postMessage(msguid, url){
	if(msguid == '' || msguid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	
	$.ajax({
		   type : 'post',
		   url : url,
		   data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('发送失败，缺少收件人对象！','消息提示');
				} else if(msg == -2){
					showErrorMsg('发送失败，自己不能给自己发送短消息！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'postMessage',
						title : '发送短消息',
						url : url,
						data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
						width : 510,
						height : 255,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
}

</script>
<div class="Blog_left">
      <div class="Blog_left1 Blog_bg1">
        <div class="Blog_left1_1">
			<!-- 专家博客-->
			<a href="http://blog.chinaunix.net/uid/27041925.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/25_avatar_middle.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_middle.gif'"></a>
                        <p><a href="http://blog.chinaunix.net/uid/27041925.html">formycuteboy</a></p>
                     </div>
        <ul class="Blog_ul1 Blog_noline1">
          <li>博客访问： 440319 </li>
          <li>博文数量： 220 </li>
          <li>博客积分： 190 </li>
          <!--<li>专家积分： 180</li>-->
          <li>博客等级： 入伍新兵 </li>
		  <li>技术积分： 4352 </li>
          <li>用  户  组：  普通用户</li>
          <li>注册时间： 2012-06-06 08:24 </li>
                            </ul>  


        
                <div class="HT_line3 HT_line3_1"></div>
        <ul class="Blog_ul2">
          <li><input value="加关注" id="ConcernBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
          <li><input value="短消息" id="postMessageBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
          <li><input value="论坛" onclick="location.href='http://bbs.chinaunix.net'" type="button"></li>
          <li><input value="加好友" id="addFriendBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
        </ul>
              </div>
            <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">个人简介</div>
        <p class="Blog_p3">慢行者</p>
      </div>
        
         
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章分类</div>
        <div class="Blog_left2_1">
          <p class="Blog_p4"><a href="http://blog.chinaunix.net/uid/27041925/list/1.html">全部博文</a>（220）</p>
          <ul id="blogCla">
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-185525-list-1.html" title="串口驱动">串口驱动</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182598-list-1.html" title="进程管理机制">进程管理机制</a>（11）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182596-list-1.html" title="Linux内存管理">Linux内存管理</a>（31）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182581-list-1.html" title="DMA机制">DMA机制</a>（14）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182551-list-1.html" title="中断机制">中断机制</a>（28）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176908-list-1.html" title="设备驱动">设备驱动</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176823-list-1.html" title="jupiter">jupiter</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176363-list-1.html" title="笔试&amp;面试">笔试&amp;面试</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176310-list-1.html" title="I2C">I2C</a>（39）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-175294-list-1.html" title="SPI">SPI</a>（27）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-175048-list-1.html" title="ubuntu">ubuntu</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174655-list-1.html" title="fs">fs</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174653-list-1.html" title="linux内核">linux内核</a>（13）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174214-list-1.html" title="ldd">ldd</a>（16）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-173847-list-1.html" title="i.mx287">i.mx287</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-172619-list-1.html" title="C语言日积月累">C语言日积月累</a>（6）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-172430-list-1.html" title="交叉编译器">交叉编译器</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170892-list-1.html" title="政策">政策</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170472-list-1.html" title="工作心得">工作心得</a>（6）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170400-list-1.html" title="随笔">随笔</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid--1-list-1.html" title="未分配的博文">未分配的博文</a>（1）
                                </li>
                      </ul>
        </div>
      </div>
      	              <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章存档</div>
        <div class="Blog_left2_1" id="blogdtr">
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="http://blog.chinaunix.net/uid/27041925/year-2013-list-1.html">2013年</a>（219）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201312-list-1.html">2013年12月</a>（1）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201311-list-1.html">2013年11月</a>（4）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201309-list-1.html">2013年09月</a>（107）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201305-list-1.html">2013年05月</a>（40）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201304-list-1.html">2013年04月</a>（52）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201303-list-1.html">2013年03月</a>（9）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201302-list-1.html">2013年02月</a>（2）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201301-list-1.html">2013年01月</a>（4）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="http://blog.chinaunix.net/uid/27041925/year-2012-list-1.html">2012年</a>（1）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201212-list-1.html">2012年12月</a>（1）</li>
                      </ul>
                  </div>
      </div>
      	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">我的朋友</div>
        <ul class="Blog_ul4">
                    <li><a href="http://blog.chinaunix.net/uid/22174347.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/22174347.html" title="hbhuanggang">hbhuangg</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23629988.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/88_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23629988.html" title="GFree_Wind">GFree_Wi</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/22030783.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/83_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/22030783.html" title="小超hide">小超hide</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23381466.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/66_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23381466.html" title="wangchenxicool">wangchen</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/20680966.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/66_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/20680966.html" title="帅得不敢出门">帅得不敢</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23769728.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/28_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23769728.html" title="MagicBoy2010">MagicBoy</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/26833883.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/83_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/26833883.html" title="草根老师">草根老师</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/13328506.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/06_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/13328506.html" title="jobchanceleo">jobchanc</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/20543672.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/72_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/20543672.html" title="tekkamanninja">tekkaman</a></p>
          </li>
                  </ul>
      </div>
	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">最近访客</div>
        <ul class="Blog_ul4">
                    <li><a href="http://blog.chinaunix.net/uid/29401328.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/28_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/29401328.html" title="枫露清愁">枫露清愁</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/31339200.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/31339200.html" title="tiandk">tiandk</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/28838676.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/28838676.html" title="永不放其">永不放其</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/30173982.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/30173982.html" title="sheep116">sheep116</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/31323725.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/31323725.html" title="mokart">mokart</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/15640727.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/15640727.html" title="f22sword">f22sword</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/30155375.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/30155375.html" title="Crazy_Skyer">Crazy_Sk</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/25396627.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/25396627.html" title="von81">von81</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/25776631.html"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/31_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/25776631.html" title="teaco77">teaco77</a></p>
          </li>
                  </ul>
      </div>
	           <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">微信关注</div>
        <div class="">
                <div class="" style="float:left; margin-right:5px;">
                 <img alt="" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/IT168.jpg" height="90" width="90">
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         IT168企业级官微
                </p>
                 <p class="">

                 <br><br>
                 微信号：IT168qiye
                </p>
                </div>
        </div>
<hr style="clear:both;" size="1">
        <div class="" style="clear:both;">
                <div class="" style="float:left; margin-right:5px;">
                 <img alt="" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/itpub.jpg" height="90" width="90">
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         系统架构师大会
                </p>
                 <p class="">

                 <br><br>
                 微信号：SACC2013
                </p>
                </div>
        </div>

</div>
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">订阅</div>
        <ul class="Blog_ul5">
          <li><a href="http://blog.chinaunix.net/blog/rss/uid/27041925.html" class="Blog_a4"></a></li>
          <li><a href="http://www.google.com/ig/add?feedurl=http%3A%2F%2Fblog.chinaunix.net%2Fuid%2F27041925.html" class="Blog_a5"></a></li>
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">推荐博文</div>
        <ul class="Blog_ul6">
				  			<li>·<a href="http://blog.chinaunix.net/uid-25356953-id-5728990.html" title="通过shell脚本进行数据库操作 ">通过shell脚本进行数据库操作...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-30646905-id-5728965.html" title="关于LINUX C中函数strtok使用要点">关于LINUX C中函数strtok使用...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-30111588-id-5728915.html" title="arm 异常处理">arm 异常处理</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-23062171-id-5728835.html" title="通过shell脚本进行数据库操作 ">通过shell脚本进行数据库操作...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-26168435-id-5728816.html" title="Zabbix_agent部署">Zabbix_agent部署</a></li>
		  						
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">热词专题</div>
        <ul class="Blog_ul6">
                        <li>·<a href="http://blog.chinaunix.net/zt/1041/ffmpegpngyuv_1041305.shtml" target="blank" title="Java调用ffmpeg进行视频转码">Java调用ffmpeg进行视频转码...</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1010/patchhostsfile_1010507.shtml" target="blank" title="patch命令使用">patch命令使用</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1013/linuxguifeng_1013683.shtml" target="blank" title="Linux修改用户id和所在的组">Linux修改用户id和所在的组...</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1015/awkjiehu_1015321.shtml" target="blank" title="linux awk命令详解">linux awk命令详解</a></li>
                        <li class="no_line1">·<a href="http://blog.chinaunix.net/zt/1042/ubuntu1204ooter_1042497.shtml" target="blank" title="ubuntu linux切换用户到root ">ubuntu linux切换用户到root ...</a></li>
          <!--              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoop220peizhi.shtml" target='blank' title='配置hadoop2.2.0格式化namenode问题'></a></li>
              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoopshouce.shtml" target='blank' title='hadoop2.2.0安装手册'></a></li>-->
        </ul>
      </div>
	        <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">友情链接</div>
        <ul class="Blog_ul6">
                        <li>·<a href="http://www.cnblogs.com/papam/" target="blank" title="在路上">在路上</a></li>
                        <li>·<a href="http://blog.csdn.net/fudan_abc" target="blank" title="fudan">fudan</a></li>
                        <li>·<a href="http://blog.csdn.net/sailor_8318" target="blank" title="sailor">sailor</a></li>
                        <li>·<a href="http://blog.csdn.net/cheny_com" target="blank" title="陈勇">陈勇</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/22030783.html" target="blank" title="小超">小超</a></li>
                        <li>·<a href="http://blog.csdn.net/ce123" target="blank" title="周卫">周卫</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/11344913.html" target="blank" title="刘歧">刘歧</a></li>
                        <li>·<a href="http://blog.csdn.net/fudan_abc" target="blank" title="任桥伟">任桥伟</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/22174347.html" target="blank" title="黄刚">黄刚</a></li>
                        <li class="no_line1">·<a href="http://blog.donews.com/21cnbao/" target="blank" title="宋宝华">宋宝华</a></li>
                  </ul>
      </div>
	  

	</div>
<script language="javascript">
$(document).ready(function(){
    /*目录树JS效果*/
	$('#blogCla li > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogCla li > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogCla li > .zk').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().children('.zk').css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().children('.zk').css('display', 'none');
		}
	});
		
	$('#blogdtr > p > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogdtr > .Blog_p4 > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogdtr ul').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().next().css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().next().css('display', 'none');
		}
	});
});
</script>    <!-- 右 -->
    <div class="Blog_right1">
      <div class="Blog_right1_1 Blog_right1_11">
        <div class="Blog_right1_2 ">
			<!--推荐博文-->
          <div class="Blog_tit4 Blog_tit5">
                        <b class="Blog_b2"></b>
            <a href="http://blog.chinaunix.net/uid-27041925-id-3998634.html">Linux串口编程详解 </a>
            <em>2013-11-20 18:55:13</em>
          </div>
          <div class="Blog_con2">
            <div class="Blog_con3">
              <p>分类： <span>LINUX</span></p>
			                <p></p>
            </div>
           <div class="Blog_wz1" style="word-wrap: break-word;">
						<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n50a0151" target="_blank">串口本身，标准和硬件</a>
<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n9a2f344" target="_blank">什么是串行通信</a>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ra8ec174" target="_blank">什么是RS-232</a>
		<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ka051097" target="_blank">信号定义</a>
			</li>
		</ul>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n44f8de3" target="_blank">异步通讯</a>
		<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pd501f10" target="_blank">什么是全双工和半双工</a>
			</li>
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p4107587" target="_blank">什么是流控制</a>
			</li>
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#rff8ebf5" target="_blank">什么是BREAK</a>
			</li>
		</ul>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#maf72658" target="_blank">同步通讯</a>
	</li>
</ul>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#d54588ec" target="_blank">用户看到的串口和用户空间的串口编程</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#m762ca74" target="_blank">串口的设备文件</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#e0c5bdb0" target="_blank">打开串口</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#gd68baed" target="_blank">打开文件的选项</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p0f688bb" target="_blank">给端口上写数据</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v8ac00e5" target="_blank">从端口上读取数据</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#cc09d3b8" target="_blank">关闭串口</a>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396" target="_blank">配置串口</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#w4b79eef" target="_blank">POSIX终端接口</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#u93000d5" target="_blank">控制选项</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pf67f840" target="_blank">设置波特率</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ed0ca407" target="_blank">设置字符大小</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ec39e271" target="_blank">设置奇偶校验</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v25cc08e" target="_blank">设置硬件流控制</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#z872a694" target="_blank">本地设置</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#aa0a4534" target="_blank">选择经典输入</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x7fa7658" target="_blank">选择原始输入</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#y1704144" target="_blank">输入选项</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#b910e489" target="_blank">设置输入奇偶校验选项</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4a5f971" target="_blank">设置软件流控制</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x89409ba" target="_blank">输出选项</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l219f12d" target="_blank">选择加工过的输出</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#wc46dec3" target="_blank">选择原始输出</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#f8321f9d" target="_blank">控制字符</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4c4f3a7" target="_blank">设置软件流控制字符</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#hd080f10" target="_blank">设置读取超时</a>
				</li>
			</ul>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#jfe611bd" target="_blank">调制解调器通讯</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#la44ce5c" target="_blank">什么是调制解调器</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ta8ef8ea" target="_blank">与调制解调器通讯</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k026ecb5" target="_blank">标准调制解调器命令</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#tb86878b" target="_blank">高级串口编程</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#qf91da78" target="_blank">串口的ioctl</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#h1f77c9e" target="_blank">取得控制信号</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#s2e1f1e6" target="_blank">设置控制信号</a>
				</li>
			</ul>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#t79f0e01" target="_blank">英文原文</a>
</li>
串口本身，标准和硬件&nbsp;<a title="n50a0151" class="anchor_super" id="n50a0151" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n50a0151">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
串口是计算机上的串行通讯的物理接口。计算机历史上，串口曾经被广泛用于连接计算机和终端设备和各种外部设备。虽然以太网接口和USB接口也是以一个串行
流进行数据传送的，但是串口连接通常特指那些与RS-232标准兼容的硬件或者调制解调器的接口。虽然现在在很多个人计算机上，原来用以连接外部设备的串
口已经广泛的被USB和Firewire替代；而原来用以连接网络的串口则被以太网替代，还有用以连接终端的串口设备则已经被MDA或者VGA取而代之。
但是，一方面因为串口本身造价便宜技术成熟，另一方面因为串口的控制台功能RS-232标准高度标准化并且非常普及，所以直到现在它仍然被广泛应用到各种
设备上。 
某些计算机使用一个叫做UART的集成电路来作为串口设备。这个集成电路可以进行字符和异步串行通讯序列之间的转换，并且可以自动地处理数据的时序。而某
些低端设备则会让CPU直接通过输出针来传送数据，这种技术叫做bit-banging。 
因为“串口”，RS-232和UARTs基本上总是在同一个语境中出现，所以这些名词通常会被搞混。下面逐一解释以下一些重要的名词和术语。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是串行通信&nbsp;<a title="n9a2f344" class="anchor_super" id="n9a2f344" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n9a2f344">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	计算机可以每次传送一个或者多个位(bit)的数据。“串行”指的式每次只传输一位(1bit)数据。 
当需要通过串行通讯传输一个字(word)的数据时，只能以每次一位的方式接收或者发送。每个位可能是on(1)或者off(0)。很多技术术语中经常用
mark表示on，而space表示off。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
串行数据的速度通常用每秒传输的字节数bits-per-second(bps)或者波特率(baud)表示。这个值表示的是每秒钟被送出的0和1的个
数。很久很久以前，300bps就是很快的速度了，而现在的电脑可以处理高达430,800的RS-232速率。表示波特率的单位还有kpbs和
Mbps，1kps=1000bps而1Mbps=1000kbps。 一般有人提到串行设备的时候，它通常说可能是某种数据通讯设备-DCE(Data
 Communications Equipment)或者数据终端设备-DTE(Data Terminal 
Equipment)。它们之间的区别非常简单，每个信号对，比如传送和接收，它们俩正好是相反的。如果需要将两个DTE或者DCE设备连接起来的话，需
要适配器或者交叉线缆将信号对交换。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是RS-232&nbsp;<a title="ra8ec174" class="anchor_super" id="ra8ec174" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ra8ec174">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232是EIA(Electronic Industries 
Association)定义的串行通信的电器接口。RS-232事实上有三种(A,B和C)，它们分别采用不同的电压来表示on和off。最被广泛使用
的是RS-232C，它将mark(on)比特的电压定义为-3V到-12V之间，而将space(off)的电压定义到+3V到+12V之间。虽然
RS-232C标准说信号最远被传输8m，但事实上你可以使用它传输更长的距离，直到信号波特率已经小到不行了为止。 
RS-232的连结线中除去用来传入传出数据的电线，还有一些用来提供时序，状态和握手的电线：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232 针脚定义
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	DB-25
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Earth Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR - Data Set Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					11
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					16
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RXD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					21
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Signal Quality Detect
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TXD - Transmitted Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					GND - Logic Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					12
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary DCD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					17
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Receiver Clock
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					22
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ring Detect
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RXD - Received Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DCD - Data Carrier Detecter
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					13
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					18
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					23
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Rate Select
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS - Request To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Reserved
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					14
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary TXD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					19
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					24
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS - Clear To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					10
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Reserved
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					15
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Clock
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					20
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR - Data Terminal Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					25
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	DB-9
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					名称
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					全名
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					方向(主机 外设)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Receive Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Request To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Clear To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Set Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Terminal Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Carrier Detect
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RI
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ring Indicator
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Signal Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	另外两个比较常见的串行接口的标准式RS-422和RS-574。RS-422使用更低的电压和差分信号，这样可以将传输距离扩张到300m。而RS-574定义了通常可以见到的用在电脑上的9针连接器和电压。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
信号定义&nbsp;<a title="ka051097" class="anchor_super" id="ka051097" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ka051097">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232标准定义了18个不同的串行通信的信号。而这些之中，仅仅有如下6个可以在UNIX环境中使用。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		GND - Logic Ground
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				从技术角度讲，GND不能算是信号。但是没有它其他信号都不能用了。基本上，logic ground有点像一个参考电压，通过它来判断哪个电压表示正哪个电压表示负。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		TXD - Transmitted Data
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				TXD信号负载着从你的电脑或者设备到另一端(比如调制解调器)的数据。Mark范围的电压被解析成1，而space范围电压被解析成0。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		RXD - Received Data
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				RXD于TXD正好相反。它负载着从另一端的电脑或者设备上传到你的工作站的数据。Mark和space的解析方法于TXD一致。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		DCD - Data Carrier Detect
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				DCD信号通常来自串口连结线的另一端。这条信号线上的space电压表示另一端的电脑或者设备现在已经连接。但是，DCD信号线却不是总可以得到的，有些设备上有这条信号线，而有的则没有。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		DTR - Data Terminal Ready
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				DTR信号是你的工作站产生的，用以告诉另一端的电脑或者设备你已经是否已经准备好了。Space电压表示准备好了，而mark电压表示没有准备好。当你在工作站上打开串行接口时，DTR通常自动被设置位有效。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		CTS - Clear To Send
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				CTS则通常来自连结线的另一端。Space电压表示你可以从工作站送出更多的数据。CTS通常用来协调你的工作站和另一端之间的串行数据流。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		RTS - Request To Send
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				如果RTS信号被设置成space电压，这表示你准备好了一些数据需要传送。和CTS一样，RTS也被用来协调工作站和另一端的电脑或者设备之间的数据流。有些工作站上会一直将这个信号设置位space。
			</p>
		</blockquote>
	</li>
</ul>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
异步通讯&nbsp;<a title="n44f8de3" class="anchor_super" id="n44f8de3" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n44f8de3">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	计算机为了弄懂传给它的串行数据，它需要确定每个字符开始和结束的位置。这通常是用异步串行数据来完成的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
在异步模式中，除非有字符被传输，否则串行数据线总是处于mark(1)状态。有一个start位会被加入传输字符的各个位之前，在字符本身的位之后会有
一个可选的parity位和一个或者多个stop位。Start位总是space(0)并且它会告诉计算机新的串行数据过来了。数据可以随时被送出或者接
收，这就是所谓的异步。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	#ref(): File not found: "async.gif" at page "Linux串口编程详解"
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
那个可选的parity位仅仅是所有传输位的和，这个和用以表示传输字符中有奇数个1还是偶数个1。在偶数parity中，如果有传输字符中有偶数个1，
那么parity位被设置成0，而传输字符中有奇数个1，那么parity位被设置成1。在奇数parity中，位设置与此相反。还有一些术语，比如
space parity, mark parity和no parity。Space parity是指parity位会一直被设置位0，而mark 
parity正好与此相反，parity会一直是1。No parity的意思就是根本不会传输parity位。 
剩余的位叫做stop位。传输字符之间可以有1个,1.5个或者2个stop位，而且，它们的值总是1。传统上，Stop位式用给计算机一些时间处理前面
的字符的，但是它只是被用来同步接收数据的计算机和接受的字符。 
异步数据通常被表示成"8N1"，"7E1"，或者与此类似的形式。这表示“8数据位，no parity和1个stop 
bit”，还有相应得，“7数据位，even parity和1个stop bit”。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是全双工和半双工&nbsp;<a title="pd501f10" class="anchor_super" id="pd501f10" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pd501f10">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	全双工(Full duplex)是说计算机可以同时接受和发送数据——也就是它有两个分开的数据传输通道(一个传入，一个传出)。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	半双工(Half duplex)表示计算机不能同时接受和发送数据，而在某一时刻它只能单一的传送或者接收。这通常意味着，它只有一个数据通道。半双工并不是说RS-232的某些信号不能使用，而是，它通常是使用了有别于RS-232的其他不支持全双工的标准。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是流控制&nbsp;<a title="p4107587" class="anchor_super" id="p4107587" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p4107587">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	两个串行接口之间的传输数据流通常需要协调一致才行。这可能是由于用以通信的某个串行接口或者某些存储介质的中间串行通信链路的限制造成的。对于异步数据这里有两个方法做到这一点。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
第一种方法通常被叫做“软件”流控制。这种方法采用特殊字符来开始(XON，DC1，八进制数021)或者结束(XOFF，DC3或者八进制数023)数
据流。而这些字符都在ASCII中定义好了。虽然这些编码对于传输文本信息非常有用，但是它们却不能被用于在特殊程序中的其他类型的信息。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
第二种方法叫做“硬件”流控制。这种方法使用RS-232标准的CTS和RTS信号来取代之前提到的特殊字符。当准备就绪时，接受一方会将CTS信号设置
成为space电压，而尚未准备就绪时它会被设置成为mark电压。相应得，发送方会在准备就绪的情况下将RTS设置成space电压。正因为硬件流控制
使用了于数据分隔的信号，所以与需要传输特殊字符的软件流控制相比它的速度很快。但是，并不是所有的硬件和操作系统都支持CTS/RTS流控制。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是BREAK&nbsp;<a title="rff8ebf5" class="anchor_super" id="rff8ebf5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#rff8ebf5">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通常，直到有数据传输时，接收和传输信号会保持在mark电压。如果一个信号掉到space电压并且持续了很长时间，一般来说是1/4到1/2秒，那么就说有一个break条件存在了。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	BREAK经常被用来重置一条数据线或者用来改变像调制解调器这样的设备的通讯模式。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
同步通讯&nbsp;<a title="maf72658" class="anchor_super" id="maf72658" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#maf72658">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
与异步数据不同，同步数据是一个稳定的字节流。为了能够在线路上读取到数据，计算机必须提供或者接受一个时钟，这样才能保证发送端和接收端同步。尽管已经
有同步时钟，计算机还是必须以某种方式标志数据流的开端。做这件事情最常见的办法就是使用像Serial Data Link 
Control("SDLC")或者High-Speed Data Link Control("HDLC")这样的数据包通讯协议。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	这些协议每个都定义了一个确定的比特序列来表示数据包的开始和结束。当然，它们也定义了一个用来表示没有数据传输的比特序列。这些比特序列可以帮助计算机识别数据包的开端。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	因为同步协议可以不使用每个字符的同步比特位，所以通常它们的性能比异步通讯快最少25%，而且一般比较适用于远距离的网络链接或者有两个串口接口的配置的情况。尽管同步通讯的速度有优势，大部分RS-232硬件却不支持它，因为同步通讯需要其他的硬件和软件。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
用户看到的串口和用户空间的串口编程&nbsp;<a title="d54588ec" class="anchor_super" id="d54588ec" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#d54588ec">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	和其他设备一样，Linux也是通过设备文件来提供访问串口的功能。当需要访问串口的时候，你只需要open相应的文件。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
串口的设备文件&nbsp;<a title="m762ca74" class="anchor_super" id="m762ca74" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#m762ca74">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	Linux系统上一般有一个或者多个串口，而这些串口设备文件名字比较奇怪，如比下面这样
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>串口设备文件名</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					操作系统
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					串口1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					串口2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					USB/RS-232转换器
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Windows
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					COM1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					COM2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Linux
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyS0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyS1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyUSB0
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
打开串口&nbsp;<a title="e0c5bdb0" class="anchor_super" id="e0c5bdb0" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#e0c5bdb0">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
因为串口和其他设备一样，在类Unix系统中都是以设备文件的形式存在的，所以，理所当然得你可以使用open(2)系统调用/函数来访问它。但
Linux系统中却有一个稍微不方便的地方，那就是普通用户一般不能直接访问设备文件。你可以选择以下方式做一些调整，以便你编写的程序可以访问串口。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		改变设备文件的访问权限设置 [#cd9bd1e0]
	</li>
	<li>
		以root超级用户的身份运行程序 [#kdd0e577]
	</li>
	<li>
		将你的程序编写位setuid程序，以串口设备所有者的身份运行程序 [#s7b703ff]
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	OK.假如你已经准备好了让串口设备文件可以被所有用户访问，你可以在Linux系统中实验一下下面这个程序，它可以打开计算机的串口1。
</p>
<p>
	#include <stdio.h>
</stdio.h></p>
<p>
	#include <string.h>
</string.h></p>
<p>
	&nbsp;#include <unistd.h>
</unistd.h></p>
<p>
	&nbsp;#include <fcntl.h> /* File control definitions */
</fcntl.h></p>
<p>
	&nbsp;#include <errno.h> #include <termios.h> /* POSIX terminal control
 definitions */ /* * 'open_port()' - Open serial port 1 * Returns the 
file descriptor on success or -1 on error. */ int open_port(void) {	int 
fd; /* File descriptor for the port */	fd = open("/dev/ttyS0", O_RDWR | 
O_NOCTTY | O_NDELAY);	if (fd == -1)	{		/*		 * Could not open the port.		
 */		perror("open_port: Unable to open /dev/ttyS0 -");	}	else	{		
fcntl(fd, F_SETFL, 0);		return (fd);	} }
</termios.h></errno.h></p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
打开文件的选项&nbsp;<a title="gd68baed" class="anchor_super" id="gd68baed" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#gd68baed">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	打开串口连接的时候，程序在open函数中除了Read+Write模式以外还指定了两个选项；
</p>
fd = open("/dev/ttyS0", O_RDWR | O_NOCTTY | O_NDELAY);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
标志O_NOCTTY可以告诉UNIX这个程序不会成为这个端口上的“控制终端”。如果不这样做的话，所有的输入，比如键盘上过来的Ctrl+C中止信号
等等，会影响到你的进程。而有些程序比如getty(1M/8)则会在打开登录进程的时候使用这个特性，但是通常情况下，用户程序不会使用这个行为。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	O_NDELAY标志则是告诉UNIX，这个程序并不关心DCD信号线的状态——也就是不关心端口另一端是否已经连接。如果不指定这个标志的话，除非DCD信号线上有space电压否则这个程序会一直睡眠。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
给端口上写数据&nbsp;<a title="p0f688bb" class="anchor_super" id="p0f688bb" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p0f688bb">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	给端口上写入数据也很简单，使用write(2)系统调用就可以发送数据了：
</p>
n = write(fd, "ATZ\r", 4); if (n &lt; 0)        fputs("write() of 4 bytes failed!\n", stderr);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
和写入其他设备文件的方式相同，write函数也会返回发送数据的字节数或者在发生错误的时候返回-1。通常，发送数据最常见的错误就是EIO，当调制解
调器或者数据链路将Data Carrier Detect(DCD)信号线弄掉了，就会发生这个错误。而且，直至关闭端口这个情况会一直持续。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
从端口上读取数据&nbsp;<a title="v8ac00e5" class="anchor_super" id="v8ac00e5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v8ac00e5">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	从串口上读取数据的时候就得耍花招了。因为，如果你在原数据模式(raw data 
mode)操作端口的话，每个read(2)系统调用都会返回从串口输入缓冲区中实际得到的字符的个数。在不能得到数据的情况下，read(2)系统调用
就会一直等着，只到有端口上新的字符可以读取或者发生超时或者错误的情况发生。如果需要read(2)函数迅速返回的话，你可以使用下面这个方式：
</p>
fcntl(fd, F_SETFL, FNDELAY);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	标志FNDELAY可以保证read(2)函数在端口上读不到字符的时候返回0。需要回到正常（阻塞）模式的时候，需要再次在不带FNDELAY标志的情况下调用fcntl(2)函数：
</p>
fcntl(fd, F_SETFL, 0);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	当然，如果你最初就是以O_NDELAY标志打开串口的，你也可在之后使用这个方法改变读取的行为方式。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
关闭串口&nbsp;<a title="cc09d3b8" class="anchor_super" id="cc09d3b8" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#cc09d3b8">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可以使用close(2)系统调用关闭串口：
</p>
close(fd);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	关闭串口会将DTR信号线设置成low，这会导致很多调制解调器挂起。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
配置串口&nbsp;<a title="k35d6396" class="anchor_super" id="k35d6396" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396">?</a>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
POSIX终端接口&nbsp;<a title="w4b79eef" class="anchor_super" id="w4b79eef" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#w4b79eef">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	很多系统都支持POSIX终端（串口）接口。程序可以利用这个接口来改变终端的参数，比如，波特率，字符大小等等。要使用这个端口的话，你必须将<termios.h>头文件包含到你的程序中。这个头文件中定义了终端控制结构体和POSIX控制函数。
</termios.h></p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	与串口操作相关的最重要的两个POSIX函数可能就是tcgetattr(3)和tcsetattr(3)。顾名思义，这两个函数分别用来取得设设置终端的属性。调用这两个函数的时候，你需要提供一个包含着所有串口选项的termios结构体：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>termios结构体成员</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					成员
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_cflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					控制选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_lflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					行选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_iflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输入选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_oflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输出选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_cc
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					控制字符
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_ispeed
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输入波特率(NEW)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_ospeed
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输出波特率(NEW)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
控制选项&nbsp;<a title="u93000d5" class="anchor_super" id="u93000d5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#u93000d5">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过termios结构体的c_cflag成员可以控制波特率，数据的比特数，parity，停止位和硬件流控制。下面这张表列出了所有可以使用的常数。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_cflag常数</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CBAUD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Bit mask for baud rate
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					0 baud (drop DTR)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B50
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					50 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B75
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					75 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B110
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					110 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B134
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					134.5 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B150
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					150 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B300
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					300 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B1200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B1800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B2400
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2400 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B4800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B9600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B19200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					19200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B38400
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					38400 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B57600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					57,600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B76800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					76,800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B115200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					115,200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					EXTA
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					External rate clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					EXTB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					External rate clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CSIZE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Bit mask for data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CSTOPB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2 stop bits (1 otherwise)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CREAD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable receiver
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARENB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable parity bit
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARODD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Use odd parity instead of even
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					HUPCL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Hangup (drop DTR) on last close
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CLOCAL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Local line - do not change "owner" of port
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					LOBLK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Block job control output
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CNEW_RTSCTS/CRTSCTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable hardware flow control (not supported on all platforms)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
在传统的POSIX编程中，当连接一个本地的（不通过调制解调器）或者远程的终端（通过调制解调器）时，这里有两个选项应当一直打开，一个是
CLOCAL，另一个是CREAD。这两个选项可以保证你的程序不会变成端口的所有者，而端口所有者必须去处理发散性作业控制和挂断信号，同时还保证了串
行接口驱动会读取过来的数据字节。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	波特率常数(CBAUD,B9600等等)通常指用到那些不支持c_ispeed和c_ospeed成员的旧的接口上。后面文章将会提到如何使用其他POSIX函数来设置波特率。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	千万不要直接用使用数字来初始化c_cflag（当然还有其他标志），最好的方法是使用位运算的与或非组合来设置或者清除这个标志。不同的操作系统版本会使用不同的位模式，使用常数定义和位运算组合来避免重复工作从而提高程序的可移植性。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置波特率&nbsp;<a title="pf67f840" class="anchor_super" id="pf67f840" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pf67f840">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	不同的操作系统会将波特率存储在不同的位置。旧的编程接口将波特率存储在上表所示的c_cflag成员中，而新的接口实装则提供了c_ispeed和c_ospeed成员来保存实际波特率的值。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	程序中可是使用cfsetospeed(3)和cfsetispeed(3)函数在termios结构体中设置波特率而不用去管底层操作系统接口。下面的代码是个非常典型的设置波特率的例子。
</p>
struct termios options; /* * Get the current options for the port... */ 
tcgetattr(fd, &amp;options);/* * Set the baud rates to 19200... */ 
cfsetispeed(&amp;options, B19200); cfsetospeed(&amp;options, B19200); /*
 * Enable the receiver and set local mode... */ options.c_cflag |= 
(CLOCAL | CREAD); /* * Set the new options for the port... */ 
tcsetattr(fd, TCSANOW, &amp;options);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
函数tcgetattr(3)会将当前串口配置回填到termio结构体option中。然后，程序设置了输入输出的波特率并且将本地模式
(CLOCAL)和串行数据接收(CREAD)设置为有效，接着将新的配置作为参数传递给函数tcsetattr(3)。常量TCSANOW标志所有改变
必须立刻生效而不用等到数据传输结束。其他另一些常数可以保证等待数据结束或者刷新输入输出之后再生效。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>tcsetattr常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSANOW
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Make changes now without waiting for data to complete
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSADRAIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Wait until everything has been transmitted
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSAFLUSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Flush input and output buffers and make the change
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	不同的系统上可能支持不同的输入输出速度，所以，通过串口连接两台机器或者设备的时候，应该将波特率设置成两者中较小的那个，即MIN(speed1, speed2)。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置字符大小&nbsp;<a title="ed0ca407" class="anchor_super" id="ed0ca407" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ed0ca407">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置字符大小的时候，这里却没有像设置波特率那么方便的函数。所以，程序中需要一些位掩码运算来把事情搞定。字符大小以比特为单位指定：
</p>
options.c_flag &amp;= ~CSIZE; /* Mask the character size bits */ options.c_flag |= CS8;    /* Select 8 data bits */
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置奇偶校验&nbsp;<a title="ec39e271" class="anchor_super" id="ec39e271" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ec39e271">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	与设置字符大小的方式差不多，这里仍然需要组合一些位掩码来将奇偶校验设为有效和奇偶校验的类型。UNIX串口驱动可以生成even，odd和no parity位码。设置space奇偶校验需要耍点小手段。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		No parity (8N1)
	</li>
</ul>
options.c_cflag &amp;= ~PARENB options.c_cflag &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS8;
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Even parity (7E1)
	</li>
</ul>
options.c_cflag |= PARENB options.c_cflag &amp;= ~PARODD options.c_cflag
 &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS7;
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Odd parity (7O1)
	</li>
</ul>
options.c_cflag |= PARENB options.c_cflag |= PARODD options.c_cflag 
&amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS7;
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Space parity is setup the same as no parity (7S1)
	</li>
</ul>
options.c_cflag &amp;= ~PARENB options.c_cflag &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS8;
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置硬件流控制&nbsp;<a title="v25cc08e" class="anchor_super" id="v25cc08e" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v25cc08e">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	某些版本的UNIX系统支持通过CTS(Clear To Send)和RTS(Request To 
Send)信号线来设置硬件流控制。如果系统上定义了CNEW_RTSCTS和CRTSCTS常量，那么很可能它会支持硬件流控制。使用下面的方法将硬件
流控制设置成有效：
</p>
options.c_cflag |= CNEW_RTSCTS;    /* Also called CRTSCTS
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	将它设置成为无效的方法与此类似：
</p>
options.c_cflag &amp;= ~CNEW_RTSCTS;
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
本地设置&nbsp;<a title="z872a694" class="anchor_super" id="z872a694" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#z872a694">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	本地模式成员变量c_lflag可以控制串口驱动怎样控制输入字符。通常，你可能需要通过c_lflag成员来设置经典输入和原始输入模式。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>成员变量c_lflag可以使用的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ISIG
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable SIGINTR, SIGSUSP, SIGDSUSP, and SIGQUIT signals
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ICANON
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable canonical input (else raw)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					XCASE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map uppercase \lowercase (obsolete)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHO
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable echoing of input characters
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo erase character as BS-SP-BS
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo NL after kill character
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHONL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NOFLSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Disable flushing of input buffers after interrupt or quit characters
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IEXTEN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable extended functions
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOCTL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo control characters as ^char and delete as ~?
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOPRT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo erased character as character erased
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOKE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS-SP-BS entire line on line kill
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FLUSHO
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Output being flushed
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PENDIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Retype pending input at next read or input char
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TOSTOP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Send SIGTTOU for background output
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
选择经典输入&nbsp;<a title="aa0a4534" class="anchor_super" id="aa0a4534" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#aa0a4534">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	经典输入是以面向行设计的。在经典输入模式中输入字符会被放入一个缓冲之中，这样可以以与用户交互的方式编辑缓冲的内容，直到收到CR(carriage return)或者LF(line feed)字符。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择使用经典输入模式的时候，你通常需要选择ICANON，ECHO和ECHOE选项：
</p>
options.c_lflag |= (ICANON | ECHO | ECHOE);
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
选择原始输入&nbsp;<a title="x7fa7658" class="anchor_super" id="x7fa7658" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x7fa7658">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	原始输入根本不会被处理。输入字符只是被原封不动的接收。一般情况中，如果要使用原始输入模式，程序中需要去掉ICANON，ECHO，ECHOE和ISIG选项：
</p>
options.c_lflag &amp;= ~(ICANON | ECHO | ECHOE | ISIG);
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
输入选项&nbsp;<a title="y1704144" class="anchor_super" id="y1704144" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#y1704144">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可以通过输入模式成员c_iflag来控制从端口上收到的字符的输入过程。与c_cflag一样，c_iflag的最终值是想要使用的所有状态的位运算OR的组合。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_iflag成员可以使用的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					INPCK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable parity check
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNPAR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore parity errors
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARMRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mark parity errors
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ISTRIP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Strip parity bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXON
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable software flow control (outgoing)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXOFF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable software flow control (incoming)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXANY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Allow any character to start flow again
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNBRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore break condition
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BRKINT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Send a SIGINT when a break condition is detected
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					INLCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map NL to CR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore CR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ICRNL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map CR to NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IUCLC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map uppercase to lowercase
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IMAXBEL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo BEL on input line too long
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置输入奇偶校验选项&nbsp;<a title="b910e489" class="anchor_super" id="b910e489" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#b910e489">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
当程序在c_cflag中设置了奇偶校验成员(PARENB)的时候，程序就需要将输入奇偶校验设置成为有效。与奇偶校验相关的常量有
INPCK，IGNPAR，PARMRK和ISTRIP。一般情况下，你可能需要选择INPCK和ISTRIP将奇偶校验设置为有效同时从接收字串中脱去
奇偶校验位：
</p>
options.c_iflag |= (INPCK | ISTRIP);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	IGNPAR是一个比较危险选项，即便有错误发生时，它也会告诉串口驱动直接忽略奇偶校验错误给数据放行。这个选项在测试链接的通讯质量时比较有用而通常不会被用在实际程序中。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	PARMRK会导致奇偶校验错误被标志成特殊字符加入到输入流之中。如果IGNPAR选项也是有效的，那么一个NUL(八进制000)字符会被加入到发生奇偶校验错误的字符前面。否则，DEL(八进制177)和NUL字符会和出错的字符一起送出。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置软件流控制&nbsp;<a title="l4a5f971" class="anchor_super" id="l4a5f971" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4a5f971">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	软件流控制可以通过IXON，IXOFF和IXANY常量设置成有效：
</p>
options.c_iflag |= (IXON | IXOFF | IXANY);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	将其设置为无效的时候，很简单，只需要对这些位取反：
</p>
options.c_iflag &amp;= ~(IXON | IXOFF | IXANY);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	XON(start data)和XOFF(stop data)字符却是在c_cc数组中定义的，下面会详细描述这个数组。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
输出选项&nbsp;<a title="x89409ba" class="anchor_super" id="x89409ba" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x89409ba">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	成员变量c_oflag之中包括了输出过滤选项。和输入模式相似，程序可以选择使用经过加工的或者原始的数据输出。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_oflag成员的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OPOST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Postprocess output (not set = raw output)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OLCUC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map lowercase to uppercase
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ONLCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map NL to CR-NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OCRNL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map CR to NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NOCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No CR output at column 0
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ONLRET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL performs CR function
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OFILL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Use fill characters for delay
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OFDEL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Fill character is DEL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NLDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed between lines
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for NLs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay further output after newline for 100 milliseconds
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CRDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed to return carriage to left column
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay after CRs depending on current column position
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 100 milliseconds after sending CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 150 milliseconds after sending CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TABDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay after TABs depending on current column position
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 100 milliseconds after sending TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Expand TAB characters to spaces
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BSDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 50 milliseconds after sending BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VTDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VT0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VT1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 2 seconds after sending VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FFDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after FFs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FF0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for FFs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FF1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 2 seconds after sending FFs
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
选择加工过的输出&nbsp;<a title="l219f12d" class="anchor_super" id="l219f12d" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l219f12d">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过在c_oflag成员变量中设置OPOST选项的方法程序可以选择加工过的输入。
</p>
options.c_oflag |= OPOST;
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	在所有选项当中，你可能只需要使用ONLCR选项来将行分隔符映射到CR-LF组合对上。其他选项主要是历史遗留，仅仅与行打印机和终端跟不上串行数据的年代有关。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
选择原始输出&nbsp;<a title="wc46dec3" class="anchor_super" id="wc46dec3" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#wc46dec3">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	原始输出方式可以通过在c_oflag中重置OPOST选项来选择：
</p>
options.c_oflag &amp;= ~OPOST;
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	如果OPOST选项被设置成无效的话，其他c_oflag中的选项都会失效。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
控制字符&nbsp;<a title="f8321f9d" class="anchor_super" id="f8321f9d" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#f8321f9d">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	字符数组c_cc里面包括了控制字符的定义和超时参数。这个数组的每个元素都是以常量定义的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>成员变量c_cc中的控制字符</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					键
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VINTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Interrupt
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-C
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VQUIT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Quit
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-Z
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VERASE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Erase
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Backspace (BS)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VKILL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Kill-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-U
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					End-of-file
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-D
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					End-of-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Carriage return (CR)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOL2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Second end-of-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Line feed (LF)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VMIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Minimum number of characters to read
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VSTART
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Start flow
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-Q (XON)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VSTOP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Stop flow
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-S (XOFF)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VTIME
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Time to wait for data (tenths of seconds)
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置软件流控制字符&nbsp;<a title="l4c4f3a7" class="anchor_super" id="l4c4f3a7" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4c4f3a7">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	用来做软件流控制的字符包含在数组c_cc的VSTART和VSTOP元素里面。通常情况下，它们应该被设置成DC1(八进制021)和DC3(八进制023)，它们在ASCII标准中代表着XON和XOFF字符。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置读取超时&nbsp;<a title="hd080f10" class="anchor_super" id="hd080f10" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#hd080f10">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	UNIX串口驱动提供了设置字符和包超时的能力。数组c_cc中有两个元素可以用来设置超时：VMIN和VTIME。<em>在经典输入模式或者通过open(2)和fcntl(2)函数传递NDELAY选项时，超时设置会被忽略。</em>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	VMIN可以指定读取的最小字符数。如果它被设置为0，那么VTIME值则会指定每个字符读取的等待时间。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
如果VMIN不为零，VTIME会指定等待第一个字符读取操作的时间。如果在这个指定时间中可以开始读取某个字符，直到VMIN个数的所有字符全部被读
取，其他读取操作将会被阻塞（等待）。也就是说，一旦读取第一个字符，串口驱动的预期就是接收到整个字符包（一共VMIN字节）。如果在允许的时间内没有
字符被读取，那么read(2)调用就会返回0。通过这个方法可以确切得告诉串口驱动程序需要读取N个字节，而且read(2)调用只会返回N或者0。然
而，超时设置只对第一个字符的读取操作有效，所以，如果因为某些原因驱动程序在N字节的包中丢失某个字符的话，read(2)调用将会一直等下去。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	VTIME可以以十分之一秒为单位指定等待字符输入的时间。如果VTIME设置为0（默认情况），除非open(2)或者fcntl(2)函数设置了NDELAY选项，否则read(2)将会永久得阻塞（等待）。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
调制解调器通讯&nbsp;<a title="jfe611bd" class="anchor_super" id="jfe611bd" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#jfe611bd">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	说到串口通讯就不得不提一下通过调剂解调器通讯的方式。这里给出的程序例子都适用于支持“事实上的”标准AT命令集的调制解调器。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
什么是调制解调器&nbsp;<a title="la44ce5c" class="anchor_super" id="la44ce5c" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#la44ce5c">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
调制解调器是一种可以将数字信号的串行数据转化为模拟信号频率的设备。通过这种转换，信息就可以通过像电话线或者有线电视线缆那样的模拟数据链路来传输
了。口语中，经常将调制解调器称作“猫”。标准的电话调制解调器可以将串行数据转化为能够通过电话线传输的音频；因为这种转化非常之快又非常复杂，所以如
果你去听一下的话，这些音频很像是大声尖叫时发出来的声音。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	今天可以见到的调制解调器可以通过电话线每秒传输53000比特——5.3Kbps——的数据。还有就是，大多数调制解调器都使用数据压缩技术，这样就可以将某些类型数据的传输比特率提高到100kbps。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
与调制解调器通讯&nbsp;<a title="ta8ef8ea" class="anchor_super" id="ta8ef8ea" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ta8ef8ea">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	于调制解调器通讯的第一步就是要以原始输入模式打开和配置串口。
</p>
int            fd; struct termios options;/* open the port */ fd = 
open("/dev/ttyS0", O_RDWR | O_NOCTTY | O_NDELAY); fcntl(fd, F_SETFL, 0);
 /* get the current options */ tcgetattr(fd, &amp;options); /* set raw 
input, 1 second timeout */ options.c_cflag     |= (CLOCAL | CREAD); 
options.c_lflag     &amp;= ~(ICANON | ECHO | ECHOE | ISIG); 
options.c_oflag     &amp;= ~OPOST; options.c_cc[VMIN]  = 0; 
options.c_cc[VTIME] = 10; /* set the options */ tcsetattr(fd, TCSANOW, 
&amp;options);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	接下来就需要和调制解调器建立通讯连接。最好的办法就是给调制解调器发送“AT”命令。这也会让比较只能的调制解调器探测到你正在使用的波特率。如果正确地连接到调制解调器上，并且调制解调器开启电源，它会返回一个回应信号“OK”。
</p>
int                  /* O - 0 = MODEM ok, -1 = MODEM bad */ 
init_modem(int fd)   /* I - Serial port file */ {  char buffer[255];  /*
 Input buffer */  char *bufptr;      /* Current char in buffer */  int  
nbytes;       /* Number of bytes read */  int  tries;        /* Number 
of tries so far */   for (tries = 0; tries &lt; 3; tries ++)  {   /* 
send an AT command followed by a CR */ 	if (write(fd, "AT\r", 3) &lt; 3)
 	  continue;   /* read characters into our string buffer until we get a
 CR or NL */	bufptr = buffer;	while ((nbytes = read(fd, bufptr, buffer +
 sizeof(buffer) - bufptr - 1)) &gt; 0)	{	  bufptr += nbytes;	  if 
(bufptr[-1] == '\n' | bufptr[-1] == '\r')        break;	}   /* nul 
terminate the string and see if we got an OK response */	*bufptr = '\0';
	if (strncmp(buffer, "OK", 2) == 0)	  return (0);  }  return (-1); }
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
标准调制解调器命令&nbsp;<a title="k026ecb5" class="anchor_super" id="k026ecb5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k026ecb5">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	大多数调制解调器都支持“AT”命令集。之所以这样叫是因为这个命令集中的每个命令都是以“AT”字符开头。每个命令都是以第一列的AT开头字符后面跟上特殊命令参数和一个回车符CR(八进制015)。调制解调器处理完这条命令之后会根据命令回复一些文本消息。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATD 拨号 [#b39592a6]
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATD命令可以拨打一个指定号码。除过号码和分隔符(-)以外，你还可以指定以音频（"T"）或者脉冲（"P"）方式拨号，暂停一秒（","）和等待拨号音（"W"）：
</p>
ATDT 555-1212 ATDT 18008008008W1234,1,1234 ATD T555-1212WP1234
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	调制解调器可能回复下面列出的某个消息：
</p>
NO DIALTONE BUSY NO CARRIER CONNECT CONNECT baud
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATH 挂断
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATH命令可以让调制解调器挂断。因为，调制解调器如果在“命令”模式的话，你可能就不能打普通电话了。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	如果DTR信号线掉了的话，大部分调制解调器也会挂断。你可以将波特率设置成0并且持续至少1秒来做到这一点。再次让DTR掉落同样也可以把调制解调器重新拉回命令模式。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	调制解调器成功挂断以后，它会回复一个"NO CARRIER"回来。如果调制解调器仍然保持连接，它则会发送"CONNECT"或者"CONNECT baud"这样的消息。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATZ 重置调制解调器
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATZ命令可以重置调制解调器。重置之后它会回复字符串"OK"。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		与调制解调器通讯的常见问题
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	首先，也是最重要的一点，<strong>千万不要使用回声输入(input echoing)</strong>。回声输入会导致调制解调器和计算机之间产生反馈循环。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	其次，当发送调制解调器命令时，命令必须以回车(CR)而不是换行(NL)结束。C语言中回车的字符常量是"\r"。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	最后，处理调制解调器通讯的时候，要一定保证你使用了调制解调器支持的波特率。虽然大多数调制解调器都支持自动探测波特率，但你也会注意到某些（通常是19.2kbps或者比较老的调制解调器）有局限性。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
高级串口编程&nbsp;<a title="tb86878b" class="anchor_super" id="tb86878b" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#tb86878b">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	所谓高级串口编程其实说的就是使用更直接的底层的ioctl(2)和select(2)系统调用来操作串口。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
串口的ioctl&nbsp;<a title="qf91da78" class="anchor_super" id="qf91da78" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#qf91da78">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	前文中曾经提到使用tcgetattr和tcsetattr函数来配置串口。UNIX环境下，这些函数都是使用ioctl(2)系统调用来实现的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	系统调用ioctl可以带三个参数：
</p>
int ioctl(int fd, int request, ...);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	显然，fd参数对于串口编程来说就是串口设备文件的文件描述符咯。而request参数是在<termios.h>头文件中定义的常量，而且一般不会超出下表所列的范围。
</termios.h></p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>串口的IOCTL请求</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					REQUEST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					POSIX函数
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCGETS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Gets the current serial port settings.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcgetattr
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings immediately.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSANOW, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETSF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings after flushing the input and output buffers.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSAFLUSH, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETSW
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings after allowing the input and output buffers to drain/empty.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSADRAIN, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSBRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sends a break for the given time.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsendbreak, tcdrain
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCXONC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Controls software flow control.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcflow
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCFLSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Flushes the input and/or output queue.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcflush
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCMGET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Returns the state of the "MODEM" bits.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCMSET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the state of the "MODEM" bits.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FIONREAD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Returns the number of bytes in the input buffer.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
取得控制信号&nbsp;<a title="h1f77c9e" class="anchor_super" id="h1f77c9e" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#h1f77c9e">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	TIOCMGET ioctl可以取得当前调制解调器的状态位。这个状态位囊括了除去<em>RXD</em>和<em>TXD</em>信号线的所有RS-232信号，这些都在下表中列出。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>控制信号常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_LE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR (data set ready/line enable)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_DTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR (data terminal ready)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS (request to send)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_ST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary TXD (transmit)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_SR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RXD (receive)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS (clear to send)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CAR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DCD (data carrier detect)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Synonym for TIOCM_CAR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RNG
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RNG (ring)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RI
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Synonym for TIOCM_RNG
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_DSR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR (data set ready)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	例如下面这个程序片段，你可以通过给ioctl带一个用来保存状态位的整形变量的指针来取得状态位。
</p>
#include <unistd.h> #include <termios.h> int fd; int status; ioctl(fd, TIOCMGET, &amp;status);
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
设置控制信号&nbsp;<a title="s2e1f1e6" class="anchor_super" id="s2e1f1e6" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#s2e1f1e6">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	TIOCMSET ioctl可以设置上面定义的调制解调器状态位。下面的例子展示如何使用它来将DTR信号线设成掉线状态。
</p>
#include <unistd.h> #include <termios.h> int fd; int status; ioctl(fd, TIOCMGET, &amp;status); status &amp;= ~TIOCM_DTR; ioctl(fd, TIOCMSET, &amp;status);
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可能被设置的状态位取决于操作系统，驱动和正在使用的模式。关于更详细的信息应该去看以下你所使用的操作系统的文档。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
英文原文&nbsp;<a title="t79f0e01" class="anchor_super" id="t79f0e01" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#t79f0e01">?</a>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.easysw.com/%7Emike/serial/serial.html" target="_blank" rel="nofollow">http://www.easysw.com/~mike/serial/serial.html</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<a href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396" target="_blank"><span style="color:#19599b;">http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396</span></a><a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n50a0151" target="_blank">串口本身，标准和硬件</a>
</p>
<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n9a2f344" target="_blank">什么是串行通信</a>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ra8ec174" target="_blank">什么是RS-232</a>
		<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ka051097" target="_blank">信号定义</a>
			</li>
		</ul>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n44f8de3" target="_blank">异步通讯</a>
		<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pd501f10" target="_blank">什么是全双工和半双工</a>
			</li>
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p4107587" target="_blank">什么是流控制</a>
			</li>
			<li>
				<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#rff8ebf5" target="_blank">什么是BREAK</a>
			</li>
		</ul>
	</li>
	<li>
		<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#maf72658" target="_blank">同步通讯</a>
	</li>
</ul>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#d54588ec" target="_blank">用户看到的串口和用户空间的串口编程</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#m762ca74" target="_blank">串口的设备文件</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#e0c5bdb0" target="_blank">打开串口</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#gd68baed" target="_blank">打开文件的选项</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p0f688bb" target="_blank">给端口上写数据</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v8ac00e5" target="_blank">从端口上读取数据</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#cc09d3b8" target="_blank">关闭串口</a>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396" target="_blank">配置串口</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#w4b79eef" target="_blank">POSIX终端接口</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#u93000d5" target="_blank">控制选项</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pf67f840" target="_blank">设置波特率</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ed0ca407" target="_blank">设置字符大小</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ec39e271" target="_blank">设置奇偶校验</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v25cc08e" target="_blank">设置硬件流控制</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#z872a694" target="_blank">本地设置</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#aa0a4534" target="_blank">选择经典输入</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x7fa7658" target="_blank">选择原始输入</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#y1704144" target="_blank">输入选项</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#b910e489" target="_blank">设置输入奇偶校验选项</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4a5f971" target="_blank">设置软件流控制</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x89409ba" target="_blank">输出选项</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l219f12d" target="_blank">选择加工过的输出</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#wc46dec3" target="_blank">选择原始输出</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#f8321f9d" target="_blank">控制字符</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4c4f3a7" target="_blank">设置软件流控制字符</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#hd080f10" target="_blank">设置读取超时</a>
				</li>
			</ul>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#jfe611bd" target="_blank">调制解调器通讯</a>
	<ul class="list2" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#la44ce5c" target="_blank">什么是调制解调器</a>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ta8ef8ea" target="_blank">与调制解调器通讯</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k026ecb5" target="_blank">标准调制解调器命令</a>
				</li>
			</ul>
		</li>
		<li>
			<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#tb86878b" target="_blank">高级串口编程</a>
			<ul class="list3" style="padding-left:16px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;">
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#qf91da78" target="_blank">串口的ioctl</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#h1f77c9e" target="_blank">取得控制信号</a>
				</li>
				<li>
					<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#s2e1f1e6" target="_blank">设置控制信号</a>
				</li>
			</ul>
		</li>
	</ul>
</li>
<li>
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#t79f0e01" target="_blank">英文原文</a>
</li>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	串口本身，标准和硬件&nbsp;<a title="n50a0151" class="anchor_super" id="n50a0151" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n50a0151">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
串口是计算机上的串行通讯的物理接口。计算机历史上，串口曾经被广泛用于连接计算机和终端设备和各种外部设备。虽然以太网接口和USB接口也是以一个串行
流进行数据传送的，但是串口连接通常特指那些与RS-232标准兼容的硬件或者调制解调器的接口。虽然现在在很多个人计算机上，原来用以连接外部设备的串
口已经广泛的被USB和Firewire替代；而原来用以连接网络的串口则被以太网替代，还有用以连接终端的串口设备则已经被MDA或者VGA取而代之。
但是，一方面因为串口本身造价便宜技术成熟，另一方面因为串口的控制台功能RS-232标准高度标准化并且非常普及，所以直到现在它仍然被广泛应用到各种
设备上。 
某些计算机使用一个叫做UART的集成电路来作为串口设备。这个集成电路可以进行字符和异步串行通讯序列之间的转换，并且可以自动地处理数据的时序。而某
些低端设备则会让CPU直接通过输出针来传送数据，这种技术叫做bit-banging。 
因为“串口”，RS-232和UARTs基本上总是在同一个语境中出现，所以这些名词通常会被搞混。下面逐一解释以下一些重要的名词和术语。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是串行通信&nbsp;<a title="n9a2f344" class="anchor_super" id="n9a2f344" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n9a2f344">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	计算机可以每次传送一个或者多个位(bit)的数据。“串行”指的式每次只传输一位(1bit)数据。 
当需要通过串行通讯传输一个字(word)的数据时，只能以每次一位的方式接收或者发送。每个位可能是on(1)或者off(0)。很多技术术语中经常用
mark表示on，而space表示off。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
串行数据的速度通常用每秒传输的字节数bits-per-second(bps)或者波特率(baud)表示。这个值表示的是每秒钟被送出的0和1的个
数。很久很久以前，300bps就是很快的速度了，而现在的电脑可以处理高达430,800的RS-232速率。表示波特率的单位还有kpbs和
Mbps，1kps=1000bps而1Mbps=1000kbps。 一般有人提到串行设备的时候，它通常说可能是某种数据通讯设备-DCE(Data
 Communications Equipment)或者数据终端设备-DTE(Data Terminal 
Equipment)。它们之间的区别非常简单，每个信号对，比如传送和接收，它们俩正好是相反的。如果需要将两个DTE或者DCE设备连接起来的话，需
要适配器或者交叉线缆将信号对交换。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是RS-232&nbsp;<a title="ra8ec174" class="anchor_super" id="ra8ec174" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ra8ec174">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232是EIA(Electronic Industries 
Association)定义的串行通信的电器接口。RS-232事实上有三种(A,B和C)，它们分别采用不同的电压来表示on和off。最被广泛使用
的是RS-232C，它将mark(on)比特的电压定义为-3V到-12V之间，而将space(off)的电压定义到+3V到+12V之间。虽然
RS-232C标准说信号最远被传输8m，但事实上你可以使用它传输更长的距离，直到信号波特率已经小到不行了为止。 
RS-232的连结线中除去用来传入传出数据的电线，还有一些用来提供时序，状态和握手的电线：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232 针脚定义
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	DB-25
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Earth Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR - Data Set Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					11
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					16
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RXD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					21
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Signal Quality Detect
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TXD - Transmitted Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					GND - Logic Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					12
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary DCD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					17
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Receiver Clock
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					22
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ring Detect
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RXD - Received Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DCD - Data Carrier Detecter
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					13
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					18
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					23
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Rate Select
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS - Request To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Reserved
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					14
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary TXD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					19
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					24
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS - Clear To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					10
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Reserved
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					15
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Clock
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					20
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR - Data Terminal Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					25
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Unassigned
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	DB-9
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					针脚
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					名称
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					全名
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					方向(主机 外设)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Transmit Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Receive Data
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Request To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Clear To Send
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Set Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Terminal Ready
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-&gt;
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Data Carrier Detect
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RI
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ring Indicator
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					&lt;-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Signal Ground
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	另外两个比较常见的串行接口的标准式RS-422和RS-574。RS-422使用更低的电压和差分信号，这样可以将传输距离扩张到300m。而RS-574定义了通常可以见到的用在电脑上的9针连接器和电压。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	信号定义&nbsp;<a title="ka051097" class="anchor_super" id="ka051097" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ka051097">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	RS-232标准定义了18个不同的串行通信的信号。而这些之中，仅仅有如下6个可以在UNIX环境中使用。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		GND - Logic Ground
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				从技术角度讲，GND不能算是信号。但是没有它其他信号都不能用了。基本上，logic ground有点像一个参考电压，通过它来判断哪个电压表示正哪个电压表示负。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		TXD - Transmitted Data
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				TXD信号负载着从你的电脑或者设备到另一端(比如调制解调器)的数据。Mark范围的电压被解析成1，而space范围电压被解析成0。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		RXD - Received Data
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				RXD于TXD正好相反。它负载着从另一端的电脑或者设备上传到你的工作站的数据。Mark和space的解析方法于TXD一致。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		DCD - Data Carrier Detect
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				DCD信号通常来自串口连结线的另一端。这条信号线上的space电压表示另一端的电脑或者设备现在已经连接。但是，DCD信号线却不是总可以得到的，有些设备上有这条信号线，而有的则没有。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		DTR - Data Terminal Ready
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				DTR信号是你的工作站产生的，用以告诉另一端的电脑或者设备你已经是否已经准备好了。Space电压表示准备好了，而mark电压表示没有准备好。当你在工作站上打开串行接口时，DTR通常自动被设置位有效。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		CTS - Clear To Send
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				CTS则通常来自连结线的另一端。Space电压表示你可以从工作站送出更多的数据。CTS通常用来协调你的工作站和另一端之间的串行数据流。
			</p>
		</blockquote>
	</li>
</ul>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		RTS - Request To Send
		<blockquote style="margin-left:32px;">
			<p class="quotation">
				如果RTS信号被设置成space电压，这表示你准备好了一些数据需要传送。和CTS一样，RTS也被用来协调工作站和另一端的电脑或者设备之间的数据流。有些工作站上会一直将这个信号设置位space。
			</p>
		</blockquote>
	</li>
</ul>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	异步通讯&nbsp;<a title="n44f8de3" class="anchor_super" id="n44f8de3" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#n44f8de3">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	计算机为了弄懂传给它的串行数据，它需要确定每个字符开始和结束的位置。这通常是用异步串行数据来完成的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
在异步模式中，除非有字符被传输，否则串行数据线总是处于mark(1)状态。有一个start位会被加入传输字符的各个位之前，在字符本身的位之后会有
一个可选的parity位和一个或者多个stop位。Start位总是space(0)并且它会告诉计算机新的串行数据过来了。数据可以随时被送出或者接
收，这就是所谓的异步。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	#ref(): File not found: "async.gif" at page "Linux串口编程详解"
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
那个可选的parity位仅仅是所有传输位的和，这个和用以表示传输字符中有奇数个1还是偶数个1。在偶数parity中，如果有传输字符中有偶数个1，
那么parity位被设置成0，而传输字符中有奇数个1，那么parity位被设置成1。在奇数parity中，位设置与此相反。还有一些术语，比如
space parity, mark parity和no parity。Space parity是指parity位会一直被设置位0，而mark 
parity正好与此相反，parity会一直是1。No parity的意思就是根本不会传输parity位。 
剩余的位叫做stop位。传输字符之间可以有1个,1.5个或者2个stop位，而且，它们的值总是1。传统上，Stop位式用给计算机一些时间处理前面
的字符的，但是它只是被用来同步接收数据的计算机和接受的字符。 
异步数据通常被表示成"8N1"，"7E1"，或者与此类似的形式。这表示“8数据位，no parity和1个stop 
bit”，还有相应得，“7数据位，even parity和1个stop bit”。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是全双工和半双工&nbsp;<a title="pd501f10" class="anchor_super" id="pd501f10" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pd501f10">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	全双工(Full duplex)是说计算机可以同时接受和发送数据——也就是它有两个分开的数据传输通道(一个传入，一个传出)。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	半双工(Half duplex)表示计算机不能同时接受和发送数据，而在某一时刻它只能单一的传送或者接收。这通常意味着，它只有一个数据通道。半双工并不是说RS-232的某些信号不能使用，而是，它通常是使用了有别于RS-232的其他不支持全双工的标准。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是流控制&nbsp;<a title="p4107587" class="anchor_super" id="p4107587" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p4107587">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	两个串行接口之间的传输数据流通常需要协调一致才行。这可能是由于用以通信的某个串行接口或者某些存储介质的中间串行通信链路的限制造成的。对于异步数据这里有两个方法做到这一点。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
第一种方法通常被叫做“软件”流控制。这种方法采用特殊字符来开始(XON，DC1，八进制数021)或者结束(XOFF，DC3或者八进制数023)数
据流。而这些字符都在ASCII中定义好了。虽然这些编码对于传输文本信息非常有用，但是它们却不能被用于在特殊程序中的其他类型的信息。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
第二种方法叫做“硬件”流控制。这种方法使用RS-232标准的CTS和RTS信号来取代之前提到的特殊字符。当准备就绪时，接受一方会将CTS信号设置
成为space电压，而尚未准备就绪时它会被设置成为mark电压。相应得，发送方会在准备就绪的情况下将RTS设置成space电压。正因为硬件流控制
使用了于数据分隔的信号，所以与需要传输特殊字符的软件流控制相比它的速度很快。但是，并不是所有的硬件和操作系统都支持CTS/RTS流控制。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是BREAK&nbsp;<a title="rff8ebf5" class="anchor_super" id="rff8ebf5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#rff8ebf5">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通常，直到有数据传输时，接收和传输信号会保持在mark电压。如果一个信号掉到space电压并且持续了很长时间，一般来说是1/4到1/2秒，那么就说有一个break条件存在了。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	BREAK经常被用来重置一条数据线或者用来改变像调制解调器这样的设备的通讯模式。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	同步通讯&nbsp;<a title="maf72658" class="anchor_super" id="maf72658" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#maf72658">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
与异步数据不同，同步数据是一个稳定的字节流。为了能够在线路上读取到数据，计算机必须提供或者接受一个时钟，这样才能保证发送端和接收端同步。尽管已经
有同步时钟，计算机还是必须以某种方式标志数据流的开端。做这件事情最常见的办法就是使用像Serial Data Link 
Control("SDLC")或者High-Speed Data Link Control("HDLC")这样的数据包通讯协议。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	这些协议每个都定义了一个确定的比特序列来表示数据包的开始和结束。当然，它们也定义了一个用来表示没有数据传输的比特序列。这些比特序列可以帮助计算机识别数据包的开端。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	因为同步协议可以不使用每个字符的同步比特位，所以通常它们的性能比异步通讯快最少25%，而且一般比较适用于远距离的网络链接或者有两个串口接口的配置的情况。尽管同步通讯的速度有优势，大部分RS-232硬件却不支持它，因为同步通讯需要其他的硬件和软件。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	用户看到的串口和用户空间的串口编程&nbsp;<a title="d54588ec" class="anchor_super" id="d54588ec" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#d54588ec">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	和其他设备一样，Linux也是通过设备文件来提供访问串口的功能。当需要访问串口的时候，你只需要open相应的文件。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	串口的设备文件&nbsp;<a title="m762ca74" class="anchor_super" id="m762ca74" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#m762ca74">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	Linux系统上一般有一个或者多个串口，而这些串口设备文件名字比较奇怪，如比下面这样
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>串口设备文件名</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					操作系统
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					串口1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					串口2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					USB/RS-232转换器
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Windows
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					COM1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					COM2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Linux
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyS0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyS1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					/dev/ttyUSB0
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	打开串口&nbsp;<a title="e0c5bdb0" class="anchor_super" id="e0c5bdb0" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#e0c5bdb0">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
因为串口和其他设备一样，在类Unix系统中都是以设备文件的形式存在的，所以，理所当然得你可以使用open(2)系统调用/函数来访问它。但
Linux系统中却有一个稍微不方便的地方，那就是普通用户一般不能直接访问设备文件。你可以选择以下方式做一些调整，以便你编写的程序可以访问串口。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		改变设备文件的访问权限设置 [#cd9bd1e0]
	</li>
	<li>
		以root超级用户的身份运行程序 [#kdd0e577]
	</li>
	<li>
		将你的程序编写位setuid程序，以串口设备所有者的身份运行程序 [#s7b703ff]
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	OK.假如你已经准备好了让串口设备文件可以被所有用户访问，你可以在Linux系统中实验一下下面这个程序，它可以打开计算机的串口1。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	#include <stdio.h> #include <string.h> #include <unistd.h> #include <fcntl.h> /* File control definitions */ #include <errno.h> #include <termios.h>
 /* POSIX terminal control definitions */ /* * 'open_port()' - Open 
serial port 1 * Returns the file descriptor on success or -1 on error. 
*/ int open_port(void) {	int fd; /* File descriptor for the port */	fd =
 open("/dev/ttyS0", O_RDWR | O_NOCTTY | O_NDELAY);	if (fd == -1)	{		/*		
 * Could not open the port.		 */		perror("open_port: Unable to open 
/dev/ttyS0 -");	}	else	{		fcntl(fd, F_SETFL, 0);		return (fd);	} }
</termios.h></errno.h></fcntl.h></unistd.h></string.h></stdio.h></p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	打开文件的选项&nbsp;<a title="gd68baed" class="anchor_super" id="gd68baed" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#gd68baed">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	打开串口连接的时候，程序在open函数中除了Read+Write模式以外还指定了两个选项；
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	fd = open("/dev/ttyS0", O_RDWR | O_NOCTTY | O_NDELAY);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
标志O_NOCTTY可以告诉UNIX这个程序不会成为这个端口上的“控制终端”。如果不这样做的话，所有的输入，比如键盘上过来的Ctrl+C中止信号
等等，会影响到你的进程。而有些程序比如getty(1M/8)则会在打开登录进程的时候使用这个特性，但是通常情况下，用户程序不会使用这个行为。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	O_NDELAY标志则是告诉UNIX，这个程序并不关心DCD信号线的状态——也就是不关心端口另一端是否已经连接。如果不指定这个标志的话，除非DCD信号线上有space电压否则这个程序会一直睡眠。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	给端口上写数据&nbsp;<a title="p0f688bb" class="anchor_super" id="p0f688bb" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#p0f688bb">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	给端口上写入数据也很简单，使用write(2)系统调用就可以发送数据了：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	n = write(fd, "ATZ\r", 4); if (n &lt; 0)        fputs("write() of 4 bytes failed!\n", stderr);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
和写入其他设备文件的方式相同，write函数也会返回发送数据的字节数或者在发生错误的时候返回-1。通常，发送数据最常见的错误就是EIO，当调制解
调器或者数据链路将Data Carrier Detect(DCD)信号线弄掉了，就会发生这个错误。而且，直至关闭端口这个情况会一直持续。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	从端口上读取数据&nbsp;<a title="v8ac00e5" class="anchor_super" id="v8ac00e5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v8ac00e5">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	从串口上读取数据的时候就得耍花招了。因为，如果你在原数据模式(raw data 
mode)操作端口的话，每个read(2)系统调用都会返回从串口输入缓冲区中实际得到的字符的个数。在不能得到数据的情况下，read(2)系统调用
就会一直等着，只到有端口上新的字符可以读取或者发生超时或者错误的情况发生。如果需要read(2)函数迅速返回的话，你可以使用下面这个方式：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	fcntl(fd, F_SETFL, FNDELAY);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	标志FNDELAY可以保证read(2)函数在端口上读不到字符的时候返回0。需要回到正常（阻塞）模式的时候，需要再次在不带FNDELAY标志的情况下调用fcntl(2)函数：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	fcntl(fd, F_SETFL, 0);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	当然，如果你最初就是以O_NDELAY标志打开串口的，你也可在之后使用这个方法改变读取的行为方式。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	关闭串口&nbsp;<a title="cc09d3b8" class="anchor_super" id="cc09d3b8" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#cc09d3b8">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可以使用close(2)系统调用关闭串口：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	close(fd);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	关闭串口会将DTR信号线设置成low，这会导致很多调制解调器挂起。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	配置串口&nbsp;<a title="k35d6396" class="anchor_super" id="k35d6396" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396">?</a>
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	POSIX终端接口&nbsp;<a title="w4b79eef" class="anchor_super" id="w4b79eef" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#w4b79eef">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	很多系统都支持POSIX终端（串口）接口。程序可以利用这个接口来改变终端的参数，比如，波特率，字符大小等等。要使用这个端口的话，你必须将<termios.h>头文件包含到你的程序中。这个头文件中定义了终端控制结构体和POSIX控制函数。
</termios.h></p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	与串口操作相关的最重要的两个POSIX函数可能就是tcgetattr(3)和tcsetattr(3)。顾名思义，这两个函数分别用来取得设设置终端的属性。调用这两个函数的时候，你需要提供一个包含着所有串口选项的termios结构体：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>termios结构体成员</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					成员
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_cflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					控制选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_lflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					行选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_iflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输入选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_oflag
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输出选项
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_cc
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					控制字符
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_ispeed
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输入波特率(NEW)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					c_ospeed
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					输出波特率(NEW)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	控制选项&nbsp;<a title="u93000d5" class="anchor_super" id="u93000d5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#u93000d5">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过termios结构体的c_cflag成员可以控制波特率，数据的比特数，parity，停止位和硬件流控制。下面这张表列出了所有可以使用的常数。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_cflag常数</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CBAUD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Bit mask for baud rate
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					0 baud (drop DTR)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B50
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					50 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B75
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					75 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B110
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					110 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B134
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					134.5 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B150
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					150 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B300
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					300 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B1200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B1800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					1800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B2400
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2400 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B4800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					4800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B9600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					9600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B19200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					19200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B38400
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					38400 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B57600
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					57,600 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B76800
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					76,800 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					B115200
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					115,200 baud
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					EXTA
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					External rate clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					EXTB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					External rate clock
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CSIZE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Bit mask for data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS5
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					5 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS6
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					6 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS7
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					7 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CS8
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					8 data bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CSTOPB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					2 stop bits (1 otherwise)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CREAD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable receiver
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARENB
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable parity bit
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARODD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Use odd parity instead of even
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					HUPCL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Hangup (drop DTR) on last close
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CLOCAL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Local line - do not change "owner" of port
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					LOBLK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Block job control output
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CNEW_RTSCTS/CRTSCTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable hardware flow control (not supported on all platforms)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
在传统的POSIX编程中，当连接一个本地的（不通过调制解调器）或者远程的终端（通过调制解调器）时，这里有两个选项应当一直打开，一个是
CLOCAL，另一个是CREAD。这两个选项可以保证你的程序不会变成端口的所有者，而端口所有者必须去处理发散性作业控制和挂断信号，同时还保证了串
行接口驱动会读取过来的数据字节。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	波特率常数(CBAUD,B9600等等)通常指用到那些不支持c_ispeed和c_ospeed成员的旧的接口上。后面文章将会提到如何使用其他POSIX函数来设置波特率。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	千万不要直接用使用数字来初始化c_cflag（当然还有其他标志），最好的方法是使用位运算的与或非组合来设置或者清除这个标志。不同的操作系统版本会使用不同的位模式，使用常数定义和位运算组合来避免重复工作从而提高程序的可移植性。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置波特率&nbsp;<a title="pf67f840" class="anchor_super" id="pf67f840" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#pf67f840">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	不同的操作系统会将波特率存储在不同的位置。旧的编程接口将波特率存储在上表所示的c_cflag成员中，而新的接口实装则提供了c_ispeed和c_ospeed成员来保存实际波特率的值。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	程序中可是使用cfsetospeed(3)和cfsetispeed(3)函数在termios结构体中设置波特率而不用去管底层操作系统接口。下面的代码是个非常典型的设置波特率的例子。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	struct termios options; /* * Get the current options for the port... */
 tcgetattr(fd, &amp;options);/* * Set the baud rates to 19200... */ 
cfsetispeed(&amp;options, B19200); cfsetospeed(&amp;options, B19200); /*
 * Enable the receiver and set local mode... */ options.c_cflag |= 
(CLOCAL | CREAD); /* * Set the new options for the port... */ 
tcsetattr(fd, TCSANOW, &amp;options);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
函数tcgetattr(3)会将当前串口配置回填到termio结构体option中。然后，程序设置了输入输出的波特率并且将本地模式
(CLOCAL)和串行数据接收(CREAD)设置为有效，接着将新的配置作为参数传递给函数tcsetattr(3)。常量TCSANOW标志所有改变
必须立刻生效而不用等到数据传输结束。其他另一些常数可以保证等待数据结束或者刷新输入输出之后再生效。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>tcsetattr常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSANOW
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Make changes now without waiting for data to complete
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSADRAIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Wait until everything has been transmitted
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSAFLUSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Flush input and output buffers and make the change
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	不同的系统上可能支持不同的输入输出速度，所以，通过串口连接两台机器或者设备的时候，应该将波特率设置成两者中较小的那个，即MIN(speed1, speed2)。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置字符大小&nbsp;<a title="ed0ca407" class="anchor_super" id="ed0ca407" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ed0ca407">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置字符大小的时候，这里却没有像设置波特率那么方便的函数。所以，程序中需要一些位掩码运算来把事情搞定。字符大小以比特为单位指定：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_flag &amp;= ~CSIZE; /* Mask the character size bits */ options.c_flag |= CS8;    /* Select 8 data bits */
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置奇偶校验&nbsp;<a title="ec39e271" class="anchor_super" id="ec39e271" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ec39e271">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	与设置字符大小的方式差不多，这里仍然需要组合一些位掩码来将奇偶校验设为有效和奇偶校验的类型。UNIX串口驱动可以生成even，odd和no parity位码。设置space奇偶校验需要耍点小手段。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		No parity (8N1)
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag &amp;= ~PARENB options.c_cflag &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS8;
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Even parity (7E1)
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag |= PARENB options.c_cflag &amp;= ~PARODD 
options.c_cflag &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; 
options.c_cflag |= CS7;
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Odd parity (7O1)
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag |= PARENB options.c_cflag |= PARODD options.c_cflag 
&amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS7;
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		Space parity is setup the same as no parity (7S1)
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag &amp;= ~PARENB options.c_cflag &amp;= ~CSTOPB options.c_cflag &amp;= ~CSIZE; options.c_cflag |= CS8;
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置硬件流控制&nbsp;<a title="v25cc08e" class="anchor_super" id="v25cc08e" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#v25cc08e">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	某些版本的UNIX系统支持通过CTS(Clear To Send)和RTS(Request To 
Send)信号线来设置硬件流控制。如果系统上定义了CNEW_RTSCTS和CRTSCTS常量，那么很可能它会支持硬件流控制。使用下面的方法将硬件
流控制设置成有效：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag |= CNEW_RTSCTS;    /* Also called CRTSCTS
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	将它设置成为无效的方法与此类似：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_cflag &amp;= ~CNEW_RTSCTS;
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	本地设置&nbsp;<a title="z872a694" class="anchor_super" id="z872a694" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#z872a694">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	本地模式成员变量c_lflag可以控制串口驱动怎样控制输入字符。通常，你可能需要通过c_lflag成员来设置经典输入和原始输入模式。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>成员变量c_lflag可以使用的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ISIG
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable SIGINTR, SIGSUSP, SIGDSUSP, and SIGQUIT signals
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ICANON
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable canonical input (else raw)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					XCASE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map uppercase \lowercase (obsolete)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHO
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable echoing of input characters
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo erase character as BS-SP-BS
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo NL after kill character
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHONL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NOFLSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Disable flushing of input buffers after interrupt or quit characters
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IEXTEN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable extended functions
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOCTL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo control characters as ^char and delete as ~?
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOPRT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo erased character as character erased
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ECHOKE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS-SP-BS entire line on line kill
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FLUSHO
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Output being flushed
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PENDIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Retype pending input at next read or input char
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TOSTOP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Send SIGTTOU for background output
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择经典输入&nbsp;<a title="aa0a4534" class="anchor_super" id="aa0a4534" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#aa0a4534">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	经典输入是以面向行设计的。在经典输入模式中输入字符会被放入一个缓冲之中，这样可以以与用户交互的方式编辑缓冲的内容，直到收到CR(carriage return)或者LF(line feed)字符。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择使用经典输入模式的时候，你通常需要选择ICANON，ECHO和ECHOE选项：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_lflag |= (ICANON | ECHO | ECHOE);
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择原始输入&nbsp;<a title="x7fa7658" class="anchor_super" id="x7fa7658" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x7fa7658">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	原始输入根本不会被处理。输入字符只是被原封不动的接收。一般情况中，如果要使用原始输入模式，程序中需要去掉ICANON，ECHO，ECHOE和ISIG选项：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_lflag &amp;= ~(ICANON | ECHO | ECHOE | ISIG);
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	输入选项&nbsp;<a title="y1704144" class="anchor_super" id="y1704144" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#y1704144">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可以通过输入模式成员c_iflag来控制从端口上收到的字符的输入过程。与c_cflag一样，c_iflag的最终值是想要使用的所有状态的位运算OR的组合。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_iflag成员可以使用的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					INPCK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable parity check
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNPAR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore parity errors
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					PARMRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mark parity errors
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ISTRIP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Strip parity bits
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXON
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable software flow control (outgoing)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXOFF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Enable software flow control (incoming)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IXANY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Allow any character to start flow again
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNBRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore break condition
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BRKINT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Send a SIGINT when a break condition is detected
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					INLCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map NL to CR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IGNCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Ignore CR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ICRNL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map CR to NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IUCLC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map uppercase to lowercase
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					IMAXBEL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Echo BEL on input line too long
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置输入奇偶校验选项&nbsp;<a title="b910e489" class="anchor_super" id="b910e489" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#b910e489">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
当程序在c_cflag中设置了奇偶校验成员(PARENB)的时候，程序就需要将输入奇偶校验设置成为有效。与奇偶校验相关的常量有
INPCK，IGNPAR，PARMRK和ISTRIP。一般情况下，你可能需要选择INPCK和ISTRIP将奇偶校验设置为有效同时从接收字串中脱去
奇偶校验位：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_iflag |= (INPCK | ISTRIP);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	IGNPAR是一个比较危险选项，即便有错误发生时，它也会告诉串口驱动直接忽略奇偶校验错误给数据放行。这个选项在测试链接的通讯质量时比较有用而通常不会被用在实际程序中。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	PARMRK会导致奇偶校验错误被标志成特殊字符加入到输入流之中。如果IGNPAR选项也是有效的，那么一个NUL(八进制000)字符会被加入到发生奇偶校验错误的字符前面。否则，DEL(八进制177)和NUL字符会和出错的字符一起送出。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置软件流控制&nbsp;<a title="l4a5f971" class="anchor_super" id="l4a5f971" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4a5f971">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	软件流控制可以通过IXON，IXOFF和IXANY常量设置成有效：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_iflag |= (IXON | IXOFF | IXANY);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	将其设置为无效的时候，很简单，只需要对这些位取反：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_iflag &amp;= ~(IXON | IXOFF | IXANY);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	XON(start data)和XOFF(stop data)字符却是在c_cc数组中定义的，下面会详细描述这个数组。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	输出选项&nbsp;<a title="x89409ba" class="anchor_super" id="x89409ba" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#x89409ba">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	成员变量c_oflag之中包括了输出过滤选项。和输入模式相似，程序可以选择使用经过加工的或者原始的数据输出。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>c_oflag成员的常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OPOST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Postprocess output (not set = raw output)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OLCUC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map lowercase to uppercase
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ONLCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map NL to CR-NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OCRNL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Map CR to NL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NOCR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No CR output at column 0
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					ONLRET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL performs CR function
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OFILL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Use fill characters for delay
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					OFDEL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Fill character is DEL
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NLDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed between lines
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for NLs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					NL1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay further output after newline for 100 milliseconds
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CRDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed to return carriage to left column
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay after CRs depending on current column position
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 100 milliseconds after sending CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CR3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 150 milliseconds after sending CRs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TABDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay after TABs depending on current column position
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 100 milliseconds after sending TABs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TAB3
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Expand TAB characters to spaces
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BSDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					BS1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 50 milliseconds after sending BSs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VTDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VT0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VT1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 2 seconds after sending VTs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FFDLY
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Mask for delay time needed after FFs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FF0
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					No delay for FFs
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FF1
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Delay 2 seconds after sending FFs
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择加工过的输出&nbsp;<a title="l219f12d" class="anchor_super" id="l219f12d" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l219f12d">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过在c_oflag成员变量中设置OPOST选项的方法程序可以选择加工过的输入。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_oflag |= OPOST;
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	在所有选项当中，你可能只需要使用ONLCR选项来将行分隔符映射到CR-LF组合对上。其他选项主要是历史遗留，仅仅与行打印机和终端跟不上串行数据的年代有关。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	选择原始输出&nbsp;<a title="wc46dec3" class="anchor_super" id="wc46dec3" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#wc46dec3">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	原始输出方式可以通过在c_oflag中重置OPOST选项来选择：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	options.c_oflag &amp;= ~OPOST;
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	如果OPOST选项被设置成无效的话，其他c_oflag中的选项都会失效。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	控制字符&nbsp;<a title="f8321f9d" class="anchor_super" id="f8321f9d" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#f8321f9d">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	字符数组c_cc里面包括了控制字符的定义和超时参数。这个数组的每个元素都是以常量定义的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>成员变量c_cc中的控制字符</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					键
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VINTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Interrupt
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-C
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VQUIT
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Quit
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-Z
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VERASE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Erase
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Backspace (BS)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VKILL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Kill-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-U
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					End-of-file
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-D
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOL
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					End-of-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Carriage return (CR)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VEOL2
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Second end-of-line
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Line feed (LF)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VMIN
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Minimum number of characters to read
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VSTART
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Start flow
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-Q (XON)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VSTOP
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Stop flow
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTRL-S (XOFF)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					VTIME
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Time to wait for data (tenths of seconds)
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					-
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置软件流控制字符&nbsp;<a title="l4c4f3a7" class="anchor_super" id="l4c4f3a7" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#l4c4f3a7">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	用来做软件流控制的字符包含在数组c_cc的VSTART和VSTOP元素里面。通常情况下，它们应该被设置成DC1(八进制021)和DC3(八进制023)，它们在ASCII标准中代表着XON和XOFF字符。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置读取超时&nbsp;<a title="hd080f10" class="anchor_super" id="hd080f10" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#hd080f10">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	UNIX串口驱动提供了设置字符和包超时的能力。数组c_cc中有两个元素可以用来设置超时：VMIN和VTIME。<em>在经典输入模式或者通过open(2)和fcntl(2)函数传递NDELAY选项时，超时设置会被忽略。</em>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	VMIN可以指定读取的最小字符数。如果它被设置为0，那么VTIME值则会指定每个字符读取的等待时间。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
如果VMIN不为零，VTIME会指定等待第一个字符读取操作的时间。如果在这个指定时间中可以开始读取某个字符，直到VMIN个数的所有字符全部被读
取，其他读取操作将会被阻塞（等待）。也就是说，一旦读取第一个字符，串口驱动的预期就是接收到整个字符包（一共VMIN字节）。如果在允许的时间内没有
字符被读取，那么read(2)调用就会返回0。通过这个方法可以确切得告诉串口驱动程序需要读取N个字节，而且read(2)调用只会返回N或者0。然
而，超时设置只对第一个字符的读取操作有效，所以，如果因为某些原因驱动程序在N字节的包中丢失某个字符的话，read(2)调用将会一直等下去。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	VTIME可以以十分之一秒为单位指定等待字符输入的时间。如果VTIME设置为0（默认情况），除非open(2)或者fcntl(2)函数设置了NDELAY选项，否则read(2)将会永久得阻塞（等待）。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	调制解调器通讯&nbsp;<a title="jfe611bd" class="anchor_super" id="jfe611bd" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#jfe611bd">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	说到串口通讯就不得不提一下通过调剂解调器通讯的方式。这里给出的程序例子都适用于支持“事实上的”标准AT命令集的调制解调器。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	什么是调制解调器&nbsp;<a title="la44ce5c" class="anchor_super" id="la44ce5c" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#la44ce5c">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	
调制解调器是一种可以将数字信号的串行数据转化为模拟信号频率的设备。通过这种转换，信息就可以通过像电话线或者有线电视线缆那样的模拟数据链路来传输
了。口语中，经常将调制解调器称作“猫”。标准的电话调制解调器可以将串行数据转化为能够通过电话线传输的音频；因为这种转化非常之快又非常复杂，所以如
果你去听一下的话，这些音频很像是大声尖叫时发出来的声音。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	今天可以见到的调制解调器可以通过电话线每秒传输53000比特——5.3Kbps——的数据。还有就是，大多数调制解调器都使用数据压缩技术，这样就可以将某些类型数据的传输比特率提高到100kbps。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	与调制解调器通讯&nbsp;<a title="ta8ef8ea" class="anchor_super" id="ta8ef8ea" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#ta8ef8ea">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	于调制解调器通讯的第一步就是要以原始输入模式打开和配置串口。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	int            fd; struct termios options;/* open the port */ fd = 
open("/dev/ttyS0", O_RDWR | O_NOCTTY | O_NDELAY); fcntl(fd, F_SETFL, 0);
 /* get the current options */ tcgetattr(fd, &amp;options); /* set raw 
input, 1 second timeout */ options.c_cflag     |= (CLOCAL | CREAD); 
options.c_lflag     &amp;= ~(ICANON | ECHO | ECHOE | ISIG); 
options.c_oflag     &amp;= ~OPOST; options.c_cc[VMIN]  = 0; 
options.c_cc[VTIME] = 10; /* set the options */ tcsetattr(fd, TCSANOW, 
&amp;options);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	接下来就需要和调制解调器建立通讯连接。最好的办法就是给调制解调器发送“AT”命令。这也会让比较只能的调制解调器探测到你正在使用的波特率。如果正确地连接到调制解调器上，并且调制解调器开启电源，它会返回一个回应信号“OK”。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	int                  /* O - 0 = MODEM ok, -1 = MODEM bad */ 
init_modem(int fd)   /* I - Serial port file */ {  char buffer[255];  /*
 Input buffer */  char *bufptr;      /* Current char in buffer */  int  
nbytes;       /* Number of bytes read */  int  tries;        /* Number 
of tries so far */   for (tries = 0; tries &lt; 3; tries ++)  {   /* 
send an AT command followed by a CR */ 	if (write(fd, "AT\r", 3) &lt; 3)
 	  continue;   /* read characters into our string buffer until we get a
 CR or NL */	bufptr = buffer;	while ((nbytes = read(fd, bufptr, buffer +
 sizeof(buffer) - bufptr - 1)) &gt; 0)	{	  bufptr += nbytes;	  if 
(bufptr[-1] == '\n' | bufptr[-1] == '\r')        break;	}   /* nul 
terminate the string and see if we got an OK response */	*bufptr = '\0';
	if (strncmp(buffer, "OK", 2) == 0)	  return (0);  }  return (-1); }
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	标准调制解调器命令&nbsp;<a title="k026ecb5" class="anchor_super" id="k026ecb5" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k026ecb5">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	大多数调制解调器都支持“AT”命令集。之所以这样叫是因为这个命令集中的每个命令都是以“AT”字符开头。每个命令都是以第一列的AT开头字符后面跟上特殊命令参数和一个回车符CR(八进制015)。调制解调器处理完这条命令之后会根据命令回复一些文本消息。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATD 拨号 [#b39592a6]
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATD命令可以拨打一个指定号码。除过号码和分隔符(-)以外，你还可以指定以音频（"T"）或者脉冲（"P"）方式拨号，暂停一秒（","）和等待拨号音（"W"）：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	ATDT 555-1212 ATDT 18008008008W1234,1,1234 ATD T555-1212WP1234
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	调制解调器可能回复下面列出的某个消息：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	NO DIALTONE BUSY NO CARRIER CONNECT CONNECT baud
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATH 挂断
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATH命令可以让调制解调器挂断。因为，调制解调器如果在“命令”模式的话，你可能就不能打普通电话了。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	如果DTR信号线掉了的话，大部分调制解调器也会挂断。你可以将波特率设置成0并且持续至少1秒来做到这一点。再次让DTR掉落同样也可以把调制解调器重新拉回命令模式。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	调制解调器成功挂断以后，它会回复一个"NO CARRIER"回来。如果调制解调器仍然保持连接，它则会发送"CONNECT"或者"CONNECT baud"这样的消息。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		ATZ 重置调制解调器
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	通过ATZ命令可以重置调制解调器。重置之后它会回复字符串"OK"。
</p>
<ul class="list1" style="line-height:16px;padding-left:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;margin-top:0.5em;margin-bottom:0.5em;margin-left:16px;background-color:#FFFFFF;">
	<li>
		与调制解调器通讯的常见问题
	</li>
</ul>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	首先，也是最重要的一点，<strong>千万不要使用回声输入(input echoing)</strong>。回声输入会导致调制解调器和计算机之间产生反馈循环。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	其次，当发送调制解调器命令时，命令必须以回车(CR)而不是换行(NL)结束。C语言中回车的字符常量是"\r"。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	最后，处理调制解调器通讯的时候，要一定保证你使用了调制解调器支持的波特率。虽然大多数调制解调器都支持自动探测波特率，但你也会注意到某些（通常是19.2kbps或者比较老的调制解调器）有局限性。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	高级串口编程&nbsp;<a title="tb86878b" class="anchor_super" id="tb86878b" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#tb86878b">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	所谓高级串口编程其实说的就是使用更直接的底层的ioctl(2)和select(2)系统调用来操作串口。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	串口的ioctl&nbsp;<a title="qf91da78" class="anchor_super" id="qf91da78" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#qf91da78">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	前文中曾经提到使用tcgetattr和tcsetattr函数来配置串口。UNIX环境下，这些函数都是使用ioctl(2)系统调用来实现的。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	系统调用ioctl可以带三个参数：
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	int ioctl(int fd, int request, ...);
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	显然，fd参数对于串口编程来说就是串口设备文件的文件描述符咯。而request参数是在<termios.h>头文件中定义的常量，而且一般不会超出下表所列的范围。
</termios.h></p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>串口的IOCTL请求</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					REQUEST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					POSIX函数
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCGETS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Gets the current serial port settings.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcgetattr
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings immediately.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSANOW, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETSF
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings after flushing the input and output buffers.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSAFLUSH, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSETSW
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the serial port settings after allowing the input and output buffers to drain/empty.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsetattr(fd, TCSADRAIN, &amp;options)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCSBRK
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sends a break for the given time.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcsendbreak, tcdrain
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCXONC
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Controls software flow control.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcflow
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TCFLSH
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Flushes the input and/or output queue.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					tcflush
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCMGET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Returns the state of the "MODEM" bits.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCMSET
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Sets the state of the "MODEM" bits.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					FIONREAD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Returns the number of bytes in the input buffer.
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					None
				</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	取得控制信号&nbsp;<a title="h1f77c9e" class="anchor_super" id="h1f77c9e" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#h1f77c9e">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	TIOCMGET ioctl可以取得当前调制解调器的状态位。这个状态位囊括了除去<em>RXD</em>和<em>TXD</em>信号线的所有RS-232信号，这些都在下表中列出。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<em>控制信号常量</em>
</p>
<div class="ie5" style="text-align:center;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<table class="style_table" style="margin:auto;padding:0px;border:0px currentColor;border-image:none;text-align:left;background-color:#CCD5DD;" border="0" cellspacing="1">
		<tbody>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					常量
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					描述
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_LE
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR (data set ready/line enable)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_DTR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DTR (data terminal ready)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RTS (request to send)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_ST
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary TXD (transmit)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_SR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Secondary RXD (receive)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CTS
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					CTS (clear to send)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CAR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DCD (data carrier detect)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_CD
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Synonym for TIOCM_CAR
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RNG
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					RNG (ring)
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_RI
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					Synonym for TIOCM_RNG
				</td>
			</tr>
			<tr>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					TIOCM_DSR
				</td>
				<td class="style_td" style="margin:1px;padding:5px;color:inherit;font-size:12px;background-color:#EEF5FF;">
					DSR (data set ready)
				</td>
			</tr>
		</tbody>
	</table>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	例如下面这个程序片段，你可以通过给ioctl带一个用来保存状态位的整形变量的指针来取得状态位。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	#include <unistd.h> #include <termios.h> int fd; int status; ioctl(fd, TIOCMGET, &amp;status);
</termios.h></unistd.h></p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	设置控制信号&nbsp;<a title="s2e1f1e6" class="anchor_super" id="s2e1f1e6" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#s2e1f1e6">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	TIOCMSET ioctl可以设置上面定义的调制解调器状态位。下面的例子展示如何使用它来将DTR信号线设成掉线状态。
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	#include <unistd.h> #include <termios.h> int fd; int status; ioctl(fd, TIOCMGET, &amp;status); status &amp;= ~TIOCM_DTR; ioctl(fd, TIOCMSET, &amp;status);
</termios.h></unistd.h></p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	可能被设置的状态位取决于操作系统，驱动和正在使用的模式。关于更详细的信息应该去看以下你所使用的操作系统的文档。
</p>
<div class="jumpmenu" style="text-align:right;line-height:normal;font-family:verdana, arial, helvetica, sans-serif;font-size:12px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#navigator" target="_blank">↑</a>
</div>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	英文原文&nbsp;<a title="t79f0e01" class="anchor_super" id="t79f0e01" style="color:#A63D21;font-size:xx-small;text-decoration:none;vertical-align:super;background-color:inherit;" href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#t79f0e01">?</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<a style="color:#A63D21;text-decoration:none;background-color:inherit;" href="http://www.easysw.com/%7Emike/serial/serial.html" target="_blank" rel="nofollow">http://www.easysw.com/~mike/serial/serial.html</a>
</p>
<p style="line-height:16px;font-family:verdana, arial, helvetica, sans-serif;font-size:13px;background-color:#FFFFFF;">
	<a href="http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396" target="_blank"><span style="color:#19599b;">http://www.adamjiang.com/pukiwiki/index.php?Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3#k35d6396</span></a>
</p>                                   </termios.h></unistd.h></termios.h></unistd.h></div>
            <!-- <div class="Blog_con3_1">管理员在2009年8月13日编辑了该文章文章。</div> -->
            <div class="Blog_con2_1 Blog_con3_2">
              <div>
			  <!--<img src="/image/default/tu_8.png">-->
			  <!-- JiaThis Button BEGIN -->
				<div data-bd-bind="1463574936182" class="bdsharebuttonbox bdshare-button-style0-16"><a class="bds_more" href="#" data-cmd="more"></a><a class="bds_qzone" title="分享到QQ空间" href="#" data-cmd="qzone"></a><a class="bds_tsina" title="分享到新浪微博" href="#" data-cmd="tsina"></a><a class="bds_tqq" title="分享到腾讯微博" href="#" data-cmd="tqq"></a><a class="bds_renren" title="分享到人人网" href="#" data-cmd="renren"></a><a class="bds_weixin" title="分享到微信" href="#" data-cmd="weixin"></a></div>
<script>window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];</script>
				<!-- JiaThis Button END -->
			  </div>
              阅读(3464) | 评论(0) | 转发(2) |
			                <div class="HT_line3"></div>
            </div>
            <div class="Blog_con3_3">
              <div><span id="digg_num">0</span><a href="javascript:void(0)" id="digg" bid="3998634" url="/blog/digg.html"></a></div>
              <p>上一篇：<a href="http://blog.chinaunix.net/uid-27041925-id-3913123.html">嵌入式系统设计师考试完美笔记</a></p>
              <p>下一篇：<a href="http://blog.chinaunix.net/uid-27041925-id-3999558.html">Linux串口（serial、uart）驱动程序设计 </a></p>
            </div>
          </div>
          <div class="Blog_con3_4">
            <div class="Blog_tit2 Blog_tit6">相关热门文章</div>
			            <ul class="Blog_ul7">
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-10900999-id-2920737.html" title="linux 常见服务端口" target="blank">linux 常见服务端口</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-20457694-id-1944680.html" title="xmanager 2.0 for linux配置" target="blank">xmanager 2.0 for linux配置</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-21025382-id-168762.html" title="【ROOTFS搭建】busybox的httpd使用CGI脚本(BusyBox httpd CGI scripts)" target="blank">【ROOTFS搭建】busybox的httpd...</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-26824563-id-4591418.html" title="openwrt中luci学习笔记" target="blank">openwrt中luci学习笔记</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-20378509-id-1956694.html" title="什么是shell" target="blank">什么是shell</a></li>
			            </ul>
            <ul class="Blog_ul7">
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785970" title="linux dhcp  peizhi roc" target="blank">linux dhcp  peizhi roc</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785964" title="关于Unix文件的软链接" target="blank">关于Unix文件的软链接</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785935" title="求教这个命令什么意思，我是新手，刚刚学习solaris" target="blank">求教这个命令什么意思，我是新...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785919" title="sed -e &quot;/grep/d&quot; 是什么意思？谢谢" target="blank">sed -e "/grep/d" 是什么意思...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785702" title="谁能够帮我解决LINUX  2.6  10版本驱动" target="blank">谁能够帮我解决LINUX  2.6  10...</a></li>
			            </ul>
            <div class="clear"></div>
          </div>
		  <!--
          <div class="Blog_con3_4 Blog_con3_5">
            <div class="Blog_tit2 Blog_tit7">热门推荐</div>
            <ul>
			              <li><a href="" title="" target='blank' ></a></li>
			            </ul>
          </div>
		  -->
        </div>
      </div>
      <div class="Blog_right1_7" id="replyList">
		<div class="Blog_tit3">给主人留下些什么吧！~~</div>
				<!--暂无内容-->
				<!-- 评论分页-->
		<div class="Blog_right1_6 Blog_right1_12">
        		</div>
		<!-- 评论分页-->
        <div class="Blog_right1_10">
          <div class="Blog_tit3">评论热议</div>
		  		 <!--未登录 -->
        <div class="Blog_right1_8">
          <div class="nologin_con1"> 请登录后评论。
            <p><a href="http://blog.chinaunix.net/site/login.html" onclick="linkto()">登录</a> <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Ft.cublog.com%2F">注册</a></p>
          </div>
        </div>
        <br>
        <div>
            <div style="float:left;margin-left:70px;margin-right:10px;">
             <script type="text/javascript">
            var cpro_id = "u1625692";
            </script>
            <script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/c.js" type="text/javascript"></script>
            </div>
            <div style="margin-left:10px;">
            <script type="text/javascript">
            var cpro_id = "u1625694";
            </script>
            <script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/c.js" type="text/javascript"></script>
            </div>
        </div>
		
        </div>
      </div>
    </div>
  </div>
  <input id="report_url" value="/blog/ViewReport.html" type="hidden">

<script type="text/javascript">
  	//测试字符串的长度 一个汉字算2个字节
	function mb_strlen(str)
	{
		var len=str.length;
		var totalCount=0;
		for(var i=0;i<len;i++)
		{
			var c = str.charCodeAt(i);
			if ((c >= 0x0001 && c <= 0x007e) || (0xff60<=c && c<=0xff9f)) {
				totalCount++;
			}else{
				totalCount+=2;
			}
		}
		return totalCount;
	}
	/*
	var Util = {};
	Util.calWbText = function (text, max){
		if(max === undefined)
			max = 500;
		var cLen=0;
		var matcher = text.match(/[^\x00-\xff]/g),
			wlen  = (matcher && matcher.length) || 0;
		//匹配url链接正则 http://***
		var pattern = /http:\/\/([\w-]+\.)+[\w-]+(\/*[\w-\.\/\?%&=][^\s^\u4e00-\u9fa5]*)?/gi;
		//匹配的数据存入数组
		var arrPt = new Array();
		var i = 0;
		while((result = pattern.exec(text)) != null){
			arrPt[i] = result[0];
			i++;
		}
		//替换掉原文本中的链接
		for(var j = 0;j<arrPt.length;j++){
			text = text.replace(arrPt[j],"");
		}
		//减掉链接所占的长度
		return Math.floor((max*2 - text.length - wlen)/2 - 12*i);
	};
	*/
	var allowComment = '0';
	
	//举报弹出层
	function showJuBao(url, cid){
		
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 ,
                                        'blogurl' : window.location.href
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
	}

	$(function(){

		//创建管理员删除的弹出层
		$('#admin_article_del').click(function(){
			$.cover(false);
			asyncbox.open({
				id : 'class_thickbox',
				html : '<div class="HT_layer3_1"><ul><li class="HT_li1">操作原因：<select class="HT_sel7" id="del_type" name="del_type"><option value="广告文章">广告文章</option><option value="违规内容">违规内容</option><option value="标题不明">标题不明</option><option value="文不对题">文不对题</option></select></li><li class="HT_li1" ><input class="HT_btn4" id="admin_delete"  type="button" /></li></ul></div>',
				title : '选择类型',
				width : 300,
				height : 150,
				scroll : 'no',
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		$('#admin_delete').live('click' , function(){
			///blog/logicdel/id/3480184/url/%252Fblog%252Findex.html.html
			var type = $('#del_type').val();
			var url = '/blog/logicdel/id/3998634/url/%252Fuid%252F27041925.html.html';
			window.location.href= url + '?type=' + type;
		});


		//顶  js中暂未添加&过滤 
		$('#digg').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid = $('#digg').attr('bid');
			var url = $('#digg').attr('url');

			var digg_str = $.cookie('digg_id');
			if(digg_str != null)
			{
				var arr= new Array(); //定义一数组

				arr = digg_str.split(","); //字符分割     
				for( i=0 ; i < arr.length ; i++ )   
				{   
					if(bid == arr[i])
					{
						showErrorMsg('已经赞过该文章', '消息提示'); 
						return false;
					}
				} 
			}
			$.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
					if(msg.error == 0)
					{
						var num = parseInt($('#digg_num').html(),10);
						num += 1;
						$('#digg_num').html(num);
						$('#digg').die();

						if(digg_str == null)
						{
							$.cookie('digg_id', bid, {expires: 30 , path: '/'});
						}
						else
						{
							$.cookie('digg_id', digg_str + ',' + bid, {expires: 30 , path: '/'});
						}
						showSucceedMsg('谢谢' , '消息提示');
					}
					else if(msg.error == 1)
					{
						//showErrorMsg(msg.error_content , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
					}
					else if(msg.error == 2)
					{
						showErrorMsg(msg.error_content , '消息提示'); 
					}
				}
			});
		});
		//举报弹出层
		/*$('.box_report').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var url = $('#report_url').val();
			var cid = $(this).attr('cid');
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});*/


		//评论相关代码
		
		//点击回复显示评论框
		$('.Blog_a10').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var tid = $(this).attr('toid');//留言作者id
			var bid = $(this).attr('bid');//blogid
			var cid = $(this).attr('cid');//留言id
			var tname = $(this).attr('tname');
                         			var tpl  = '<div class="Blog_right1_9">';
				tpl +=	 '<div class="div2">';
				tpl +=     '<textarea name="" cols="" rows="" class="Blog_ar1_1" id="rmsg">文明上网，理性发言...</textarea>';
				tpl +=	 '</div>';
				tpl +=   '<div class="div3">';
				tpl +=		'<div class="div3_2"><a href="javascript:void(0);" class="Blog_a11" id="quota_sbumit" url="/Comment/PostComment.html" tid="'+tid+'" bid="'+bid+'" cid="'+cid+'" tname="'+tname+'" ></a><a href="javascript:void(0)" id="qx_comment" class="Blog_a12"></a></div>';
				tpl +=		'<div class="div3_1"><a href="javascript:void(0);" id="mface"><span></span>表情</a></div>';
				tpl +=		'<div class="clear"></div>';
				tpl +=	 '</div>';
				tpl +=  '</div>';
                                 			$('.z_move_comment').html('');
			$(this).parents('.Blog_right1_8').find('.z_move_comment').html(tpl).show();
		});
		//引用的评论提交
		$('#quota_sbumit').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid   = $(this).attr('bid');
			var tid   = $(this).attr('tid');//被引用人的id
			var qid   = $(this).attr('cid');//引用的id
			var url = $(this).attr('url');
			var text = $('#rmsg').val();
			var tname = $(this).attr('tname');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : tid , 'qid' : qid , 'text': text , 'tname' : tname },
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1){
						var tpl =  '<div class="Blog_right1_8">';
							tpl+=     '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl+=     '<div class="Blog_right_font1">';
							tpl+=         '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl+=         '<p class="Blog_p7"><a href="' + data.info.quota.url + '">' + data.info.quota.username + '</a>：'+ data.info.quota.content + '</p>';
							tpl+=         '<p class="Blog_p8">' + data.info.content + '</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '  tname = ' + data.info.username + ' >回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '" >删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '" >举报</a></span></div>';
							tpl+=         '<div class="z_move_comment" style="display:none"></div>';
							tpl+=	      '<div class="Blog_line1"></div></div>';
							$('#replyList .Blog_right1_8:first').before(tpl);
							$('.z_move_comment').html('').hide();
				    }
					else if(data.code == -1){
						//showErrorMsg(data.info , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
			        }
                },
			    error: function(){//请求出错处理
                        
                }
			});
		});
		//底部发表评论
		$('#submitmsg').click(function(){
			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var bid   = $(this).attr('bid');
			var toid  = $(this).attr('toid');
			var text = $('#reply').val();
			var url = $(this).attr('url');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : toid ,'text': text},
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1)
					{
						var tpl   = '<div class="Blog_right1_8">';
							tpl  +=   '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl  +=	  '<div class="Blog_right_font1">';
							tpl  +=       '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl  +=       '<p class="Blog_p6">' + data.info.content + '</p>';
							tpl  +=		  '<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '>回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '">删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '">举报</a></div>';
							tpl  +=		  '<div class="z_move_comment" style="display:none"></div>';
							tpl  +=    '</div><div class="Blog_line1"></div></div>';
							$('.Blog_tit3:first').after(tpl);
							$('#reply').val('文明上网，理性发言...');
					}
					else if(data.code == -1)
					{
						showErrorMsg(data.info , '消息提示'); 
			        }
                },
			    error: function(){//请求出错处理
                        
                }
		    });
			
		});
		//底部评论重置
		$('#reset_comment').click(function(){
			$('#reply').val('文明上网，理性发言...');
		});
		//取消回复
		$('#qx_comment').live('click' , function(){
			$('.z_move_comment').html('').hide();
		});


		$('#rmsg, #reply').live({
		    focus:function(){
			    if($(this).val() == '文明上网，理性发言...'){
			        $(this).val('');
			    }
			},
			blur:function(){
		        if($(this).val() == ''){
			        $(this).val('文明上网，理性发言...');
			    }
			}
		});
		//删除留言确认
		$('.comment_del_mark').live('click' , function(){
			var url = $(this).attr('url');
			asyncbox.confirm('删除留言','确认', function(action){
				if(action == 'ok')
				{
					location.href = url;
				}
			});
		});
		//删除时间确认
		$('.del_article_id').click(function(){
			var delurl = $(this).attr('delurl');
			asyncbox.confirm('删除文章','确认', function(action){
				if(action == 'ok')
				{
					location.href = delurl;
				}
			});
		});
		/*
		//字数限制
		$('#rmsg, #reply').live('keyup', function(){
			var id = $(this).attr('id');
			var left = Util.calWbText($(this).val(), 500);
			var eid = '#errmsg';
			
			if(id == 'reply') eid =  '#rerrmsg';
			if (left >= 0)
		        $(eid).html('您还可以输入<span>' + left + '</span>字');
		    else
		        $(eid).html('<font color="red">您已超出<span>' + Math.abs(left) + '</span>字 </font>');
		});
		*/
		//加载表情
	    $('#face').qqFace({id : 'facebox1', assign : 'reply', path : '/image/qqface/'});
	    $('#mface').qqFace({id : 'facebox', assign : 'rmsg', path:'/image/qqface/'});
	    
		/*
		$('#class_one_id').change(function(){
			alert(123213);
			var id = parseInt($(this).val() , 10);
			if(id == 0) return false;
			$('.hidden_son_class span').each(function( index , dom ){
				if( dom.attr('cid')  == id )
				{
				}
			});
		});
		*/
		//转载文章
		var turn_url = "/blog/viewClassPart.html";
		$('#repost_bar').click(function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var id = $(this).attr('bid');
			asyncbox.open({
				id  : 'turn_class_thickbox',
				url : turn_url,
				title : '转载文章',
				width : 330,
				height : 131,
				scroll : 'no',
				data : {
					'id'	 : id
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		/*
	    //转发文章
	    $('#repost_bar').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
	    	var bid  = $(this).attr('bid');
	    	var url  = $(this).attr('url');
	    	asyncbox.confirm('转载文章','确认', function(action){
	    	  if(action == 'ok'){
	    	    $.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
				  if(msg.error == 0){
				    showSucceedMsg('转发成功！', '消息提示');
				  }else if(msg.error == 1){
				    //location.href = '/index.php?r=site/login';
					showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				  }else{
				    showErrorMsg(msg.error_content, '消息提示');
			      }
				}
			  });
	    	  }
	    	});

		});
		*/

	});
</script>
<!--该部分应该放在输出代码块的后面才起作用 -->
<script type="text/javascript">

SyntaxHighlighter.autoloader(
	'applescript			/highlight/scripts/shBrushAppleScript.js',
	'actionscript3 as3		/highlight/scripts/shBrushAS3.js',
	'bash shell				/highlight/scripts/shBrushBash.js',
	'coldfusion cf			/highlight/scripts/shBrushColdFusion.js',
	'cpp c					/highlight/scripts/shBrushCpp.js',
	'c# c-sharp csharp		/highlight/scripts/shBrushCSharp.js',
	'css					/highlight/scripts/shBrushCss.js',
	'delphi pascal			/highlight/scripts/shBrushDelphi.js',
	'diff patch pas			/highlight/scripts/shBrushDiff.js',
	'erl erlang				/highlight/scripts/shBrushErlang.js',
	'groovy					/highlight/scripts/shBrushGroovy.js',
	'java					/highlight/scripts/shBrushJava.js',
	'jfx javafx				/highlight/scripts/shBrushJavaFX.js',
	'js jscript javascript	/highlight/scripts/shBrushJScript.js',
	'perl pl				/highlight/scripts/shBrushPerl.js',
	'php					/highlight/scripts/shBrushPhp.js',
	'text plain				/highlight/scripts/shBrushPlain.js',
	'py python				/highlight/scripts/shBrushPython.js',
	'ruby rails ror rb		/highlight/scripts/shBrushRuby.js',
	'scala					/highlight/scripts/shBrushScala.js',
	'sql					/highlight/scripts/shBrushSql.js',
	'vb vbnet				/highlight/scripts/shBrushVb.js',
	'xml xhtml xslt html	/highlight/scripts/shBrushXml.js'
);
SyntaxHighlighter.all();


function code_hide(id){
	var code = document.getElementById(id).style.display;
	if(code == 'none'){
		document.getElementById(id).style.display = 'block';
	}else{
		document.getElementById(id).style.display = 'none';
	}
}
</script>
<!--回顶部js2011.12.30-->
<script language="javascript">
 lastScrollY=0;
 function heartBeat(){
 var diffY;
 if (document.documentElement && document.documentElement.scrollTop)
     diffY = document.documentElement.scrollTop;
 else if (document.body)
     diffY = document.body.scrollTop
 else
     {/*Netscape stuff*/}
 percent=.1*(diffY-lastScrollY);
 if(percent>0)percent=Math.ceil(percent);
 else percent=Math.floor(percent);
 document.getElementById("full").style.top=parseInt(document.getElementById("full").style.top)+percent+"px";
 lastScrollY=lastScrollY+percent;
 if(lastScrollY<200)
 {
 document.getElementById("full").style.display="none";
 }
 else
 {
 document.getElementById("full").style.display="block";
 }
 }
 var gkuan=document.body.clientWidth;
 var ks=(gkuan-960)/2-30;
 suspendcode="<div id=\"full\" style='right:4px;POSITION:absolute;TOP:500px;z-index:100;width:20px; height:50px;cursor:pointer;'><a href=\"javascript:void(0)\" onclick=\"window.scrollTo(0,0);\"><img src=\"\/image\/top.png\" /></a></div>"
 document.write(suspendcode);
 window.setInterval("heartBeat()",1);
 </script><div id="full" style="right: 4px; position: absolute; top: 25420px; z-index: 100; width: 20px; height: 50px; cursor: pointer; display: block;"><a href="javascript:void(0)" onclick="window.scrollTo(0,0);"><img src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/top.png"></a></div>  <!-- footer -->
  <div class="Blog_footer" style="clear:both">
    <div><a href="http://www.chinaunix.net/about/index.shtml" target="_blank" rel="nofollow">关于我们</a> | <a href="http://www.it168.com/bottomfile/it168.shtml" target="_blank" rel="nofollow">关于IT168</a> | <a href="http://www.chinaunix.net/about/connect.html" target="_blank" rel="nofollow">联系方式</a> | <a href="http://www.chinaunix.net/about/service.html" target="_blank" rel="nofollow">广告合作</a> | <a href="http://www.it168.com//bottomfile/flgw/fl.htm" target="_blank" rel="nofollow">法律声明</a> | <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Fblog.chinaunix.net%2F" target="_blank" rel="nofollow">免费注册</a>
      <p>Copyright  2001-2010 ChinaUnix.net All Rights Reserved 北京皓辰网域网络信息技术有限公司. 版权所有 </p>
      <div>感谢所有关心和支持过ChinaUnix的朋友们
        <p>京ICP证041476号 京ICP证060528号</p>
      </div>
    </div>
  </div>
</div>
<script language="javascript">

//全局错误提示弹出框
function showErrorMsg(content, title, url){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span1"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="login_btn1" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	   asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//全局正确提示
function showSucceedMsg(content, title , url ){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span2"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="HT_btn2" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//关闭指定id的窗口
function close_windows(id){
	$.cover(false);
	$.close(id);
}


//公告
var tID;
var tn;                        // 高度
var nStopTime = 5000;        // 不同行间滚动时间隔的时间，值越小，移动越快
var nSpeed = 50;            // 滚动时，向上移动一像素间隔的时间，值越小，移动越快
var isMove = true;
var nHeight = 25;
var nS = 0;
var nNewsCount = 3;

/**
 * n 用于表示是否为第一次运行
 **/
function moveT(n)
{
    clearTimeout(tID)
    var noticev2 = document.getElementById("noticev2")
    nS = nSpeed;
    
    // 只在第一次调用时运行，初始化环境（有没有参数）
    if (n)
    {
        // 设置行高
        noticev2.style.lineHeight = nHeight + "px";
        // 初始化显示位置
        tn = 0;
        // 刚进入时在第一行停止时间
        nS = nStopTime;
    }
    
    // 判断鼠标是否指向层
    if (isMove)
    {
        // 向上移动一像素
        tn--;
        // 如果移动到最下面一行了，则移到顶行
        if (Math.abs(tn) == nNewsCount * nHeight)
        {
            tn = 0;
        }
        // 设置位置
        noticev2.style.marginTop = tn + "px";
        // 完整显示一行时，停止一段时间
        if (tn % nHeight == 0)
        {
            nS = nStopTime;
        }
    }

    tID = setTimeout("moveT()", nS);
}
moveT(1);    // 此处可以传入任何参数
</script>
<script language="javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/pv.js"></script>
<script>
function sendPV(){
    var pvTrack = new PvTrack();
    pvTrack.type = 35; // 频道类别ID
    pvTrack.channel = 189; // 频道ID
    pvTrack.pageType = 0;
    pvTrack.track();
}
window.setTimeout("sendPV()", 1000);
</script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20237423-2']);
  _gaq.push(['_setDomainName', '.chinaunix.net']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0ee5e8cdc4d43389b3d1bfd76e83216b' type='text/javascript'%3E%3C/script%3E"));

function linkto(){
    setCookie("returnUrl", location.href, 1463661334, "/");
}
function linktoOut(){
    setCookie("returnOutUrl", location.href, 1463661334, "/");
}
//JS写COOKIE
function setCookie(name, value, expires, path, domain){
	if(!arguments[2]) expires = 3600 * 24;
	if(!arguments[3]) path = "";
	if(!arguments[4]) domain = "";
	var str=name+"="+escape(value);
	if(expires!=""){
		var date=new Date();
		date.setTime(date.getTime()+expires*1000);
		str+=";expires="+date.toGMTString();
	}
	if(path!=""){
		str+=";path="+path;//指定可访问cookie的目录
	}
	if(domain!=""){
		str+=";domain="+domain;//指定可访问cookie的域
	}
	document.cookie = str;
}

</script><script src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/h.htm" type="text/javascript"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery.js"></script>


<div id="asyncbox_cover" unselectable="on" style="opacity:0.1;filter:alpha(opacity=10);background:#000"></div><div id="asyncbox_clone"></div><div id="asyncbox_focus"></div><div id="asyncbox_load"><div><span></span></div></div><img style="display: none;" src="Linux%E4%B8%B2%E5%8F%A3%E7%BC%96%E7%A8%8B%E8%AF%A6%E8%A7%A3%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/baidu_jgylogo3.gif"></body></html>