<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/ga.js" async="" type="text/javascript"></script><script>
var ua = navigator.userAgent.toLowerCase();
if(ua.match(/MicroMessenger/i)=="micromessenger") {
    location.href='http://blog.chinaunix.net/article.php?url='+ window.location.href;
}
</script>
        <style>
    .Blog_nav1_2 a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/style.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/qqFace.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/asyncbox.css">
<link rel="stylesheet" type="text/css" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/pager.css">
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery_002.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery_003.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/AsyncBox.js"></script>
<title>Linux串口（serial、uart）驱动程序设计 -formycuteboy-ChinaUnix博客</title>
<meta name="description" content="
	原文地址：Linux串口（serial、uart）驱动程序设计 作者：lingdxuyan


	


	
		一、核心数据结构
串口驱动有3个核心数据结构，它们都定义在&lt;#include linux/seria">
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/h600.js"></script>

<script type="text/javascript">
if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))){
	try{
		if(!/iPad/i.test(navigator.userAgent)){
			var oldurl=window.location.href;
			var wapUrl= oldurl.replace('blog.chinaunix.net', "m.blog.chinaunix.net") ;
			window.location.href = wapUrl;
		}
	}catch(e){}
}
</script>


<script language="javascript">
//用户是否在线
var isOnLine = '';
$(document).ready(function(){
	var blog = {'name': '', 'name_url': '', 'brief': ''};
	//消息通知显示和隐藏控制
	$('#show_message_slide_button').hover(
		function(){
			$('#message_slide_div').slideDown(100);											   
		},
		function(){
			
		}
	);

	$('#message_slide_div').hover(
		function(){
			
		},
		function(){
			$('#message_slide_div').slideUp(100);
		}
	);
	
	//编辑博客名
	$('#editbna').click(function(){
		blog.name = $('#bnaspan a').text();
		var val = '<input id="bnainput" type="text" style="float:left" value="" rel="' +$(this).attr('rel') + '" /><input id="bnasub" type="button" style="float:left" class="btn1"><input id="bnacanl" type="button" style="float:left" class="btn2"><div class="clear"></div>';
		$('#bnaspan').html(val);
		$('#bnainput').val(blog.name);
		$(this).parent().hide();
	});
	
	$('#bnasub').live('click', function(){
	    var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		var name = $('#bnainput').val();
		if(name != blog.name){
	        $.ajax({
			    type: "POST",
			    url: rel.url,	
			    data: {
				    'name' : name
			    },
			    success:function(data){
				    if(data == 0){
						$('#bnaspan').html(blog.name);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }else{
						$('#bnaspan').html(data);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }
					$('#editbna').parent().show();
				}
			});
		}else{
		    $('#bnaspan').text(blog.name).html();
			$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
			$('#editbna').parent().show();
		}
	});
	
	$('#bnacanl').live('click', function(){
		var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		$('#bnaspan').html('<a href="' + rel.href + '">' + blog.name + '</a>');
		$('#editbna').parent().show();
	});
	
	//编辑签名
	$('#editbrief').click(function(){
	    blog.brief = $('#briefem').text();
		var val = '<input id="brfinput" type="text" style="float:left" value="" rel="' + $(this).attr('rel') + '" /><input id="brfsub" style="float:left"  type="button" class="btn1"><input style="float:left"  id="brfcanl" type="button" class="btn2"><div class="clear"></div>';
		$('#briefem').html(val);
		$('#brfinput').val(blog.brief);
		$(this).parent().hide();
	});
	
	$('#brfsub').live('click', function(){
	    var url = $('#brfinput').attr('rel');
		var brief = $('#brfinput').val();
		if(brief != blog.brief){
	        $.ajax({
			    type: "POST",
			    url: url,	
			    data: {
				    'brief' : brief
			    },
			    success:function(data){
				    if(data == 0){
				        $('#briefem').html(blog.brief);
				    }else{
						$('#briefem').html(data);
				    }
					$('#editbrief').parent().show();
				}
			});
		}else{
		    $('#briefem').text(blog.brief).html();
			$('#editbrief').parent().show();
		}
	});
	
	$('#brfcanl').live('click', function(){
		$('#briefem').html(blog.brief);
		$('#editbrief').parent().show();
	});

});
</script>
<script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/share.js"></script><link href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/share_style0_16.css" rel="stylesheet"></head>
<body>
<div style="width: 100%; height: 1px; position: absolute; bottom: 0px; left: 0px; right: 0px;"></div><div style="width: 100%; height: 1px; position: absolute; bottom: 0px; left: 0px; right: 0px;"></div><div id="main_Wed May 18 2016"><div style="visibility: hidden; opacity: 0;"><div><div><div id="yxjfd_Wed May 18 2016" style="position: fixed; right: 0px; bottom: 0px; width: 300px; height: 250px;"><script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/a" charset="utf-8"></script><div style="display: block; box-sizing: border-box; border: 0px none; padding: 0px; margin: 0px; width: 300px; height: 250px; position: fixed; background-color: transparent; bottom: 0px; right: 0px; z-index: 2147483647;" id="fc9d70f467daa4fbf075_478451fa1d4d32c9a978_1463574993e93d6c5c55f4_0"><iframe allowtransparency="true" marginheight="0" marginwidth="0" border="0" scrolling="no" seamless="" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/2WFMNx.htm" style="width:300px;height:250px;background-color:transparent;" frameborder="no" height="250" width="300"></iframe><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/Mapping.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/cm.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/verify_002.txt"><a style="position: absolute; width: 20px; height: 20px; bottom: 0px; right: 18px; color: transparent; display: block; border: 0px none; padding: 0px; margin: 0px; cursor: pointer; z-index: 100; background: transparent url(&quot;http://static.chaoliangyun.com/ad_rt.png&quot;) no-repeat scroll 0% 0%;"></a><div style="width: 20px; height: 20px; display: block; position: absolute; cursor: pointer; z-index: 100; background: transparent url(&quot;http://static.chaoliangyun.com/cl_rt.png&quot;) no-repeat scroll 0% 0%; bottom: 0px; right: 0px;"></div></div><script id="fc9d70f467daa4fbf075_478451fa1d4d32c9a978_1463574993e93d6c5c55f4" type="text/javascript">_guanggao_pub= "fc9d70f467daa4fbf075";_guanggao_slot= "478451fa1d4d32c9a978";</script><script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/fc9d70f467daa4fbf075" type="text/javascript"></script></div></div></div></div><div style="visibility: hidden; opacity: 0;"><div><div><div id="zxjgd_Wed May 18 2016" style="position: fixed; bottom: 0px;"><script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/a_002" charset="utf-8"></script><div style="display: block; box-sizing: border-box; border: 0px none; padding: 0px; margin: 0px; width: 300px; height: 250px; position: relative;" id="fc9d70f467daa4fbf075_9a62eadc0f88ad8d5aa2_14635749940af48ae55181_0"><iframe allowtransparency="true" marginheight="0" marginwidth="0" border="0" scrolling="no" seamless="" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/2WFMNx_002.htm" style="width:300px;height:250px;background-color:transparent;" frameborder="no" height="250" width="300"></iframe><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/Mapping.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/cm.gif"><img style="width: 1px; height: 1px; display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/verify.txt"><a style="position: absolute; width: 20px; height: 20px; bottom: 0px; right: 0px; color: transparent; display: block; border: 0px none; padding: 0px; margin: 0px; cursor: pointer; z-index: 100; background: transparent url(&quot;http://static.chaoliangyun.com/ad_rt.png&quot;) no-repeat scroll 0% 0%;"></a></div><script id="fc9d70f467daa4fbf075_9a62eadc0f88ad8d5aa2_14635749940af48ae55181" type="text/javascript">_guanggao_pub= "fc9d70f467daa4fbf075";_guanggao_slot= "9a62eadc0f88ad8d5aa2";</script><script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/fc9d70f467daa4fbf075" type="text/javascript"></script></div></div></div></div></div><div class="box">
  <!-- 一级导航 -->
  <div class="Blog_nav1">
    <div class="Blog_nav1_2"><a href="http://blog.chinaunix.net/"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/1.png"></a><a href="http://www.chinaunix.net/" class="Blog_a1">Chinaunix首页</a> | <a href="http://bbs.chinaunix.net/" target="_blank">论坛</a> | <a href="http://u.it168.com/vip/"><font color="red">认证专区</font></a> | <a href="http://blog.chinaunix.net/" target="_blank">博客</a><span class="Blog_span1"></span>
              <a href="http://blog.chinaunix.net/site/login.html" class="Blog_a1" onclick="linkto()">登录</a> | <a href="http://u.it168.com/Register?webid=5&amp;returnUrl=http%3A%2F%2Fblog.chinaunix.net%2Fuid-27041925-id-3999558.html" class="Blog_a1">注册</a>
          </div>
	<!--自动提示层-->
	<style>
	.bor13221{border:1px #bbb solid;width:206px;position:absolute;top:34px;left:0;background:#fff; z-index:9999;display:none}
	.bor13221 li{height:26px;line-height:26px;padding-left:6px;color:#555;font-size:14px;cursor:pointer;}
	.here{background:#f3f3f3;}
    </style>

	<!--自动提示层-->
    <div class="Blog_nav1_3" style="position:relative; z-index:9999;">
	 <div class="bor13221">
      <ul>
      </ul>
    </div>
	  <form action="/site/search.html" method="post">
		<input autocomplete="off" class="Blog_txt1" id="search_input_id" name="keywords" type="text">
		<select class="Bolg_sel1" name="type" id="search_type_blog">
		  <option selected="selected" value="blog">博文</option>
		  <option value="author">博主</option>
		</select>
		<input value="" name="submit" class="Blog_btn1" type="submit">
	 </form>
    </div>
    <div class="clear"></div>
    <div class="Blog_nav1_layer1" id="message_slide_div" style="display:none;">
	    <ul>
	    	<li><a href="http://blog.chinaunix.net/message/private.html">私人消息()</a></li>
	    	<li><a href="http://blog.chinaunix.net/message/system.html">系统消息()</a></li>
	    	<li><a href="http://blog.chinaunix.net/member/request.html">好友请求()</a></li>
	    	<li><a href="http://blog.chinaunix.net/member/notification.html">通知管理()</a></li>
	    </ul>
    </div>
  </div>
   <script type="text/javascript">
  	$(function(){
		//点击添加进文本框
		$(".bor13221 li").live( 'click' , function(e){
			if ( e && e.stopPropagation )
			{
				//因此它支持W3C的stopPropagation()方法
				e.stopPropagation();
			}
			else
			{
				//否则，我们需要使用IE的方式来取消事件冒泡
				window.event.cancelBubble = true; 
			}
			$('#search_input_id').val($(this).text());
			$(".bor13221 ul").html('');
			$(".bor13221").hide();
		});
		$(".bor13221 ul li").live({
			mouseenter:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).addClass('here');
			},
			mouseleave:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).removeClass('here');
			}
		});
		//自动提示
		$('#search_input_id').keyup(function(event){
			//取消博主的提示
			var search_type_blog = $('#search_type_blog').val();
			if(search_type_blog == 'author') return false;

			var key = $(this).val();
			//获取键值
			var keycode = event.which; //38 上 40 下
			var count = $('.bor13221 ul li').length;
			if(key != '' && keycode != 38 && keycode != 40)
			{
				$.getJSON("http://api.sou.it168.com/autoWenKuCloud?jsoncallback=?",{"ty":"json","offset":"0","limit":"10","q":key}, function(result)
					{
						var arr = result.data;

						var html ='';
						for (i=0;i<arr.length ;i++ )   
						{   
							html += '<li>'+arr[i]+'</li>';
						} 
						
						$('.bor13221 ul').html(html);
						(arr.length > 1) ?  $(".bor13221").show() : $(".bor13221").hide();
					}
				);
			}
			else if(keycode == 38)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = count - 1;
					}
					else
					{
						if(curr_li_num == 0)
						{
							next_li_num = count - 1;
						}
						else
						{
							next_li_num = curr_li_num - 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
			else if(keycode == 40)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = 0;
					}
					else
					{
						if(curr_li_num == count - 1)
						{
							next_li_num = 0;
						}
						else
						{
							next_li_num = curr_li_num + 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
		});
		$(document).click(function(e){
			$(".bor13221").hide();
		});

	});
  </script>
  <!-- 头 -->
  <!-- 推荐博客-->
  <div class="Blog_header1">
	    <div class="Blog_header1_1">
      <p class="Blog_p1"><em><a href="http://blog.chinaunix.net/uid/27041925.html">For&nbsp;My&nbsp;Cute&nbsp;Boy</a></em><a href="http://formycuteboy.blog.chinaunix.net/">formycuteboy.blog.chinaunix.net</a></p>      <p class="Blog_p2" style="color:#125A94">一切问题都是自己的问题</p>
    </div>
        <div class="Blog_header1_2" id="hide_div1">
    	<span class="Blog_span3"></span>
    	<div class="float_div1" style="white-space:nowrap;" onmouseover="javascript:isMove=false" onmouseout="javascript:isMove=true">
	    <ul style="line-height: 25px; margin-top: 0px;" id="noticev2">  
		    		    <li><a href="http://blog.chinaunix.net/uid-30204791-id-5705047.html" target="_blank">2016中国数据库技术大会门票申请 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-24789255-id-5568211.html" target="_blank">新注册用户开通“博客写作”功能，需要申请与实名认证 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-10718265-id-5141960.html" target="_blank"> 互动：数据分析与云计算应用案例 （征集|参与）</a></li>
		    	    </ul>
	    </div>
    </div>
            <div class="Blog_header1_3"><a href="http://blog.chinaunix.net/uid/27041925.html">首页</a>　| 　<a href="http://blog.chinaunix.net/uid/27041925/abstract/1.html">博文目录</a>　| 　<a href="http://blog.chinaunix.net/member/profile/uid/27041925.html">关于我</a></div>
  </div>
    
  <!-- 内容部分 -->
  	<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/XRegExp.js"></script> <!-- XRegExp is bundled with the final shCore.js during build -->
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shCore.js"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shAutoloader.js"></script>
<link type="text/css" rel="stylesheet" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shCore.css">
<link type="text/css" rel="Stylesheet" href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/shThemeDefault.css">
<link href="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/fck_editorarea.css" rel="stylesheet" type="text/css">
<style>
.Blog_p5 em{ display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
  <div class="Blog_contain"> 
    <!-- 左 -->
	<style>
    .Blog_left1_1 p a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>

<script language="javascript">
$(document).ready(function(){
	$('#ConcernBtn').bind('click',function(){
			var cuid = '27041925';
			var url =  '/member/concern.html';
			var type = $(this).attr('rel');
		
			if(type == 'addConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxadd' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){	
					   if(msg == -1){
						   showErrorMsg('参数错误！');
					   } else if (msg == 0){
						   showErrorMsg('关注失败，没有该用户！');
					   } else if (msg == 1){
						   showErrorMsg('关注失败，您已经关注了该用户！');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('已关注');
						   $('#ConcernBtn').attr('rel','delConcern');
						   showSucceedMsg('关注成功!');
					   } else if (msg == 3){
						   showErrorMsg('未知错误');
					   }
					}
				});	
			} else if ( type == 'delConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxdel' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){
					   if(msg == 0){
						   showErrorMsg('参数错误！','消息提示');
					   } else if (msg == 1){
						   showErrorMsg('操作失败，请尝试刷新页面重试！','消息提示');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('加关注');
						   $('#ConcernBtn').attr('rel','addConcern');
						   showSucceedMsg('成功取消关注！','消息提示');
					   } else if (msg == 3){
						   showErrorMsg('未知错误！','消息提示'); 
					   }
					}
				});	
			}
	});					   
});

//加好友
function addFriend(fuid, url){
	if(fuid == '' || fuid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	$.ajax({
		   type : 'get',
		   url : url,
		   data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('参数错误！','消息提示');
				} else if (msg == -2){
					showErrorMsg('添加好友失败,没有该用户的信息！','消息提示');
				} else if (msg == -3){
					showErrorMsg('添加好友失败,你不能添加自己为好友！','消息提示');
				} else if (msg == -4){
					showErrorMsg('添加好友未知错误,该错误已被记录！','消息提示');
				} else if (msg == -5){
					showErrorMsg('添加好友失败,你之前已经发送过好友请求,请耐心等待对方同意申请！','消息提示');
				} else if (msg == -6){
					showErrorMsg('添加好友失败,你们已经是好友了！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'addFriend',
						title : '添加好友',
						url : url,
						data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
						width : 490,
						height : 180,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
	
}

//发送短消息
function postMessage(msguid, url){
	if(msguid == '' || msguid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	
	$.ajax({
		   type : 'post',
		   url : url,
		   data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('发送失败，缺少收件人对象！','消息提示');
				} else if(msg == -2){
					showErrorMsg('发送失败，自己不能给自己发送短消息！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'postMessage',
						title : '发送短消息',
						url : url,
						data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
						width : 510,
						height : 255,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
}

</script>
<div class="Blog_left">
      <div class="Blog_left1 Blog_bg1">
        <div class="Blog_left1_1">
			<!-- 专家博客-->
			<a href="http://blog.chinaunix.net/uid/27041925.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/25_avatar_middle.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_middle.gif'"></a>
                        <p><a href="http://blog.chinaunix.net/uid/27041925.html">formycuteboy</a></p>
                     </div>
        <ul class="Blog_ul1 Blog_noline1">
          <li>博客访问： 440322 </li>
          <li>博文数量： 220 </li>
          <li>博客积分： 190 </li>
          <!--<li>专家积分： 180</li>-->
          <li>博客等级： 入伍新兵 </li>
		  <li>技术积分： 4352 </li>
          <li>用  户  组：  普通用户</li>
          <li>注册时间： 2012-06-06 08:24 </li>
                            </ul>  


        
                <div class="HT_line3 HT_line3_1"></div>
        <ul class="Blog_ul2">
          <li><input value="加关注" id="ConcernBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
          <li><input value="短消息" id="postMessageBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
          <li><input value="论坛" onclick="location.href='http://bbs.chinaunix.net'" type="button"></li>
          <li><input value="加好友" id="addFriendBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')" type="button"></li>
        </ul>
              </div>
            <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">个人简介</div>
        <p class="Blog_p3">慢行者</p>
      </div>
        
         
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章分类</div>
        <div class="Blog_left2_1">
          <p class="Blog_p4"><a href="http://blog.chinaunix.net/uid/27041925/list/1.html">全部博文</a>（220）</p>
          <ul id="blogCla">
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-185525-list-1.html" title="串口驱动">串口驱动</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182598-list-1.html" title="进程管理机制">进程管理机制</a>（11）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182596-list-1.html" title="Linux内存管理">Linux内存管理</a>（31）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182581-list-1.html" title="DMA机制">DMA机制</a>（14）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-182551-list-1.html" title="中断机制">中断机制</a>（28）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176908-list-1.html" title="设备驱动">设备驱动</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176823-list-1.html" title="jupiter">jupiter</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176363-list-1.html" title="笔试&amp;面试">笔试&amp;面试</a>（5）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-176310-list-1.html" title="I2C">I2C</a>（39）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-175294-list-1.html" title="SPI">SPI</a>（27）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-175048-list-1.html" title="ubuntu">ubuntu</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174655-list-1.html" title="fs">fs</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174653-list-1.html" title="linux内核">linux内核</a>（13）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-174214-list-1.html" title="ldd">ldd</a>（16）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-173847-list-1.html" title="i.mx287">i.mx287</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-172619-list-1.html" title="C语言日积月累">C语言日积月累</a>（6）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-172430-list-1.html" title="交叉编译器">交叉编译器</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170892-list-1.html" title="政策">政策</a>（1）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170472-list-1.html" title="工作心得">工作心得</a>（6）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid-170400-list-1.html" title="随笔">随笔</a>（3）
                                </li>
                            <li><a href="http://blog.chinaunix.net/uid/27041925/cid--1-list-1.html" title="未分配的博文">未分配的博文</a>（1）
                                </li>
                      </ul>
        </div>
      </div>
      	              <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章存档</div>
        <div class="Blog_left2_1" id="blogdtr">
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="http://blog.chinaunix.net/uid/27041925/year-2013-list-1.html">2013年</a>（219）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201312-list-1.html">2013年12月</a>（1）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201311-list-1.html">2013年11月</a>（4）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201309-list-1.html">2013年09月</a>（107）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201305-list-1.html">2013年05月</a>（40）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201304-list-1.html">2013年04月</a>（52）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201303-list-1.html">2013年03月</a>（9）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201302-list-1.html">2013年02月</a>（2）</li>
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201301-list-1.html">2013年01月</a>（4）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="http://blog.chinaunix.net/uid/27041925/year-2012-list-1.html">2012年</a>（1）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="http://blog.chinaunix.net/uid/27041925/year-201212-list-1.html">2012年12月</a>（1）</li>
                      </ul>
                  </div>
      </div>
      	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">我的朋友</div>
        <ul class="Blog_ul4">
                    <li><a href="http://blog.chinaunix.net/uid/22174347.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/22174347.html" title="hbhuanggang">hbhuangg</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23629988.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/88_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23629988.html" title="GFree_Wind">GFree_Wi</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/22030783.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/83_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/22030783.html" title="小超hide">小超hide</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23381466.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/66_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23381466.html" title="wangchenxicool">wangchen</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/20680966.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/66_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/20680966.html" title="帅得不敢出门">帅得不敢</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/23769728.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/28_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/23769728.html" title="MagicBoy2010">MagicBoy</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/26833883.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/83_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/26833883.html" title="草根老师">草根老师</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/13328506.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/06_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/13328506.html" title="jobchanceleo">jobchanc</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/20543672.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/72_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/20543672.html" title="tekkamanninja">tekkaman</a></p>
          </li>
                  </ul>
      </div>
	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">最近访客</div>
        <ul class="Blog_ul4">
                    <li><a href="http://blog.chinaunix.net/uid/29401328.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/28_avatar_small_002.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/29401328.html" title="枫露清愁">枫露清愁</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/31339200.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/31339200.html" title="tiandk">tiandk</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/28838676.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/28838676.html" title="永不放其">永不放其</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/30173982.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/30173982.html" title="sheep116">sheep116</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/31323725.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/31323725.html" title="mokart">mokart</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/15640727.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/15640727.html" title="f22sword">f22sword</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/30155375.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/30155375.html" title="Crazy_Skyer">Crazy_Sk</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/25396627.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/noavatar_small.gif" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/25396627.html" title="von81">von81</a></p>
          </li>
                    <li><a href="http://blog.chinaunix.net/uid/25776631.html"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/31_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'"></a>
            <p><a href="http://blog.chinaunix.net/uid/25776631.html" title="teaco77">teaco77</a></p>
          </li>
                  </ul>
      </div>
	           <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">微信关注</div>
        <div class="">
                <div class="" style="float:left; margin-right:5px;">
                 <img alt="" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/IT168.jpg" height="90" width="90">
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         IT168企业级官微
                </p>
                 <p class="">

                 <br><br>
                 微信号：IT168qiye
                </p>
                </div>
        </div>
<hr style="clear:both;" size="1">
        <div class="" style="clear:both;">
                <div class="" style="float:left; margin-right:5px;">
                 <img alt="" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/itpub.jpg" height="90" width="90">
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         系统架构师大会
                </p>
                 <p class="">

                 <br><br>
                 微信号：SACC2013
                </p>
                </div>
        </div>

</div>
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">订阅</div>
        <ul class="Blog_ul5">
          <li><a href="http://blog.chinaunix.net/blog/rss/uid/27041925.html" class="Blog_a4"></a></li>
          <li><a href="http://www.google.com/ig/add?feedurl=http%3A%2F%2Fblog.chinaunix.net%2Fuid%2F27041925.html" class="Blog_a5"></a></li>
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">推荐博文</div>
        <ul class="Blog_ul6">
				  			<li>·<a href="http://blog.chinaunix.net/uid-25356953-id-5728990.html" title="通过shell脚本进行数据库操作 ">通过shell脚本进行数据库操作...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-30646905-id-5728965.html" title="关于LINUX C中函数strtok使用要点">关于LINUX C中函数strtok使用...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-30111588-id-5728915.html" title="arm 异常处理">arm 异常处理</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-23062171-id-5728835.html" title="通过shell脚本进行数据库操作 ">通过shell脚本进行数据库操作...</a></li>
		  			<li>·<a href="http://blog.chinaunix.net/uid-26168435-id-5728816.html" title="Zabbix_agent部署">Zabbix_agent部署</a></li>
		  						
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">热词专题</div>
        <ul class="Blog_ul6">
                        <li>·<a href="http://blog.chinaunix.net/zt/1041/ffmpegpngyuv_1041305.shtml" target="blank" title="Java调用ffmpeg进行视频转码">Java调用ffmpeg进行视频转码...</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1010/patchhostsfile_1010507.shtml" target="blank" title="patch命令使用">patch命令使用</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1013/linuxguifeng_1013683.shtml" target="blank" title="Linux修改用户id和所在的组">Linux修改用户id和所在的组...</a></li>
                        <li>·<a href="http://blog.chinaunix.net/zt/1015/awkjiehu_1015321.shtml" target="blank" title="linux awk命令详解">linux awk命令详解</a></li>
                        <li class="no_line1">·<a href="http://blog.chinaunix.net/zt/1042/ubuntu1204ooter_1042497.shtml" target="blank" title="ubuntu linux切换用户到root ">ubuntu linux切换用户到root ...</a></li>
          <!--              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoop220peizhi.shtml" target='blank' title='配置hadoop2.2.0格式化namenode问题'></a></li>
              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoopshouce.shtml" target='blank' title='hadoop2.2.0安装手册'></a></li>-->
        </ul>
      </div>
	        <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">友情链接</div>
        <ul class="Blog_ul6">
                        <li>·<a href="http://www.cnblogs.com/papam/" target="blank" title="在路上">在路上</a></li>
                        <li>·<a href="http://blog.csdn.net/fudan_abc" target="blank" title="fudan">fudan</a></li>
                        <li>·<a href="http://blog.csdn.net/sailor_8318" target="blank" title="sailor">sailor</a></li>
                        <li>·<a href="http://blog.csdn.net/cheny_com" target="blank" title="陈勇">陈勇</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/22030783.html" target="blank" title="小超">小超</a></li>
                        <li>·<a href="http://blog.csdn.net/ce123" target="blank" title="周卫">周卫</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/11344913.html" target="blank" title="刘歧">刘歧</a></li>
                        <li>·<a href="http://blog.csdn.net/fudan_abc" target="blank" title="任桥伟">任桥伟</a></li>
                        <li>·<a href="http://blog.chinaunix.net/uid/22174347.html" target="blank" title="黄刚">黄刚</a></li>
                        <li class="no_line1">·<a href="http://blog.donews.com/21cnbao/" target="blank" title="宋宝华">宋宝华</a></li>
                  </ul>
      </div>
	  

	</div>
<script language="javascript">
$(document).ready(function(){
    /*目录树JS效果*/
	$('#blogCla li > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogCla li > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogCla li > .zk').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().children('.zk').css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().children('.zk').css('display', 'none');
		}
	});
		
	$('#blogdtr > p > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogdtr > .Blog_p4 > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogdtr ul').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().next().css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().next().css('display', 'none');
		}
	});
});
</script>    <!-- 右 -->
    <div class="Blog_right1">
      <div class="Blog_right1_1 Blog_right1_11">
        <div class="Blog_right1_2 ">
			<!--推荐博文-->
          <div class="Blog_tit4 Blog_tit5">
                        <b class="Blog_b2"></b>
            <a href="http://blog.chinaunix.net/uid-27041925-id-3999558.html">Linux串口（serial、uart）驱动程序设计 </a>
            <em>2013-11-21 14:33:15</em>
          </div>
          <div class="Blog_con2">
            <div class="Blog_con3">
              <p>分类： <span>LINUX</span></p>
			                <p></p>
            </div>
           <div class="Blog_wz1" style="word-wrap: break-word;">
						<p>
	原文地址：<span><a href="http://blog.chinaunix.net/uid-23089249-id-34481.html"><span style="color:#565656;">Linux串口（serial、uart）驱动程序设计</span></a></span> 作者：<span><a href="http://blog.chinaunix.net/uid/23089249.html"><span style="color:#565656;">lingdxuyan</span></a></span>
</p>
<p>
	<br>
</p>
<div class="Blog_wz1" style="-ms-word-wrap:break-word;">
	<p>
		一、核心数据结构<br>
串口驱动有3个核心数据结构，它们都定义在&lt;#include linux/serial_core.h&gt;<br>
1、uart_driver<br>
uart_driver包含了串口设备名、串口驱动名、主次设备号、串口控制台(可选)等信息，还封装了tty_driver(底层串口驱动无需关心tty_driver)。
	</p>
	<p>
		<br>
	</p>
	<p>
		</p><table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
			<tbody>
				<tr>
					<td>
						<p style="margin:5px;line-height:150%;">
							<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> module&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">*</span>owner<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 拥有该uart_driver的模块,一般为THIS_MODULE */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>driver_name<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/*&nbsp;串口驱动名，串口设备文件名以驱动名为基础 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>dev_name<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 串口设备名 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; major<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/* 主设备号 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span style="color:#FF9900;">/* 次设备号 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nr<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/* 该uart_driver支持的串口个数(最大) */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> console&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>cons<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 其对应的console.若该uart_driver支持serial console,否则为NULL */</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:NSimsun;"><span style="color:#FF9900;">/*<br>
&nbsp;&nbsp;&nbsp;&nbsp; * these are private; the low level driver should not<br>
&nbsp;&nbsp;&nbsp;&nbsp; * touch these; they should be initialised to NULL<br>
&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> uart_state&nbsp;<span style="color:#0000CC;">*</span>state<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> tty_driver&nbsp;<span style="color:#0000CC;">*</span>tty_driver<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span></span>
						</p>
					</td>
				</tr>
			</tbody>
		</table>
		<p>
			<br>
		</p>
		<p>
			2、uart_port<br>
uart_port用于描述串口端口的I/O端口或I/O内存地址、FIFO大小、端口类型、串口时钟等信息。实际上，一个uart_port实例对应一个串口设备
		</p>
		<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
			<tbody>
				<tr>
					<td>
						<p style="margin:5px;line-height:150%;">
							<span style="color:#000000;"><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;spinlock_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* 串口端口锁 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iobase<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* IO端口基地址 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span> __iomem&nbsp;<span style="color:#0000CC;">*</span>membase<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff9900;">&nbsp;&nbsp;&nbsp; </span><span style="color:#FF9900;">/* IO内存基地址,经映射(如ioremap)后的IO内存虚拟基地址 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;"> </span><span style="color:#FF9900;">/* 中断号 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uartclk<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 串口时钟 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fifosize<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 串口FIFO缓冲大小 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x_char<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* xon/xoff字符 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; regshift<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 寄存器位移 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iotype<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* IO访问方式 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unused1<span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>0<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* IO端口 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_HUB6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>1<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_MEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span>2<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/* IO内存 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_MEM32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>3<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_AU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>4<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* Au1x00 type IO */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_TSI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span>5<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* Tsi108/109 type IO */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_DWAPB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>6<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* DesignWare APB UART */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPIO_RM9000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>7<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* RM9000 type IO */</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read_status_mask<span style="color:#0000CC;">;</span>&nbsp;&nbsp;<span style="color:#FF9900;">/* 关心的Rx error status */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignore_status_mask<span style="color:#0000CC;">;</span><span style="color:#FF9900;">/* 忽略的Rx error status */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> uart_info&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">*</span>info<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* pointer to parent info */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> uart_icount&nbsp;&nbsp;&nbsp;&nbsp; icount<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/* 计数器 */</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> console&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>cons<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/*&nbsp;console结构体 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">ifdef</span> CONFIG_SERIAL_CORE_CONSOLE<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sysrq<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#FF9900;">/* sysrq timeout */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">endif</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;upf_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 &nbsp;flags<span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_FOURPORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 1<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SAK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 2<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_MASK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x1030<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_HI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x0010<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_VHI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x0020<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_CUST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x0030<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_SHI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x1000<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SPD_WARP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x1010<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SKIP_TEST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 6<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_AUTO_IRQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 7<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_HARDPPS_CD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 11<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_LOW_LATENCY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 13<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_BUGGY_UART&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 14<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_MAGIC_MULTIPLIER&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 16<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_CONS_FLOW&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 23<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_SHARE_IRQ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 24<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_BOOT_AUTOCONF&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 28<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_FIXED_PORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 29<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_DEAD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 30<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_IOREMAP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 31<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_CHANGE_MASK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>0x17fff<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UPF_USR_MASK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force upf_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>UPF_SPD_MASK<span style="color:#0000CC;">|</span>UPF_LOW_LATENCY<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mctrl<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 当前的moden设置 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeout<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* character-based timeout */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 端口类型 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">struct</span> uart_ops&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>ops<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* 串口端口操作函数集 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; custom_divisor<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF0000;">line</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 端口索引 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;resource_size_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapbase<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* <span style="font-family:NSimsun;">IO内存物理基地址，可用于</span>ioremap */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> device&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span style="color:#0000CC;">*</span>dev<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 父设备 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;hub6<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* this should be in the 8250 driver */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; suspended<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unused<span style="color:#0000CC;">[</span>2<span style="color:#0000CC;">]</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>private_data<span style="color:#0000CC;">;</span>&nbsp;<span style="color:#FF9900;">/* 端口私有数据,一般为platform数据指针 */</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span>
						</p>
					</td>
				</tr>
			</tbody>
		</table>
		<p>
			uart_iconut为串口信息计数器，包含了发送字符计数、接收字符计数等。在串口的发送中断处理函数和接收中断处理函数中，我们需要管理这些计数。
		</p>
		<p>
			</p><table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
				<tbody>
					<tr>
						<td>
							<p style="margin:5px;line-height:150%;">
								<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#0000FF;">struct</span> uart_icount <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;cts<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;dsr<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;rng<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;dcd<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;rx</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;</span><span style="color:#000000;"><span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#FF9900;">/*&nbsp;发送字符计数 */</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;tx</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;</span><span style="color:#000000;"><span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#FF9900;">/*&nbsp;接受字符计数 */</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;frame</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;</span><span style="color:#000000;"><span style="font-family:新宋体;">&nbsp;&nbsp;&nbsp;</span><span style="color:#FF9900;">/*&nbsp;帧错误计数 */</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;overrun</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;</span><span style="color:#000000;"><span style="font-family:NSimsun;"> </span><span style="color:#FF9900;">/*&nbsp;Rx FIFO溢出计数 */</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;parity</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;&nbsp;</span><span style="color:#000000;"><span style="font-family:新宋体;"> </span><span style="color:#FF9900;">/*&nbsp;帧校验错误计数 */</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;brk</span><span style="color:#0000CC;"><span style="font-family:NSimsun;">;&nbsp;&nbsp;&nbsp;</span><span style="font-family:NSimsun;">&nbsp;</span><span style="color:#000000;"><span style="font-family:新宋体;"> </span><span style="color:#FF9900;"><span style="font-family:NSimsun;">/*&nbsp;break计数 */</span></span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;&nbsp;&nbsp;&nbsp;__u32&nbsp;&nbsp;&nbsp;&nbsp;buf_overrun<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span></span>
							</p>
						</td>
					</tr>
				</tbody>
			</table>
			<p>
				<br>
			</p>
			<p>
				
uart_info有两个成员在底层串口驱动会用到：xmit和tty。用户空间程序通过串口发送数据时，上层驱动将用户数据保存在xmit；而串口发送
中断处理函数就是通过xmit获取到用户数据并将它们发送出去。串口接收中断处理函数需要通过tty将接收到的数据传递给行规则层。
			</p>
			<p>
				</p><table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
					<tbody>
						<tr>
							<td>
								<p style="margin:5px;line-height:150%;">
									<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* uart_info实例仅在串口端口打开时有效，它可能在串口关闭时被串口核心层释放。因此，在使用uart_port的uart_info成员时必须保证串口已打开。底层驱动和核心层驱动都可以修改uart_info实例。<br>
&nbsp;* This is the state information which is only valid when the port<br>
&nbsp;* is open; it may be freed by the core driver once the device has<br>
&nbsp;* been closed. Either the low level driver or the core can modify<br>
&nbsp;* stuff here.<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">struct</span> uart_info <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> tty_struct&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>tty<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> circ_buf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmit<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uif_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 flags<span style="color:#0000CC;">;</span><br>
<br>
</span><span style="font-family:NSimsun;"><span style="color:#FF9900;">/*<br>
&nbsp;* Definitions for info-&gt;flags. These are _private_ to serial_core, and<br>
&nbsp;* are specific to this structure. They may be queried by low level drivers.<br>
&nbsp;*/</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UIF_CHECK_CD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force uif_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 25<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UIF_CTS_FLOW&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force uif_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 26<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UIF_NORMAL_ACTIVE&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force uif_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 29<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UIF_INITIALIZED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force uif_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 31<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> UIF_SUSPENDED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>__force uif_t<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>1 <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 30<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 blocked_open<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> tasklet_struct&nbsp;&nbsp;&nbsp;tlet<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;wait_queue_head_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; open_wait<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wait_queue_head_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delta_msr_wait<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span></span>
								</p>
							</td>
						</tr>
					</tbody>
				</table>
				<p>
					<br>
				</p>
				<p>
					3、uart_ops
				</p>
				<p>
					uart_ops涵盖了串口驱动可对串口设备进行的所有操作。
				</p>
				<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
					<tbody>
						<tr>
							<td>
								<p style="margin:5px;line-height:150%;">
									<span style="color:#000000;"><span style="color:#FF9900;">/*<br>
&nbsp;* This structure describes all the operations that can be<br>
&nbsp;* done on the physical hardware.<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">struct</span> uart_ops <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>tx_empty<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;&nbsp;<span style="color:#FF9900;"><span style="font-family:NSimsun;">/*&nbsp;串口的Tx FIFO缓存是否为空&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>set_mctrl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> mctrl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:NSimsun;">&nbsp;</span><span style="color:#FF9900;"><span style="font-family:NSimsun;">/*&nbsp;设置串口modem控制&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span>&nbsp;<span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>get_mctrl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;获取串口modem控制&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>stop_tx<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;禁止串口发送数据&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>start_tx<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;使能串口发送数据&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>send_xchar<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">char</span> ch<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="color:#FF9900;"><span style="font-family:新宋体;">/*&nbsp;发送xChar&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>stop_rx<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;禁止串口接收数据&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>enable_ms<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;使能modem的状态信号&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>break_ctl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span> ctl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;设置break信号&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>startup<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;启动串口,应用程序打开串口设备文件时,该函数会被调用&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span><span style="color:#FF0000;">shutdown</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;关闭串口,应用程序关闭串口设备文件时,该函数会被调用&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>set_termios<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span><span style="color:#0000FF;">new</span><span style="color:#0000CC;">,</span>&nbsp;<span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span>old<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;设置串口参数&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>pm<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> state<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> oldstate<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;串口电源管理&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>set_wake<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> state<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span>&nbsp; <span style="color:#0000CC;">*</span><span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>type<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;返回一描述串口类型的字符串&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>release_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;释放串口已申请的IO端口/IO内存资源,必要时还需<span style="font-family:NSimsun;">iounmap</span>&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>request_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;申请必要的IO端口/IO内存资源,必要时还可以重新映射串口端口&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>config_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;执行串口所需的自动配置&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>verify_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> serial_struct <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;核实新串口的信息&nbsp;*/</span></span></span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>ioctl<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;<span style="font-family:新宋体;">&nbsp;<span style="color:#FF9900;">/*&nbsp;IO控制&nbsp;*/</span></span></span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span>
								</p>
							</td>
						</tr>
					</tbody>
				</table>
<br>
				<div>
				</div>
				<div>
				</div>
				<div>
				</div>
				<div>
					二、串口驱动API
				</div>
				<div>
					1、uart_register_driver
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp; uart_register_driver用于将串口驱动uart_driver注册到内核(串口核心层)中，通常在模块初始化函数调用该函数。<br>
&nbsp;* 参数 drv：要注册的uart_driver</span></span></span>
									</p>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">&nbsp;*&nbsp;返回值：&nbsp; 成功，返回0；否则返回错误码<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">int</span> uart_register_driver<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					2、uart_unregister_driver
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">/* 功能：&nbsp;&nbsp;&nbsp; uart_unregister_driver用于注销我们已注册的uart_driver，通常在模块卸载函数调用该函数<br>
&nbsp;* </span><span style="font-family:新宋体;">参数 drv：要注销的uart_driver</span></span></span>
									</p>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:新宋体;"></span><span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">&nbsp;*&nbsp;返回值：&nbsp; 成功，返回0；否则返回错误码</span></span></span><br>
<span style="font-family:NSimsun;">&nbsp;*/</span></span><br>
<span style="font-family:NSimsun;"><span style="color:#0000FF;">void</span> uart_unregister_driver<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					3、uart_add_one_port
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">/* 功能：&nbsp;&nbsp;&nbsp; uart_add_one_port用于为串口驱动添加一个串口端口，通常在探测到设备后(驱动的设备probe方法)调用该函数<br>
&nbsp;* 参数&nbsp;drv：串口驱动<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; port:要添加的串口端口</span></span></span>
									</p>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">&nbsp;* 返回值：&nbsp; </span><span style="font-family:新宋体;">成功，返回0；否则返回错误码</span><br>
<span style="font-family:NSimsun;">&nbsp;*/</span></span><br>
<span style="font-family:NSimsun;"><span style="color:#0000FF;">int</span> uart_add_one_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					4、uart_remove_one_port
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uart_remove_one_port用于删除一个已添加到串口驱动中的串口端口，通常在驱动卸载时调用该函数<br>
&nbsp;* 参数&nbsp;drv： 串口驱动<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; port: 要删除的串口端口<br>
&nbsp;* 返回值：&nbsp;&nbsp; <span style="font-family:新宋体;">成功，返回0；否则返回错误码</span><br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">int</span> uart_remove_one_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					5、uart_write_wakeup
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp; uart_write_wakeup唤醒上层因向串口端口写数据而阻塞的进程，通常在串口发送中断处理函数中调用该函数<br>
&nbsp;* 参数 port：需要唤醒写阻塞进程的串口端口<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">void</span> uart_write_wakeup<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					6、uart_suspend_port
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp; uart_suspend_port用于挂起特定的串口端口<br>
&nbsp;*&nbsp;参数</span><span style="font-family:新宋体;">&nbsp;</span><span style="font-family:NSimsun;">drv： 要挂起的串口端口所属的串口驱动<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port：要挂起的串口端口<br>
&nbsp;* 返回值：&nbsp;&nbsp; 成功返回0；否则返回错误码<br>
&nbsp;*/</span></span><br>
<span style="font-family:NSimsun;"><span style="color:#0000FF;">int</span> uart_suspend_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					7、uart_resume_port
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp; uart_resume_port用于恢复某一已挂起的串口<br>
&nbsp;*&nbsp;参数<span style="font-family:新宋体;">&nbsp;</span><span style="font-family:NSimsun;">drv： 要恢复的串口端口所属的串口驱动<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port：要恢复的串口端口<br>
&nbsp;* 返回值：&nbsp;&nbsp; 成功返回0；否则返回错误码</span><br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">int</span> uart_resume_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_driver <span style="color:#0000CC;">*</span>drv<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					8、uart_get_baud_rate
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uart_get_baud_rate通过解码termios结构体来获取指定串口的波特率<br>
&nbsp;* 参数 port：&nbsp; 要获取波特率的串口端口<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; termios：当前期望的</span><span style="font-family:NSimsun;">termios配置(包含串口波特率)</span><br>
<span style="font-family:NSimsun;">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; old：&nbsp;&nbsp;&nbsp; 以前的</span><span style="font-family:新宋体;">termios配置，可以为NULL</span><br>
<span style="font-family:NSimsun;">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; min：&nbsp;&nbsp;&nbsp; 可接受的最小波特率<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; max</span><span style="font-family:NSimsun;">：&nbsp;&nbsp;&nbsp;&nbsp;可接受的最大波特率</span><br>
<span style="font-family:NSimsun;">&nbsp;* 返回值：&nbsp;&nbsp;&nbsp;&nbsp; 串口的波特率<br>
&nbsp;*/</span></span><br>
<span style="font-family:NSimsun;"><span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span><br>
uart_get_baud_rate<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span>termios<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span>old<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> <span style="color:#FF0000;">min</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> <span style="color:#FF0000;">max</span><span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					9、uart_get_divisor
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp; uart_get_divisor用于计算某一波特率的串口时钟分频数（串口波特率除数）<br>
&nbsp;* 参数 port：要计算时钟分频数的串口端口<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; baud：期望的波特率<br>
&nbsp;*返回值：&nbsp;&nbsp;&nbsp; 串口时钟分频数<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> uart_get_divisor<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> baud<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					10、uart_update_timeout
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;"><span style="font-family:NSimsun;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uart_update_timeout用于更新（设置）串口FIFO超时时间<br>
&nbsp;* 参数 port： 要更新超时时间的串口端口<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; cflag：</span><span style="font-family:新宋体;">termios结构体的cflag值</span><br>
<span style="font-family:NSimsun;">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; baud： 串口的波特率</span></span></span><span style="color:#000000;"><span style="color:#FF9900;"><br>
<span style="font-family:NSimsun;">&nbsp;*/</span></span><br>
<span style="font-family:NSimsun;"><span style="color:#0000FF;">void</span> uart_update_timeout<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int </span>cflag<span style="color:#0000CC;">,</span>&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> baud<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					11、uart_match_port
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#FF9900;">/* 功能：uart_match_port用于判断两串口端口是否为同一端口<br>
&nbsp;* 参数 port1、port2：要判断的串口端口<br>
&nbsp;* 返回值：不同返回0；否则返回非0<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">int</span> uart_match_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port1<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port2<span style="color:#0000CC;">)</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					12、uart_console_write<br>
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;">/* 功能：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uart_console_write用于向串口端口写一控制台信息</span></span>
									</p>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="color:#FF9900;">&nbsp;*&nbsp;参数 port:&nbsp;&nbsp;&nbsp; 要写信息的串口端口<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; s:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要写的信息<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; count:&nbsp;&nbsp; 信息的大小<br>
&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp; putchar: 用于向串口端口写字符的函数，该函数函数有两个参数：串口端口和要写的字符<br>
&nbsp;*/</span><br>
<span style="color:#0000FF;">void</span> uart_console_write<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span> <span style="color:#0000CC;">*</span>s<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> <span style="color:#FF0000;">count</span><span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span><span style="color:#FF0000;">putchar</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					&nbsp;
				</div>
				<div>
					三、串口驱动例子
				</div>
				<div>
					该串口驱动例子是我针对s3c2410处理器的串口2(uart2)独立开发的。因为我通过博创2410s开发板的GRPS扩展板来测试该驱动（已通过测试），所以我叫该串口为gprs_uart。
				</div>
				<div>
					&nbsp;
				</div>
				<div>
					该驱动将串口看作平台(platform)设备。platform可以看作一伪总线，用于将集成于片上系统的轻量级设备与Linux设备驱动模型联系到一起，它包含以下两部分（有关platform的声明都在#include <linux platform_device.h="">,具体实现在drivers/base/platform.c）：
				</linux></div>
				<div>
					1、platform设备。我们需要为每个设备定义一个platform_device实例
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000CC;">*</span>name<span style="color:#0000CC;">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:#FF9900;">/*&nbsp;设备名 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id<span style="color:#0000CC;">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:#FF9900;">/*&nbsp;设备的id号 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> device&nbsp;&nbsp;&nbsp; dev<span style="color:#0000CC;">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:#FF9900;">/*&nbsp;其对应的device */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_resources<span style="color:#0000CC;">;</span><span style="color:#FF9900;">/*&nbsp;该设备用有的资源数 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> resource&nbsp;<span style="color:#0000CC;">*</span>resource<span style="color:#0000CC;">;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:#FF9900;">/*&nbsp;资源数组 */</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
					为我们的设备创建platform_device实例有两种方法：填充一个platform_device结构体后用<span style="font-family:NSimsun;">platform_device_register(一次注册一个)或platform_add_devices（一次可以注册多个platform设备）将</span><span style="font-family:'Courier New';">platform_device注册到内核；更简单的是使用platform_device_register_simple来建立并注册我们的platform_device。<br>
2、platform驱动。platform设备由platform驱动进行管理。当设备加入到系统中时，platform_driver的probe方
法会被调用来见对应的设备添加或者注册到内核；当设备从系统中移除时，platform_driver的remove方法会被调用来做一些清理工作，如移
除该设备的一些实例、注销一些已注册到系统中去的东西。</span>
				</div>
				<div>
					<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
						<tbody>
							<tr>
								<td>
									<p style="margin:5px;line-height:150%;">
										<span style="color:#000000;"><span style="font-family:NSimsun;"><span style="color:#0000FF;">struct</span> platform_driver <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>probe<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span><span style="color:#FF0000;">remove</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">void</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span><span style="color:#FF0000;">shutdown</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>suspend<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> pm_message_t state<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>suspend_late<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> pm_message_t state<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>resume_early<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span>&nbsp; <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>resume<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> device_driver driver<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span></span></span>
									</p>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div>
				</div>
				<p>
					更详细platform资料可参考网上相关文章。
				</p>
				<p>
					例子驱动中申请和释放IO内存区的整个过程如下：
				</p>
				<p>
					<span style="font-family:'Times New';"><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">insmod&nbsp;gprs_uart.ko</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_init</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">_module</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">uart_register_driver()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_probe()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">&nbsp;uart_add_one_port()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_config_port()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">gprs_uart_request_port(</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">)</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">request_mem_region()</span></span>
				</p>
				<p>
					<span style="font-family:'Times New';"><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"=""></span></span><span style="font-family:'Times New';"><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">rmmod&nbsp;gprs_uart.ko</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_exit</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">_module</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">uart</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_unregister_driver()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_remove()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">uart_remove_one_port()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_release_port()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">release_mem_region()</span></span>
				</p>
				<p class="p0" style="background:#FFFFFF;padding:0pt;text-align:left;margin-top:0pt;margin-bottom:0pt;">
					<span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"=""></span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"=""><span style="color:#000000;font-family:'Courier New';font-size:x-small;">例子驱动中申请和释放IRQ资源的整个过程如下：</span></span>
				</p>
				<p class="p0" style="background:#FFFFFF;padding:0pt;text-align:left;margin-top:0pt;margin-bottom:0pt;">
					<span style="font-family:'Times New';"><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">open&nbsp;/dev/</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs_uart</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_startup()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">request_irq()</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"=""></span></span>
				</p>
				<p class="p0" style="margin-top:0pt;margin-bottom:0pt;">
					<span style="font-family:'Times New';"><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">close&nbsp;/dev/</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs_uart</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">gprs</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_uart_shutdown()</span><span style="background:#FFFFFF;color:#333333;font-family:" arial";font-size:10.5pt;mso-spacerun:"yes";"="">→</span><span style="background:#FFFFFF;color:#333333;font-family:" 宋体";font-size:10.5pt;mso-spacerun:"yes";"="">free</span><span style="background:#FFFFFF;color:#333333;font-family:" verdana";font-size:10.5pt;mso-spacerun:"yes";"="">_irq()</span></span>
				</p>

				<p>
					想了解更详细的调用过程可以在驱动模块各函数头插入printk(KERN_DEBUG "%s\n", __FUNCTION__);并在函数尾插入printk(KERN_DEBUG "%s done\n", __FUNCTION__);
				</p>
				<p>
					下面是串口驱动例子和其GPRS测试程序源码下载地址：
				</p>
				<p>
					<a href="http://www.pudn.com/downloads258/sourcecode/unix_linux/detail1192104.html"><span style="color:#19599b;">http://www.pudn.com/downloads258/sourcecode/unix_linux/detail1192104.html</span></a>
				</p>
				<div>
				</div>
				<table style="border-collapse:collapse;" width="95%" bgcolor="#f1f1f1" border="1" bordercolor="#999999" cellpadding="0" cellspacing="0">
					<tbody>
						<tr>
							<td>
								<p style="margin:5px;line-height:150%;">
									<span style="color:#000000;"><span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>module<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>init<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>kernel<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* printk() */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>slab<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* kmalloc() */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>fs<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* everything... */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span><span style="color:#FF0000;">errno</span><span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* error codes */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>types<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* size_t */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>fcntl<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* O_ACCMODE */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span><span style="color:#FF0000;">system</span><span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* cli(), *_flags */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>uaccess<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* copy_*_user */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>ioctl<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>device<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>platform_device<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>sysrq<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>tty<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>tty_flip<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>serial_core<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>serial<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>delay<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>clk<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span>linux<span style="color:#0000CC;">/</span>console<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>io<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>irq<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>hardware<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>plat<span style="color:#0000CC;">-</span>s3c<span style="color:#0000CC;">/</span>regs<span style="color:#0000CC;">-</span>serial<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">include</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000FF;">asm</span><span style="color:#0000CC;">/</span>arch<span style="color:#0000CC;">/</span>regs<span style="color:#0000CC;">-</span>gpio<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">&gt;</span><br>
<br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> DEV_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF00FF;">"gprs_uart"</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* 设备名 */</span><br>
<span style="color:#FF9900;">/* 这里将串口的主设备号设为0,则串口设备编号由内核动态分配;你也可指定串口的设备编号 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span>
 
GPRS_UART_MAJOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 主设备号 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span>
 
GPRS_UART_MINOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 次设备号 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> GPRS_UART_FIFO_SIZE&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 串口FIFO的大小 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> RXSTAT_DUMMY_READ&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>0x10000000<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> MAP_SIZE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>0x100<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 要映射的串口IO内存区大小 */</span><br>
<br>
<span style="color:#FF9900;">/* 串口发送中断号 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>irq <span style="color:#0000CC;">+</span> 1<span style="color:#0000CC;">)</span><br>
<span style="color:#FF9900;">/* 串口接收中断号 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>irq<span style="color:#0000CC;">)</span><br>
<br>
<span style="color:#FF9900;">/* 允许串口接收字符的标志 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>unused<span style="color:#0000CC;">[</span>0<span style="color:#0000CC;">]</span><span style="color:#0000CC;">)</span><br>
<span style="color:#FF9900;">/* 允许串口发送字符的标志 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>unused<span style="color:#0000CC;">[</span>1<span style="color:#0000CC;">]</span><span style="color:#0000CC;">)</span><br>
<br>
<span style="color:#FF9900;">/* 获取寄存器地址 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> portaddr<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>membase <span style="color:#0000CC;">+</span> <span style="color:#0000CC;">(</span>reg<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<br>
<span style="color:#FF9900;">/* 读8位宽的寄存器 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> rd_regb<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>ioread8<span style="color:#0000CC;">(</span>portaddr<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#FF9900;">/* 读32位宽的寄存器 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">(</span>ioread32<span style="color:#0000CC;">(</span>portaddr<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
<span style="color:#FF9900;">/* 写8位宽的寄存器 */</span><br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> wr_regb<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">,</span> val<span style="color:#0000CC;">)</span> \<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">do</span> <span style="color:#0000CC;">{</span> iowrite8<span style="color:#0000CC;">(</span>val<span style="color:#0000CC;">,</span> portaddr<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span> <span style="color:#0000CC;">}</span> <span style="color:#0000FF;">while</span><span style="color:#0000CC;">(</span>0<span style="color:#0000CC;">)</span><br>
<span style="color:#FF9900;">/* 写32位宽的寄存器 */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">,</span> val<span style="color:#0000CC;">)</span> \<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">do</span> <span style="color:#0000CC;">{</span> iowrite32<span style="color:#0000CC;">(</span>val<span style="color:#0000CC;">,</span> portaddr<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> reg<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span> <span style="color:#0000CC;">}</span> <span style="color:#0000FF;">while</span><span style="color:#0000CC;">(</span>0<span style="color:#0000CC;">)</span><br>
<br>
<br>
<span style="color:#FF9900;">/* 禁止串口发送数据 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_stop_tx<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若串口已启动发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable_irq<span style="color:#0000CC;">(</span>TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 禁止发送中断 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为未启动发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 使能串口发送数据 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_start_tx<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">!</span>tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若串口未启动发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enable_irq<span style="color:#0000CC;">(</span>TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 使能发送中断 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 1<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为已启动发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 禁止串口接收数据 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_stop_rx<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若串口已启动接收 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable_irq<span style="color:#0000CC;">(</span>RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 禁止接收中断 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为未启动接收 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 使能modem的状态信号 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_enable_ms<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 串口的Tx FIFO缓存是否为空 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> gprs_uart_tx_empty<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> ret <span style="color:#0000CC;">=</span> 1<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> ufstat <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFSTAT<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> ufcon <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFCON<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ufcon <span style="color:#0000CC;">&amp;</span> S3C2410_UFCON_FIFOMODE<span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若使能了FIFO */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>ufstat <span style="color:#0000CC;">&amp;</span> S3C2410_UFSTAT_TXMASK<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">!</span><span style="color:#0000CC;">=</span> 0 <span style="color:#0000CC;">|</span><span style="color:#0000CC;">|</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 0 <fifo <="15" *="" span=""><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">(</span>ufstat <span style="color:#0000CC;">&amp;</span> S3C2410_UFSTAT_TXFULL<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* FIFO满 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若未使能了FIFO,则判断发送缓存和发送移位寄存器是否均为空 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UTRSTAT<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&amp;</span> S3C2410_UTRSTAT_TXE<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> ret<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 获取串口modem控制,因为uart2无modem控制,所以CTS、DSR直接返回有效 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> gprs_uart_get_mctrl<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> <span style="color:#0000CC;">(</span><span style="color:#FF0000;">TIOCM_CTS</span> <span style="color:#0000CC;">|</span> <span style="color:#FF0000;">TIOCM_DSR</span> <span style="color:#0000CC;">|</span> <span style="color:#FF0000;">TIOCM_CAR</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 设置串口modem控制 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_set_mctrl<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> mctrl<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
<br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 设置break信号 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_break_ctl<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span> break_state<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> flags<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> ucon<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_lock_irqsave<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;ucon <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UCON<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>break_state<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ucon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_UCON_SBREAK<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ucon <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">=</span> <span style="color:#0000CC;">~</span>S3C2410_UCON_SBREAK<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UCON<span style="color:#0000CC;">,</span> ucon<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_unlock_irqrestore<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 返回Rx FIFO已存多少数据 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_rx_fifocnt<span style="color:#0000CC;">(</span><span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> ufstat<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若Rx FIFO已满,返回FIFO的大小 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ufstat <span style="color:#0000CC;">&amp;</span> S3C2410_UFSTAT_RXFULL<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> GPRS_UART_FIFO_SIZE<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若FIFO未满,返回Rx FIFO已存了多少字节数据 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> <span style="color:#0000CC;">(</span>ufstat <span style="color:#0000CC;">&amp;</span> S3C2410_UFSTAT_RXMASK<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&gt;</span><span style="color:#0000CC;">&gt;</span> S3C2410_UFSTAT_RXSHIFT<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#0000CC;">#</span><span style="color:#FF0000;">define</span> S3C2410_UERSTAT_PARITY <span style="color:#0000CC;">(</span>0x1000<span style="color:#0000CC;">)</span><br>
<br>
<span style="color:#FF9900;">/* 串口接收中断处理函数,获取串口接收到的数据,并将这些数据递交给行规则层 */</span><br>
<span style="color:#0000FF;">static</span> irqreturn_t gprs_uart_rx_chars<span style="color:#0000CC;">(</span><span style="color:#0000FF;">int</span> irq<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">void</span> <span style="color:#0000CC;">*</span>dev_id<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port <span style="color:#0000CC;">=</span> dev_id<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> tty_struct <span style="color:#0000CC;">*</span>tty <span style="color:#0000CC;">=</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>info<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>tty<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> ufcon<span style="color:#0000CC;">,</span> ch<span style="color:#0000CC;">,</span> flag<span style="color:#0000CC;">,</span> ufstat<span style="color:#0000CC;">,</span> uerstat<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> max_count <span style="color:#0000CC;">=</span> 64<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 循环接收数据,最多一次中断接收64字节数据 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">while</span> <span style="color:#0000CC;">(</span>max_count<span style="color:#0000CC;">-</span><span style="color:#0000CC;">-</span> <span style="color:#0000CC;">&gt;</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ufcon <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFCON<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ufstat <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFSTAT<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若Rx FIFO无数据了,跳出循环 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>gprs_uart_rx_fifocnt<span style="color:#0000CC;">(</span>ufstat<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 读取Rx error状态寄存器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uerstat <span style="color:#0000CC;">=</span> rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UERSTAT<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 读取已接受到的数据 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch <span style="color:#0000CC;">=</span> rd_regb<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_URXH<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* insert the character into the buffer */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 先将tty标志设为正常 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag <span style="color:#0000CC;">=</span> TTY_NORMAL<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 递增接收字符计数器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>rx<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 判断是否存在Rx error<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * if (unlikely(uerstat &amp; S3C2410_UERSTAT_ANY))等同于<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * if (uerstat &amp; S3C2410_UERSTAT_ANY)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 只是unlikely表示uerstat &amp; S3C2410_UERSTAT_ANY的值为假的可能性大一些<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 另外还有一个likely(value)表示value的值为真的可能性更大一些<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>unlikely<span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_ANY<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若break错误,递增icount.brk计算器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_BREAK<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>brk<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uart_handle_break<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000FF;">goto</span> ignore_char<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若frame错误,递增icount.frame计算器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_FRAME<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>frame<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若overrun错误,递增icount.overrun计算器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_OVERRUN<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>overrun<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 查看我们是否关心该Rx error<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * port-&gt;read_status_mask保存着我们感兴趣的Rx error status<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uerstat <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">=</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>read_status_mask<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若我们关心该Rx error,则将flag设置为对应的error flag */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_BREAK<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag <span style="color:#0000CC;">=</span> TTY_BREAK<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span> <span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> S3C2410_UERSTAT_PARITY<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag <span style="color:#0000CC;">=</span> TTY_PARITY<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span> <span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uerstat <span style="color:#0000CC;">&amp;</span> <span style="color:#0000CC;">(</span> S3C2410_UERSTAT_FRAME <span style="color:#0000CC;">|</span> S3C2410_UERSTAT_OVERRUN<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag <span style="color:#0000CC;">=</span> TTY_FRAME<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 处理sys字符 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uart_handle_sysrq_char<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> ch<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> ignore_char<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 将接收到的字符插入到tty设备的flip缓冲 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uart_insert_char<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> uerstat<span style="color:#0000CC;">,</span> S3C2410_UERSTAT_OVERRUN<span style="color:#0000CC;">,</span> ch<span style="color:#0000CC;">,</span> flag<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
ignore_char<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">continue</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 刷新tty设备的flip缓冲,将接受到的数据传给行规则层 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;tty_flip_buffer_push<span style="color:#0000CC;">(</span>tty<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> IRQ_HANDLED<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 串口发送中断处理函数,将用户空间的数据(保存在环形缓冲xmit里)发送出去 */</span><br>
<span style="color:#0000FF;">static</span> irqreturn_t gprs_uart_tx_chars<span style="color:#0000CC;">(</span><span style="color:#0000FF;">int</span> irq<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">void</span> <span style="color:#0000CC;">*</span>dev_id<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port <span style="color:#0000CC;">=</span> dev_id<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> circ_buf <span style="color:#0000CC;">*</span>xmit <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>info<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>xmit<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 获取环线缓冲 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> <span style="color:#FF0000;">count</span> <span style="color:#0000CC;">=</span> 256<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若设置了xChar字符 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>x_char<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 将该xChar发送出去 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wr_regb<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UTXH<span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>x_char<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 递增发送计数 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>tx<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 清除xChar */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>x_char <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 退出中断处理 */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> out<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 如果没有更多的字符需要发送(环形缓冲为空)，<br>
&nbsp;&nbsp;&nbsp;&nbsp; * 或者uart Tx已停止，<br>
&nbsp;&nbsp;&nbsp;&nbsp; * 则停止uart并退出中断处理函数<br>
&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uart_circ_empty<span style="color:#0000CC;">(</span>xmit<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">|</span><span style="color:#0000CC;">|</span> uart_tx_stopped<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gprs_uart_stop_tx<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> out<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 循环发送数据,直到环形缓冲为空,最多一次中断发送256字节数据 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">while</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">!</span>uart_circ_empty<span style="color:#0000CC;">(</span>xmit<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">&amp;</span> <span style="color:#FF0000;">count</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">-</span> <span style="color:#0000CC;">&gt;</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若Tx FIFO已满,退出循环 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>rd_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFSTAT<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&amp;</span> S3C2410_UFSTAT_TXFULL<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 将要发送的数据写入Tx FIFO */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wr_regb<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UTXH<span style="color:#0000CC;">,</span> xmit<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>buf<span style="color:#0000CC;">[</span>xmit<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>tail<span style="color:#0000CC;">]</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 移向循环缓冲中下一要发送的数据 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmit<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>tail <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">(</span>xmit<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>tail <span style="color:#0000CC;">+</span> 1<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&amp;</span> <span style="color:#0000CC;">(</span>UART_XMIT_SIZE <span style="color:#0000CC;">-</span> 1<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>icount<span style="color:#0000CC;">.</span>tx<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 如果环形缓冲区中剩余的字符少于WAKEUP_CHARS，唤醒上层 */</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uart_circ_chars_pending<span style="color:#0000CC;">(</span>xmit<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&lt;</span> WAKEUP_CHARS<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uart_write_wakeup<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 如果环形缓冲为空，则停止发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>uart_circ_empty<span style="color:#0000CC;">(</span>xmit<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gprs_uart_stop_tx<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;out<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> IRQ_HANDLED<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 启动串口端口,在打开该驱动的设备文件时会调用该函数来申请串口中断,并设置串口为可接受,也可发送 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_startup<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> flags<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> ret<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span> <span style="color:#0000CC;">*</span>portname <span style="color:#0000CC;">=</span> to_platform_device<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>dev<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>name<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为不可接受,也不可发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_lock_irqsave<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 申请接收中断 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> request_irq<span style="color:#0000CC;">(</span>RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span> gprs_uart_rx_chars<span style="color:#0000CC;">,</span> 0<span style="color:#0000CC;">,</span> portname<span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ret <span style="color:#0000CC;">!</span><span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR <span style="color:#FF00FF;">"cannot get irq %d\n"</span><span style="color:#0000CC;">,</span> RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> ret<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为允许接收 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 1<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 申请发送中断 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> request_irq<span style="color:#0000CC;">(</span>TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span> gprs_uart_tx_chars<span style="color:#0000CC;">,</span> 0<span style="color:#0000CC;">,</span> portname<span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ret<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR <span style="color:#FF00FF;">"cannot get irq %d\n"</span><span style="color:#0000CC;">,</span> TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free_irq<span style="color:#0000CC;">(</span>RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> err<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为允许发送 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 1<span style="color:#0000CC;">;</span><br>
<br>
err<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_unlock_irqrestore<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> ret<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 关闭串口,在关闭驱动的设备文件时会调用该函数,释放串口中断 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_shutdown<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;rx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为不允许接收&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;free_irq<span style="color:#0000CC;">(</span>RX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 释放接收中断&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;tx_enabled<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口为不允许发送&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;free_irq<span style="color:#0000CC;">(</span>TX_IRQ<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span> port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 释放发送中断&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 设置串口参数 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_set_termios<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span>termios<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000FF;">struct</span> ktermios <span style="color:#0000CC;">*</span>old<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> flags<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> baud<span style="color:#0000CC;">,</span> quot<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> ulcon<span style="color:#0000CC;">,</span> ufcon <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 不支持moden控制信号线<br>
&nbsp;&nbsp;&nbsp;&nbsp; * HUPCL:&nbsp;&nbsp;&nbsp;&nbsp;关闭时挂断moden<br>
&nbsp;&nbsp;&nbsp;&nbsp; * CMSPAR:&nbsp;&nbsp;&nbsp;&nbsp;mark or space (stick) parity<br>
&nbsp;&nbsp;&nbsp;&nbsp; * CLOCAL:&nbsp;&nbsp;&nbsp;&nbsp;忽略任何moden控制线<br>
&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">=</span> <span style="color:#0000CC;">~</span><span style="color:#0000CC;">(</span>HUPCL <span style="color:#0000CC;">|</span> CMSPAR<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> CLOCAL<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 获取用户设置的串口波特率,并计算分频数(串口波特率除数quot) */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;baud <span style="color:#0000CC;">=</span> uart_get_baud_rate<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> termios<span style="color:#0000CC;">,</span> old<span style="color:#0000CC;">,</span> 0<span style="color:#0000CC;">,</span> 115200<span style="color:#0000CC;">*</span>8<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>baud <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> 38400 <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">&amp;</span> <span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>flags <span style="color:#0000CC;">&amp;</span> UPF_SPD_MASK<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> UPF_SPD_CUST<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quot <span style="color:#0000CC;">=</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>custom_divisor<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quot <span style="color:#0000CC;">=</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>uartclk <span style="color:#0000CC;">/</span> baud <span style="color:#0000CC;">/</span> 16 <span style="color:#0000CC;">-</span> 1<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置数据字长 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">switch</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span> CSIZE<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> CS5<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">=</span> S3C2410_LCON_CS5<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> CS6<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">=</span> S3C2410_LCON_CS6<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> CS7<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">=</span> S3C2410_LCON_CS7<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> CS8<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">default</span><span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">=</span> S3C2410_LCON_CS8<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">break</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 是否要求设置两个停止位(CSTOPB) */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span> CSTOPB<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_LCON_STOPB<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 是否使用奇偶检验 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span> PARENB<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span> PARODD<span style="color:#0000CC;">)</span>&nbsp;&nbsp;<span style="color:#FF9900;">/* 奇校验 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_LCON_PODD<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 偶校验 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_LCON_PEVEN<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 无校验 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ulcon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_LCON_PNONE<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>fifosize <span style="color:#0000CC;">&gt;</span> 1<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ufcon <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_UFCON_FIFOMODE <span style="color:#0000CC;">|</span> S3C2410_UFCON_RXTRIG8<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_lock_irqsave<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置FIFO控制寄存器、线控制寄存器和波特率除数寄存器 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFCON<span style="color:#0000CC;">,</span> ufcon<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_ULCON<span style="color:#0000CC;">,</span> ulcon<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UBRDIV<span style="color:#0000CC;">,</span> quot<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 更新串口FIFO的超时时限 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_update_timeout<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag<span style="color:#0000CC;">,</span> baud<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置我们感兴趣的Rx error */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>read_status_mask <span style="color:#0000CC;">=</span> S3C2410_UERSTAT_OVERRUN<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_iflag <span style="color:#0000CC;">&amp;</span> INPCK<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>read_status_mask <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_UERSTAT_FRAME <span style="color:#0000CC;">|</span> S3C2410_UERSTAT_PARITY<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置我们忽略的Rx error */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>ignore_status_mask <span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_iflag <span style="color:#0000CC;">&amp;</span> IGNPAR<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>ignore_status_mask <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_UERSTAT_OVERRUN<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_iflag <span style="color:#0000CC;">&amp;</span> IGNBRK <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">&amp;</span> termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_iflag <span style="color:#0000CC;">&amp;</span> IGNPAR<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>ignore_status_mask <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> S3C2410_UERSTAT_FRAME<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 若未设置CREAD(使用接收器),则忽略所有Rx error*/</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>termios<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>c_cflag <span style="color:#0000CC;">&amp;</span> CREAD<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>ignore_status_mask <span style="color:#0000CC;">|</span><span style="color:#0000CC;">=</span> RXSTAT_DUMMY_READ<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_unlock_irqrestore<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 获取串口类型 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span> <span style="color:#0000CC;">*</span>gprs_uart_type<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><span style="color:#FF9900;">/* 返回描述串口类型的字符串指针 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>type <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> PORT_S3C2410 <span style="color:#0000CC;">?</span> <span style="color:#FF00FF;">"gprs_uart:s3c2410_uart2"</span> <span style="color:#0000CC;">:</span> <span style="color:#FF0000;">NULL</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 申请串口一些必要的资源,如IO端口/IO内存资源,必要时还可以重新映射串口端口 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_request_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> resource <span style="color:#0000CC;">*</span>res<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">const</span> <span style="color:#0000FF;">char</span> <span style="color:#0000CC;">*</span>name <span style="color:#0000CC;">=</span> to_platform_device<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>dev<span style="color:#0000CC;">)</span><span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>name<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* request_mem_region请求分配IO内存,从开始port-&gt;mapbase,大小MAP_SIZE<br>
&nbsp;&nbsp;&nbsp;&nbsp; * port-&gt;mapbase保存当前串口的寄存器基地址(物理)<br>
&nbsp;&nbsp;&nbsp;&nbsp; * uart2: 0x50008000<br>
&nbsp;&nbsp;&nbsp;&nbsp; */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;res <span style="color:#0000CC;">=</span> request_mem_region<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>mapbase<span style="color:#0000CC;">,</span> MAP_SIZE<span style="color:#0000CC;">,</span> name<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>res <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> <span style="color:#FF0000;">NULL</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR<span style="color:#FF00FF;">"request_mem_region error: %p\n"</span><span style="color:#0000CC;">,</span> res<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> <span style="color:#0000CC;">-</span>EBUSY<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 释放串口已申请的IO端口/IO内存资源,必要时还需iounmap */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_release_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 释放已分配IO内存 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;release_mem_region<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>mapbase<span style="color:#0000CC;">,</span> MAP_SIZE<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* 执行串口所需的自动配置 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> gprs_uart_config_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span> flags<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> retval<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 请求串口 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;retval <span style="color:#0000CC;">=</span> gprs_uart_request_port<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口类型 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>flags <span style="color:#0000CC;">&amp;</span> UART_CONFIG_TYPE <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">&amp;</span> retval <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>type <span style="color:#0000CC;">=</span> PORT_S3C2410<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* The UART operations structure */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">struct</span> uart_ops gprs_uart_ops <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>start_tx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_start_tx<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Start transmitting */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>stop_tx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_stop_tx<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Stop transmission */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>stop_rx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_stop_rx<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Stop reception */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>enable_ms&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_enable_ms<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Enable modem status signals */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>tx_empty&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_tx_empty<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Transmitter busy? */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>get_mctrl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_get_mctrl<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Get modem control */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>set_mctrl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_set_mctrl<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Set modem control */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>break_ctl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_break_ctl<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Set break signal */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>startup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_startup<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* App opens GPRS_UART */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span><span style="color:#FF0000;">shutdown</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_shutdown<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* App closes GPRS_UART */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>set_termios&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_set_termios<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Set termios */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_type<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Get UART type */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>request_port&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_request_port<span style="color:#0000CC;">,</span>&nbsp;&nbsp;<span style="color:#FF9900;">/* Claim resources associated with a GPRS_UART port */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>release_port&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_release_port<span style="color:#0000CC;">,</span>&nbsp;&nbsp;<span style="color:#FF9900;">/* Release resources associated with a GPRS_UART port */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>config_port&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> gprs_uart_config_port<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Configure when driver adds a GPRS_UART port */</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#FF9900;">/* Uart driver for GPRS_UART */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">struct</span> uart_driver gprs_uart_driver <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>owner <span style="color:#0000CC;">=</span> THIS_MODULE<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Owner */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>driver_name <span style="color:#0000CC;">=</span> DEV_NAME<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Driver name */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>dev_name <span style="color:#0000CC;">=</span> DEV_NAME<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Device node name */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>major <span style="color:#0000CC;">=</span> GPRS_UART_MAJOR<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Major number */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>minor <span style="color:#0000CC;">=</span> GPRS_UART_MINOR<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Minor number start */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>nr <span style="color:#0000CC;">=</span> 1<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 <span style="color:#FF9900;">/* Number of UART ports */</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#FF9900;">/* Uart port for GPRS_UART port */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">struct</span> uart_port gprs_uart_port <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>irq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> IRQ_S3CUART_RX2<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* IRQ */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>fifosize&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> GPRS_UART_FIFO_SIZE<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Size of the FIFO */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>iotype&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> UPIO_MEM<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* IO memory */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>flags&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> UPF_BOOT_AUTOCONF<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* UART port flag */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>ops&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_ops<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* UART operations */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span><span style="color:#FF0000;">line</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* UART port number */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> __SPIN_LOCK_UNLOCKED<span style="color:#0000CC;">(</span>gprs_uart_port<span style="color:#0000CC;">.</span>lock<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#FF9900;">/* 初始化指定串口端口 */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_init_port<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> uart_port <span style="color:#0000CC;">*</span>port<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>platdev<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">long</span> flags<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">unsigned</span> <span style="color:#0000FF;">int</span> gphcon<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>platdev <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> <span style="color:#FF0000;">NULL</span><span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> <span style="color:#0000CC;">-</span>ENODEV<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>dev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> <span style="color:#0000CC;">&amp;</span>platdev<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>dev<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口波特率时钟频率 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>uartclk&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> clk_get_rate<span style="color:#0000CC;">(</span>clk_get<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>platdev<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>dev<span style="color:#0000CC;">,</span> <span style="color:#FF00FF;">"pclk"</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置串口的寄存器基地址(物理): 0x50008000 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>mapbase&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> S3C2410_PA_UART2<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 设置当前串口的寄存器基地址(虚拟): 0xF5008000 */</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>membase&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> S3C24XX_VA_UART <span style="color:#0000CC;">+</span> <span style="color:#0000CC;">(</span>S3C2410_PA_UART2 <span style="color:#0000CC;">-</span> S3C24XX_PA_UART<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_lock_irqsave<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UCON<span style="color:#0000CC;">,</span> S3C2410_UCON_DEFAULT<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_ULCON<span style="color:#0000CC;">,</span> S3C2410_LCON_CS8 <span style="color:#0000CC;">|</span> S3C2410_LCON_PNONE<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;wr_regl<span style="color:#0000CC;">(</span>port<span style="color:#0000CC;">,</span> S3C2410_UFCON<span style="color:#0000CC;">,</span> S3C2410_UFCON_FIFOMODE<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">|</span> S3C2410_UFCON_RXTRIG8 <span style="color:#0000CC;">|</span> S3C2410_UFCON_RESETBOTH<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 将I/O port H的gph6和gph7设置为TXD2和RXD2 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;gphcon <span style="color:#0000CC;">=</span> readl<span style="color:#0000CC;">(</span>S3C2410_GPHCON<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;gphcon <span style="color:#0000CC;">&amp;</span><span style="color:#0000CC;">=</span> <span style="color:#0000CC;">~</span><span style="color:#0000CC;">(</span><span style="color:#0000CC;">(</span>0x5<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">&lt;</span><span style="color:#0000CC;">&lt;</span> 12<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;writel<span style="color:#0000CC;">(</span>gphcon<span style="color:#0000CC;">,</span> S3C2410_GPHCON<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;spin_unlock_irqrestore<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>port<span style="color:#0000CC;">-</span><span style="color:#0000CC;">&gt;</span>lock<span style="color:#0000CC;">,</span> flags<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* Platform driver probe */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> __init gprs_uart_probe<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>dev<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> ret<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 初始化串口 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> gprs_uart_init_port<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">,</span> dev<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ret <span style="color:#0000CC;">&lt;</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR<span style="color:#FF00FF;">"gprs_uart_probe: gprs_uart_init_port error: %d\n"</span><span style="color:#0000CC;">,</span> ret<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> ret<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 添加串口 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;ret <span style="color:#0000CC;">=</span> uart_add_one_port<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ret <span style="color:#0000CC;">&lt;</span> 0<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR<span style="color:#FF00FF;">"gprs_uart_probe: uart_add_one_port error: %d\n"</span><span style="color:#0000CC;">,</span> ret<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> ret<span style="color:#0000CC;">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 将串口uart_port结构体保存在platform_device-&gt;dev-&gt;driver_data中 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;platform_set_drvdata<span style="color:#0000CC;">(</span>dev<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* Called when the platform driver is unregistered */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_remove<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>dev<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;platform_set_drvdata<span style="color:#0000CC;">(</span>dev<span style="color:#0000CC;">,</span> <span style="color:#FF0000;">NULL</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* 移除串口 */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_remove_one_port<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* Suspend power management event */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_suspend<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>dev<span style="color:#0000CC;">,</span> pm_message_t state<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_suspend_port<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* Resume after a previous suspend */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> gprs_uart_resume<span style="color:#0000CC;">(</span><span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>dev<span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_resume_port<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&amp;</span>gprs_uart_port<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#FF9900;">/* Platform driver for GPRS_UART */</span><br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">struct</span> platform_driver gprs_plat_driver <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>probe <span style="color:#0000CC;">=</span> gprs_uart_probe<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Probe method */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span><span style="color:#FF0000;">remove</span> <span style="color:#0000CC;">=</span> __exit_p<span style="color:#0000CC;">(</span>gprs_uart_remove<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Detach method */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>suspend <span style="color:#0000CC;">=</span> gprs_uart_suspend<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Power suspend */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>resume <span style="color:#0000CC;">=</span> gprs_uart_resume<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#FF9900;">/* Resume after a suspend */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>driver <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>owner&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">=</span> THIS_MODULE<span style="color:#0000CC;">,</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">.</span>name <span style="color:#0000CC;">=</span> DEV_NAME<span style="color:#0000CC;">,</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Driver name */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><span style="color:#0000CC;">,</span><br>
<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span><br>
<br>
<span style="color:#FF9900;">/* Platform device for GPRS_UART */</span><br>
<span style="color:#0000FF;">struct</span> platform_device <span style="color:#0000CC;">*</span>gprs_plat_device<span style="color:#0000CC;">;</span> <br>
<br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">int</span> __init gprs_init_module<span style="color:#0000CC;">(</span><span style="color:#0000FF;">void</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> retval<span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Register uart_driver for GPRS_UART */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;retval <span style="color:#0000CC;">=</span> uart_register_driver<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>0 <span style="color:#0000CC;">!</span><span style="color:#0000CC;">=</span> retval<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR <span style="color:#FF00FF;">"gprs_init_module: can't register the GPRS_UART driver %d\n"</span><span style="color:#0000CC;">,</span> retval<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> retval<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Register platform device for GPRS_UART. Usually called<br>
&nbsp;&nbsp;&nbsp;&nbsp;during architecture-specific setup */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;gprs_plat_device <span style="color:#0000CC;">=</span> platform_device_register_simple<span style="color:#0000CC;">(</span>DEV_NAME<span style="color:#0000CC;">,</span> 0<span style="color:#0000CC;">,</span> <span style="color:#FF0000;">NULL</span><span style="color:#0000CC;">,</span> 0<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>IS_ERR<span style="color:#0000CC;">(</span>gprs_plat_device<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retval <span style="color:#0000CC;">=</span> PTR_ERR<span style="color:#0000CC;">(</span>gprs_plat_device<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR <span style="color:#FF00FF;">"gprs_init_module: can't register platform device %d\n"</span><span style="color:#0000CC;">,</span> retval<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> fail_reg_plat_dev<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Announce a matching driver for the platform<br>
&nbsp;&nbsp;&nbsp;&nbsp;devices registered above */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;retval <span style="color:#0000CC;">=</span> platform_driver_register<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_plat_driver<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>0 <span style="color:#0000CC;">!</span><span style="color:#0000CC;">=</span> retval<span style="color:#0000CC;">)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="color:#0000CC;">(</span>KERN_ERR <span style="color:#FF00FF;">"gprs_init_module: can't register platform driver %d\n"</span><span style="color:#0000CC;">,</span> retval<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">goto</span> fail_reg_plat_drv<span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> 0<span style="color:#0000CC;">;</span> <span style="color:#FF9900;">/* succeed */</span><br>
<br>
fail_reg_plat_drv<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;platform_device_unregister<span style="color:#0000CC;">(</span>gprs_plat_device<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
fail_reg_plat_dev<span style="color:#0000CC;">:</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_unregister_driver<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">return</span> retval<span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
<span style="color:#0000FF;">static</span> <span style="color:#0000FF;">void</span> __exit gprs_exit_module<span style="color:#0000CC;">(</span><span style="color:#0000FF;">void</span><span style="color:#0000CC;">)</span><br>
<span style="color:#0000CC;">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* The order of unregistration is important. Unregistering the<br>
&nbsp;&nbsp;&nbsp;&nbsp;UART driver before the platform driver will crash the system */</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Unregister the platform driver */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;platform_driver_unregister<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_plat_driver<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Unregister the platform devices */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;platform_device_unregister<span style="color:#0000CC;">(</span>gprs_plat_device<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF9900;">/* Unregister the GPRS_UART driver */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;uart_unregister_driver<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&amp;</span>gprs_uart_driver<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<span style="color:#0000CC;">}</span><br>
<br>
module_init<span style="color:#0000CC;">(</span>gprs_init_module<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
module_exit<span style="color:#0000CC;">(</span>gprs_exit_module<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
<br>
MODULE_AUTHOR<span style="color:#0000CC;">(</span><span style="color:#FF00FF;">"lingd"</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
MODULE_LICENSE<span style="color:#0000CC;">(</span><span style="color:#FF00FF;">"Dual BSD/GPL"</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br>
</fifo></span>
								</span></p>
							</td>
						</tr>
					</tbody>
				</table>
					</div>                                   </div>
            <!-- <div class="Blog_con3_1">管理员在2009年8月13日编辑了该文章文章。</div> -->
            <div class="Blog_con2_1 Blog_con3_2">
              <div>
			  <!--<img src="/image/default/tu_8.png">-->
			  <!-- JiaThis Button BEGIN -->
				<div data-bd-bind="1463574993967" class="bdsharebuttonbox bdshare-button-style0-16"><a class="bds_more" href="#" data-cmd="more"></a><a class="bds_qzone" title="分享到QQ空间" href="#" data-cmd="qzone"></a><a class="bds_tsina" title="分享到新浪微博" href="#" data-cmd="tsina"></a><a class="bds_tqq" title="分享到腾讯微博" href="#" data-cmd="tqq"></a><a class="bds_renren" title="分享到人人网" href="#" data-cmd="renren"></a><a class="bds_weixin" title="分享到微信" href="#" data-cmd="weixin"></a></div>
<script>window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];</script>
				<!-- JiaThis Button END -->
			  </div>
              阅读(1361) | 评论(0) | 转发(2) |
			                <div class="HT_line3"></div>
            </div>
            <div class="Blog_con3_3">
              <div><span id="digg_num">0</span><a href="javascript:void(0)" id="digg" bid="3999558" url="/blog/digg.html"></a></div>
              <p>上一篇：<a href="http://blog.chinaunix.net/uid-27041925-id-3998634.html">Linux串口编程详解 </a></p>
              <p>下一篇：<a href="http://blog.chinaunix.net/uid-27041925-id-3999810.html">基于Linux2.6.22和s3c2440的串口驱动简析---(1) </a></p>
            </div>
          </div>
          <div class="Blog_con3_4">
            <div class="Blog_tit2 Blog_tit6">相关热门文章</div>
			            <ul class="Blog_ul7">
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-10900999-id-2920737.html" title="linux 常见服务端口" target="blank">linux 常见服务端口</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-20457694-id-1944680.html" title="xmanager 2.0 for linux配置" target="blank">xmanager 2.0 for linux配置</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-21025382-id-168762.html" title="【ROOTFS搭建】busybox的httpd使用CGI脚本(BusyBox httpd CGI scripts)" target="blank">【ROOTFS搭建】busybox的httpd...</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-26824563-id-4591418.html" title="openwrt中luci学习笔记" target="blank">openwrt中luci学习笔记</a></li>
						  <li><span class="Blog_span7"></span><a href="http://blog.chinaunix.net/uid-20378509-id-1956694.html" title="什么是shell" target="blank">什么是shell</a></li>
			            </ul>
            <ul class="Blog_ul7">
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785970" title="linux dhcp  peizhi roc" target="blank">linux dhcp  peizhi roc</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785964" title="关于Unix文件的软链接" target="blank">关于Unix文件的软链接</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785935" title="求教这个命令什么意思，我是新手，刚刚学习solaris" target="blank">求教这个命令什么意思，我是新...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785919" title="sed -e &quot;/grep/d&quot; 是什么意思？谢谢" target="blank">sed -e "/grep/d" 是什么意思...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785702" title="谁能够帮我解决LINUX  2.6  10版本驱动" target="blank">谁能够帮我解决LINUX  2.6  10...</a></li>
			            </ul>
            <div class="clear"></div>
          </div>
		  <!--
          <div class="Blog_con3_4 Blog_con3_5">
            <div class="Blog_tit2 Blog_tit7">热门推荐</div>
            <ul>
			              <li><a href="" title="" target='blank' ></a></li>
			            </ul>
          </div>
		  -->
        </div>
      </div>
      <div class="Blog_right1_7" id="replyList">
		<div class="Blog_tit3">给主人留下些什么吧！~~</div>
				<!--暂无内容-->
				<!-- 评论分页-->
		<div class="Blog_right1_6 Blog_right1_12">
        		</div>
		<!-- 评论分页-->
        <div class="Blog_right1_10">
          <div class="Blog_tit3">评论热议</div>
		  		 <!--未登录 -->
        <div class="Blog_right1_8">
          <div class="nologin_con1"> 请登录后评论。
            <p><a href="http://blog.chinaunix.net/site/login.html" onclick="linkto()">登录</a> <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Ft.cublog.com%2F">注册</a></p>
          </div>
        </div>
        <br>
        <div>
            <div style="float:left;margin-left:70px;margin-right:10px;">
             <script type="text/javascript">
            var cpro_id = "u1625692";
            </script>
            <script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/c.js" type="text/javascript"></script>
            </div>
            <div style="margin-left:10px;">
            <script type="text/javascript">
            var cpro_id = "u1625694";
            </script>
            <script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/c.js" type="text/javascript"></script>
            </div>
        </div>
		
        </div>
      </div>
    </div>
  </div>
  <input id="report_url" value="/blog/ViewReport.html" type="hidden">

<script type="text/javascript">
  	//测试字符串的长度 一个汉字算2个字节
	function mb_strlen(str)
	{
		var len=str.length;
		var totalCount=0;
		for(var i=0;i<len;i++)
		{
			var c = str.charCodeAt(i);
			if ((c >= 0x0001 && c <= 0x007e) || (0xff60<=c && c<=0xff9f)) {
				totalCount++;
			}else{
				totalCount+=2;
			}
		}
		return totalCount;
	}
	/*
	var Util = {};
	Util.calWbText = function (text, max){
		if(max === undefined)
			max = 500;
		var cLen=0;
		var matcher = text.match(/[^\x00-\xff]/g),
			wlen  = (matcher && matcher.length) || 0;
		//匹配url链接正则 http://***
		var pattern = /http:\/\/([\w-]+\.)+[\w-]+(\/*[\w-\.\/\?%&=][^\s^\u4e00-\u9fa5]*)?/gi;
		//匹配的数据存入数组
		var arrPt = new Array();
		var i = 0;
		while((result = pattern.exec(text)) != null){
			arrPt[i] = result[0];
			i++;
		}
		//替换掉原文本中的链接
		for(var j = 0;j<arrPt.length;j++){
			text = text.replace(arrPt[j],"");
		}
		//减掉链接所占的长度
		return Math.floor((max*2 - text.length - wlen)/2 - 12*i);
	};
	*/
	var allowComment = '0';
	
	//举报弹出层
	function showJuBao(url, cid){
		
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 ,
                                        'blogurl' : window.location.href
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
	}

	$(function(){

		//创建管理员删除的弹出层
		$('#admin_article_del').click(function(){
			$.cover(false);
			asyncbox.open({
				id : 'class_thickbox',
				html : '<div class="HT_layer3_1"><ul><li class="HT_li1">操作原因：<select class="HT_sel7" id="del_type" name="del_type"><option value="广告文章">广告文章</option><option value="违规内容">违规内容</option><option value="标题不明">标题不明</option><option value="文不对题">文不对题</option></select></li><li class="HT_li1" ><input class="HT_btn4" id="admin_delete"  type="button" /></li></ul></div>',
				title : '选择类型',
				width : 300,
				height : 150,
				scroll : 'no',
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		$('#admin_delete').live('click' , function(){
			///blog/logicdel/id/3480184/url/%252Fblog%252Findex.html.html
			var type = $('#del_type').val();
			var url = '/blog/logicdel/id/3999558/url/%252Fuid%252F27041925.html.html';
			window.location.href= url + '?type=' + type;
		});


		//顶  js中暂未添加&过滤 
		$('#digg').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid = $('#digg').attr('bid');
			var url = $('#digg').attr('url');

			var digg_str = $.cookie('digg_id');
			if(digg_str != null)
			{
				var arr= new Array(); //定义一数组

				arr = digg_str.split(","); //字符分割     
				for( i=0 ; i < arr.length ; i++ )   
				{   
					if(bid == arr[i])
					{
						showErrorMsg('已经赞过该文章', '消息提示'); 
						return false;
					}
				} 
			}
			$.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
					if(msg.error == 0)
					{
						var num = parseInt($('#digg_num').html(),10);
						num += 1;
						$('#digg_num').html(num);
						$('#digg').die();

						if(digg_str == null)
						{
							$.cookie('digg_id', bid, {expires: 30 , path: '/'});
						}
						else
						{
							$.cookie('digg_id', digg_str + ',' + bid, {expires: 30 , path: '/'});
						}
						showSucceedMsg('谢谢' , '消息提示');
					}
					else if(msg.error == 1)
					{
						//showErrorMsg(msg.error_content , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
					}
					else if(msg.error == 2)
					{
						showErrorMsg(msg.error_content , '消息提示'); 
					}
				}
			});
		});
		//举报弹出层
		/*$('.box_report').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var url = $('#report_url').val();
			var cid = $(this).attr('cid');
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});*/


		//评论相关代码
		
		//点击回复显示评论框
		$('.Blog_a10').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var tid = $(this).attr('toid');//留言作者id
			var bid = $(this).attr('bid');//blogid
			var cid = $(this).attr('cid');//留言id
			var tname = $(this).attr('tname');
                         			var tpl  = '<div class="Blog_right1_9">';
				tpl +=	 '<div class="div2">';
				tpl +=     '<textarea name="" cols="" rows="" class="Blog_ar1_1" id="rmsg">文明上网，理性发言...</textarea>';
				tpl +=	 '</div>';
				tpl +=   '<div class="div3">';
				tpl +=		'<div class="div3_2"><a href="javascript:void(0);" class="Blog_a11" id="quota_sbumit" url="/Comment/PostComment.html" tid="'+tid+'" bid="'+bid+'" cid="'+cid+'" tname="'+tname+'" ></a><a href="javascript:void(0)" id="qx_comment" class="Blog_a12"></a></div>';
				tpl +=		'<div class="div3_1"><a href="javascript:void(0);" id="mface"><span></span>表情</a></div>';
				tpl +=		'<div class="clear"></div>';
				tpl +=	 '</div>';
				tpl +=  '</div>';
                                 			$('.z_move_comment').html('');
			$(this).parents('.Blog_right1_8').find('.z_move_comment').html(tpl).show();
		});
		//引用的评论提交
		$('#quota_sbumit').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid   = $(this).attr('bid');
			var tid   = $(this).attr('tid');//被引用人的id
			var qid   = $(this).attr('cid');//引用的id
			var url = $(this).attr('url');
			var text = $('#rmsg').val();
			var tname = $(this).attr('tname');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : tid , 'qid' : qid , 'text': text , 'tname' : tname },
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1){
						var tpl =  '<div class="Blog_right1_8">';
							tpl+=     '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl+=     '<div class="Blog_right_font1">';
							tpl+=         '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl+=         '<p class="Blog_p7"><a href="' + data.info.quota.url + '">' + data.info.quota.username + '</a>：'+ data.info.quota.content + '</p>';
							tpl+=         '<p class="Blog_p8">' + data.info.content + '</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '  tname = ' + data.info.username + ' >回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '" >删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '" >举报</a></span></div>';
							tpl+=         '<div class="z_move_comment" style="display:none"></div>';
							tpl+=	      '<div class="Blog_line1"></div></div>';
							$('#replyList .Blog_right1_8:first').before(tpl);
							$('.z_move_comment').html('').hide();
				    }
					else if(data.code == -1){
						//showErrorMsg(data.info , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
			        }
                },
			    error: function(){//请求出错处理
                        
                }
			});
		});
		//底部发表评论
		$('#submitmsg').click(function(){
			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var bid   = $(this).attr('bid');
			var toid  = $(this).attr('toid');
			var text = $('#reply').val();
			var url = $(this).attr('url');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : toid ,'text': text},
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1)
					{
						var tpl   = '<div class="Blog_right1_8">';
							tpl  +=   '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl  +=	  '<div class="Blog_right_font1">';
							tpl  +=       '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl  +=       '<p class="Blog_p6">' + data.info.content + '</p>';
							tpl  +=		  '<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '>回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '">删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '">举报</a></div>';
							tpl  +=		  '<div class="z_move_comment" style="display:none"></div>';
							tpl  +=    '</div><div class="Blog_line1"></div></div>';
							$('.Blog_tit3:first').after(tpl);
							$('#reply').val('文明上网，理性发言...');
					}
					else if(data.code == -1)
					{
						showErrorMsg(data.info , '消息提示'); 
			        }
                },
			    error: function(){//请求出错处理
                        
                }
		    });
			
		});
		//底部评论重置
		$('#reset_comment').click(function(){
			$('#reply').val('文明上网，理性发言...');
		});
		//取消回复
		$('#qx_comment').live('click' , function(){
			$('.z_move_comment').html('').hide();
		});


		$('#rmsg, #reply').live({
		    focus:function(){
			    if($(this).val() == '文明上网，理性发言...'){
			        $(this).val('');
			    }
			},
			blur:function(){
		        if($(this).val() == ''){
			        $(this).val('文明上网，理性发言...');
			    }
			}
		});
		//删除留言确认
		$('.comment_del_mark').live('click' , function(){
			var url = $(this).attr('url');
			asyncbox.confirm('删除留言','确认', function(action){
				if(action == 'ok')
				{
					location.href = url;
				}
			});
		});
		//删除时间确认
		$('.del_article_id').click(function(){
			var delurl = $(this).attr('delurl');
			asyncbox.confirm('删除文章','确认', function(action){
				if(action == 'ok')
				{
					location.href = delurl;
				}
			});
		});
		/*
		//字数限制
		$('#rmsg, #reply').live('keyup', function(){
			var id = $(this).attr('id');
			var left = Util.calWbText($(this).val(), 500);
			var eid = '#errmsg';
			
			if(id == 'reply') eid =  '#rerrmsg';
			if (left >= 0)
		        $(eid).html('您还可以输入<span>' + left + '</span>字');
		    else
		        $(eid).html('<font color="red">您已超出<span>' + Math.abs(left) + '</span>字 </font>');
		});
		*/
		//加载表情
	    $('#face').qqFace({id : 'facebox1', assign : 'reply', path : '/image/qqface/'});
	    $('#mface').qqFace({id : 'facebox', assign : 'rmsg', path:'/image/qqface/'});
	    
		/*
		$('#class_one_id').change(function(){
			alert(123213);
			var id = parseInt($(this).val() , 10);
			if(id == 0) return false;
			$('.hidden_son_class span').each(function( index , dom ){
				if( dom.attr('cid')  == id )
				{
				}
			});
		});
		*/
		//转载文章
		var turn_url = "/blog/viewClassPart.html";
		$('#repost_bar').click(function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var id = $(this).attr('bid');
			asyncbox.open({
				id  : 'turn_class_thickbox',
				url : turn_url,
				title : '转载文章',
				width : 330,
				height : 131,
				scroll : 'no',
				data : {
					'id'	 : id
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		/*
	    //转发文章
	    $('#repost_bar').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
	    	var bid  = $(this).attr('bid');
	    	var url  = $(this).attr('url');
	    	asyncbox.confirm('转载文章','确认', function(action){
	    	  if(action == 'ok'){
	    	    $.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
				  if(msg.error == 0){
				    showSucceedMsg('转发成功！', '消息提示');
				  }else if(msg.error == 1){
				    //location.href = '/index.php?r=site/login';
					showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				  }else{
				    showErrorMsg(msg.error_content, '消息提示');
			      }
				}
			  });
	    	  }
	    	});

		});
		*/

	});
</script>
<!--该部分应该放在输出代码块的后面才起作用 -->
<script type="text/javascript">

SyntaxHighlighter.autoloader(
	'applescript			/highlight/scripts/shBrushAppleScript.js',
	'actionscript3 as3		/highlight/scripts/shBrushAS3.js',
	'bash shell				/highlight/scripts/shBrushBash.js',
	'coldfusion cf			/highlight/scripts/shBrushColdFusion.js',
	'cpp c					/highlight/scripts/shBrushCpp.js',
	'c# c-sharp csharp		/highlight/scripts/shBrushCSharp.js',
	'css					/highlight/scripts/shBrushCss.js',
	'delphi pascal			/highlight/scripts/shBrushDelphi.js',
	'diff patch pas			/highlight/scripts/shBrushDiff.js',
	'erl erlang				/highlight/scripts/shBrushErlang.js',
	'groovy					/highlight/scripts/shBrushGroovy.js',
	'java					/highlight/scripts/shBrushJava.js',
	'jfx javafx				/highlight/scripts/shBrushJavaFX.js',
	'js jscript javascript	/highlight/scripts/shBrushJScript.js',
	'perl pl				/highlight/scripts/shBrushPerl.js',
	'php					/highlight/scripts/shBrushPhp.js',
	'text plain				/highlight/scripts/shBrushPlain.js',
	'py python				/highlight/scripts/shBrushPython.js',
	'ruby rails ror rb		/highlight/scripts/shBrushRuby.js',
	'scala					/highlight/scripts/shBrushScala.js',
	'sql					/highlight/scripts/shBrushSql.js',
	'vb vbnet				/highlight/scripts/shBrushVb.js',
	'xml xhtml xslt html	/highlight/scripts/shBrushXml.js'
);
SyntaxHighlighter.all();


function code_hide(id){
	var code = document.getElementById(id).style.display;
	if(code == 'none'){
		document.getElementById(id).style.display = 'block';
	}else{
		document.getElementById(id).style.display = 'none';
	}
}
</script>
<!--回顶部js2011.12.30-->
<script language="javascript">
 lastScrollY=0;
 function heartBeat(){
 var diffY;
 if (document.documentElement && document.documentElement.scrollTop)
     diffY = document.documentElement.scrollTop;
 else if (document.body)
     diffY = document.body.scrollTop
 else
     {/*Netscape stuff*/}
 percent=.1*(diffY-lastScrollY);
 if(percent>0)percent=Math.ceil(percent);
 else percent=Math.floor(percent);
 document.getElementById("full").style.top=parseInt(document.getElementById("full").style.top)+percent+"px";
 lastScrollY=lastScrollY+percent;
 if(lastScrollY<200)
 {
 document.getElementById("full").style.display="none";
 }
 else
 {
 document.getElementById("full").style.display="block";
 }
 }
 var gkuan=document.body.clientWidth;
 var ks=(gkuan-960)/2-30;
 suspendcode="<div id=\"full\" style='right:4px;POSITION:absolute;TOP:500px;z-index:100;width:20px; height:50px;cursor:pointer;'><a href=\"javascript:void(0)\" onclick=\"window.scrollTo(0,0);\"><img src=\"\/image\/top.png\" /></a></div>"
 document.write(suspendcode);
 window.setInterval("heartBeat()",1);
 </script><div id="full" style="right: 4px; position: absolute; top: 25500px; z-index: 100; width: 20px; height: 50px; cursor: pointer; display: block;"><a href="javascript:void(0)" onclick="window.scrollTo(0,0);"><img src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/top.png"></a></div>  <!-- footer -->
  <div class="Blog_footer" style="clear:both">
    <div><a href="http://www.chinaunix.net/about/index.shtml" target="_blank" rel="nofollow">关于我们</a> | <a href="http://www.it168.com/bottomfile/it168.shtml" target="_blank" rel="nofollow">关于IT168</a> | <a href="http://www.chinaunix.net/about/connect.html" target="_blank" rel="nofollow">联系方式</a> | <a href="http://www.chinaunix.net/about/service.html" target="_blank" rel="nofollow">广告合作</a> | <a href="http://www.it168.com//bottomfile/flgw/fl.htm" target="_blank" rel="nofollow">法律声明</a> | <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Fblog.chinaunix.net%2F" target="_blank" rel="nofollow">免费注册</a>
      <p>Copyright  2001-2010 ChinaUnix.net All Rights Reserved 北京皓辰网域网络信息技术有限公司. 版权所有 </p>
      <div>感谢所有关心和支持过ChinaUnix的朋友们
        <p>京ICP证041476号 京ICP证060528号</p>
      </div>
    </div>
  </div>
</div>
<script language="javascript">

//全局错误提示弹出框
function showErrorMsg(content, title, url){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span1"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="login_btn1" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	   asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//全局正确提示
function showSucceedMsg(content, title , url ){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span2"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="HT_btn2" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//关闭指定id的窗口
function close_windows(id){
	$.cover(false);
	$.close(id);
}


//公告
var tID;
var tn;                        // 高度
var nStopTime = 5000;        // 不同行间滚动时间隔的时间，值越小，移动越快
var nSpeed = 50;            // 滚动时，向上移动一像素间隔的时间，值越小，移动越快
var isMove = true;
var nHeight = 25;
var nS = 0;
var nNewsCount = 3;

/**
 * n 用于表示是否为第一次运行
 **/
function moveT(n)
{
    clearTimeout(tID)
    var noticev2 = document.getElementById("noticev2")
    nS = nSpeed;
    
    // 只在第一次调用时运行，初始化环境（有没有参数）
    if (n)
    {
        // 设置行高
        noticev2.style.lineHeight = nHeight + "px";
        // 初始化显示位置
        tn = 0;
        // 刚进入时在第一行停止时间
        nS = nStopTime;
    }
    
    // 判断鼠标是否指向层
    if (isMove)
    {
        // 向上移动一像素
        tn--;
        // 如果移动到最下面一行了，则移到顶行
        if (Math.abs(tn) == nNewsCount * nHeight)
        {
            tn = 0;
        }
        // 设置位置
        noticev2.style.marginTop = tn + "px";
        // 完整显示一行时，停止一段时间
        if (tn % nHeight == 0)
        {
            nS = nStopTime;
        }
    }

    tID = setTimeout("moveT()", nS);
}
moveT(1);    // 此处可以传入任何参数
</script>
<script language="javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/pv.js"></script>
<script>
function sendPV(){
    var pvTrack = new PvTrack();
    pvTrack.type = 35; // 频道类别ID
    pvTrack.channel = 189; // 频道ID
    pvTrack.pageType = 0;
    pvTrack.track();
}
window.setTimeout("sendPV()", 1000);
</script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20237423-2']);
  _gaq.push(['_setDomainName', '.chinaunix.net']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0ee5e8cdc4d43389b3d1bfd76e83216b' type='text/javascript'%3E%3C/script%3E"));

function linkto(){
    setCookie("returnUrl", location.href, 1463661392, "/");
}
function linktoOut(){
    setCookie("returnOutUrl", location.href, 1463661392, "/");
}
//JS写COOKIE
function setCookie(name, value, expires, path, domain){
	if(!arguments[2]) expires = 3600 * 24;
	if(!arguments[3]) path = "";
	if(!arguments[4]) domain = "";
	var str=name+"="+escape(value);
	if(expires!=""){
		var date=new Date();
		date.setTime(date.getTime()+expires*1000);
		str+=";expires="+date.toGMTString();
	}
	if(path!=""){
		str+=";path="+path;//指定可访问cookie的目录
	}
	if(domain!=""){
		str+=";domain="+domain;//指定可访问cookie的域
	}
	document.cookie = str;
}

</script><script src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/h.htm" type="text/javascript"></script>
<script type="text/javascript" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/jquery.js"></script>


<div id="asyncbox_cover" unselectable="on" style="opacity:0.1;filter:alpha(opacity=10);background:#000"></div><div id="asyncbox_clone"></div><div id="asyncbox_focus"></div><div id="asyncbox_load"><div><span></span></div></div><img style="display: none;" src="Linux%E4%B8%B2%E5%8F%A3%EF%BC%88serial%E3%80%81uart%EF%BC%89%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20-formycuteboy-ChinaUnix%E5%8D%9A%E5%AE%A2_files/baidu_jgylogo3.gif"></body></html>